{"version":3,"sources":["webpack://britecharts.[name]/webpack/universalModuleDefinition","webpack://britecharts.[name]/webpack/bootstrap","webpack://britecharts.[name]/external \"d3-time\"","webpack://britecharts.[name]/external \"d3-shape\"","webpack://britecharts.[name]/external \"d3-selection\"","webpack://britecharts.[name]/external \"d3-format\"","webpack://britecharts.[name]/external \"d3-array\"","webpack://britecharts.[name]/./src/charts/helpers/constants.js","webpack://britecharts.[name]/external \"d3-scale\"","webpack://britecharts.[name]/./src/charts/helpers/color.js","webpack://britecharts.[name]/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://britecharts.[name]/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://britecharts.[name]/./node_modules/@babel/runtime/helpers/typeof.js","webpack://britecharts.[name]/external \"d3-axis\"","webpack://britecharts.[name]/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://britecharts.[name]/./src/charts/helpers/project.js","webpack://britecharts.[name]/external \"d3-time-format\"","webpack://britecharts.[name]/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://britecharts.[name]/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://britecharts.[name]/external \"d3-ease\"","webpack://britecharts.[name]/./src/charts/helpers/export.js","webpack://britecharts.[name]/./node_modules/base-64/base64.js","webpack://britecharts.[name]/./src/charts/helpers/style.js","webpack://britecharts.[name]/./src/charts/helpers/number.js","webpack://britecharts.[name]/external \"d3-transition\"","webpack://britecharts.[name]/external \"d3-dispatch\"","webpack://britecharts.[name]/./src/charts/helpers/load.js","webpack://britecharts.[name]/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://britecharts.[name]/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://britecharts.[name]/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://britecharts.[name]/./src/charts/helpers/grid.js","webpack://britecharts.[name]/(webpack)/buildin/module.js","webpack://britecharts.[name]/(webpack)/buildin/global.js","webpack://britecharts.[name]/./src/charts/helpers/date.js","webpack://britecharts.[name]/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://britecharts.[name]/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://britecharts.[name]/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://britecharts.[name]/./src/charts/helpers/filter.js","webpack://britecharts.[name]/./src/charts/helpers/type.js","webpack://britecharts.[name]/external \"d3-collection\"","webpack://britecharts.[name]/./src/charts/helpers/classes.js","webpack://britecharts.[name]/./src/charts/helpers/axis.js","webpack://britecharts.[name]/./src/charts/stacked-area/stacked-area.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__11__","__WEBPACK_EXTERNAL_MODULE__14__","__WEBPACK_EXTERNAL_MODULE__17__","__WEBPACK_EXTERNAL_MODULE__22__","__WEBPACK_EXTERNAL_MODULE__23__","__WEBPACK_EXTERNAL_MODULE__39__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","axisTimeCombinations","MINUTE_HOUR","HOUR_DAY","DAY_MONTH","MONTH_YEAR","CUSTOM","timeBenchmarks","ONE_AND_A_HALF_YEARS","ONE_YEAR","ONE_DAY","hoursHuman","motion","duration","curveMap","linear","curveLinear","basis","curveBasis","cardinal","curveCardinal","catmullRom","curveCatmullRom","monotoneX","curveMonotoneX","monotoneY","curveMonotoneY","natural","curveNatural","step","curveStep","stepAfter","curveStepAfter","stepBefore","curveStepBefore","emptyDonutData","quantity","percentage","timeIntervals","timeMillisecond","utcMillisecond","timeSecond","utcSecond","timeMinute","utcMinute","timeHour","utcHour","timeDay","utcDay","timeWeek","utcWeek","timeSunday","utcSunday","timeMonday","utcMonday","timeTuesday","utcTuesday","timeWednesday","utcWednesday","timeThursday","utcThursday","timeFriday","utcFriday","timeSaturday","utcSaturday","timeMonth","utcMonth","timeYear","utcYear","colorGradients","greenBlue","orangePink","bluePurple","colorGradientsHuman","britecharts","grey","orange","blueGreen","teal","green","yellow","pink","purple","red","colorSchemas","colorSchemasHuman","aloeGreen","greenColor","blueColor","yellowColor","orangeColor","singleColors","pinkColor","purpleColor","singleColorsHuman","obj","configurable","writable","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arr","_typeof","iterator","constructor","len","length","arr2","Array","dataKeyDeprecationMessage","keyName","console","warn","arrayLikeToArray","minLen","toString","slice","from","test","arrayWithHoles","iterableToArrayLimit","nonIterableRest","isBrowser","isIE","navigator","msSaveOrOpenBlob","encoder","btoa","base64","encode","config","styleClass","defaultFilename","chartBackground","imageSourceBase","titleFontSize","titleFontFamily","titleTopOffset","this","exportChart","d3svg","filename","title","error","loadImage","convertSvgToHtml","then","img","canvas","createCanvas","width","height","handleImageLoad","attr","html","serializeWithStyles","initializeSerializer","serializer","node","userAgent","search","replace","formatHtmlByBrowser","styleBackgroundString","addBackground","prependTitle","parseInt","document","createElement","createImage","svgHtml","callback","Image","Error","src","encodeURIComponent","match","p1","String","fromCharCode","drawImageOnCanvas","image","getContext","drawImage","extensionType","url","toDataURL","link","href","download","body","appendChild","click","removeChild","downloadCanvas","Promise","res","rej","addEventListener","err","svgWidth","margin","left","freeExports","freeGlobal","global","InvalidCharacterError","message","TABLE","REGEX_SPACE_CHARACTERS","input","a","b","buffer","padding","output","position","charCodeAt","charAt","bitStorage","bitCounter","indexOf","noStyleTags","BASE","HEAD","HTML","META","NOFRAME","NOSCRIPT","PARAM","SCRIPT","STYLE","TITLE","tagNames","computeDefaultStyleByTagName","tagName","defaultStyle","element","computedStyle","getComputedStyle","forEach","style","defaultStylesByTagName","elem","elements","result","cssTexts","nodeType","Node","ELEMENT_NODE","querySelectorAll","el","toUpperCase","cssText","cssPropName","outerHTML","map","idCounter","integerValueFormats","small","limit","format","medium","large","decimalValueFormats","getValueSize","limits","size","calcLinearRegression","dataPoints","x","y","xy","x2","denominator","intercept","slope","minX","min","maxX","max","x1","y1","y2","calculatePercent","total","decimals","percent","isInteger","formatDecimalValue","formatIntegerValue","uniqueId","prefix","id","linearGradient","barLoadingMarkup","donutLoadingMarkup","lineLoadingMarkup","stackedAreaLoadingMarkup","sparkLineLoadingMarkup","brushLoadingMarkup","isArray","iter","TypeError","classArray","scaleLinear","DIR","positionNumber","scale","positionCenter","offset","Math","bandwidth","round","gridBase","orient","range","offsetStart","offsetEnd","hideEdges","ticks","tickValues","classArr","gridBaseGenerator","context","values","hideFirst","hideLast","scaleTicks","apply","domain","shift","pop","getValues","copy","k","selection","initContainer","selectAll","asSelector","data","container","merge","enter","append","asList","line","order","lineExit","exit","lineEnter","exitPosition","isFinite","getAttribute","enterPosition","parentNode","__pos","transition","remove","each","_","arguments","gridHorizontal","gridVertical","webpackPolyfill","deprecate","paths","children","g","Function","e","localeTimeMap","minute","hour","day","daymonth","month","year","addDays","startDate","days","Date","setDate","getDate","diffDays","endDate","ceil","abs","getTime","convertMillisecondsToDays","milliseconds","getLocaleDateFormatter","locale","timeUnit","options","formatter","Intl","DateTimeFormat","date","_i","_s","_e","_arr","_n","_d","next","done","push","filterId","createFilterContainer","metadataSelection","createGlowWithMatrix","filterSelector","bounceCircleHighlight","ease","radius","bounceRadius","delay","castValueToType","type","Number","isDefined","join","formatMap","timeFormat","settingsToMajorTickMap","every","getAxisSettingsFromTimeSpan","timeSpan","getMaxNumOfHorizontalTicks","dataPointNumber","ticksForWidth","getTimeSeriesAxis","dataByDate","settings","firstDate","lastDate","dateTimeSpan","split","minor","major","majorTickValue","minorTickValue","tick","getSortedNumberAxis","dataSorted","firstEntry","getMaxNumOfHorizontalTicksForNumberRanges","uniq","arrArg","filter","pos","xScale","xAxis","xSubAxis","yScale","yAxis","yAxisLabel","yAxisLabelEl","topicsOrder","layers","series","layersInitial","areaShape","areaOutline","overlay","verticalMarkerContainer","verticalMarkerLine","epsilon","svg","chartWidth","chartHeight","dataSortedFormatted","dataSortedZeroed","top","right","bottom","isLoading","xAxisValueType","xAxisScale","yTicks","yAxisBaseline","yAxisLabelOffset","colorSchema","colorHelper","lineGradient","nameToColorMap","highlightFilter","highlightFilterId","areaOpacity","xAxisFormat","xTicks","xAxisCustomFormat","areaCurve","areaAnimationDelays","maxAreaNumber","isAnimated","easeQuadInOut","areaAnimationDuration","hasOutline","grid","tooltipThreshold","xAxisPadding","dateLabel","valueLabel","keyLabel","emptyDataConfig","minDate","maxDate","minY","maxY","isUsingFakeData","getName","dispatcher","dispatch","_selection","_data","numDays","emptyArray","originalData","keys","maxValueByDate","reduce","acc","nest","entries","sort","assign","getSortedData","select","classed","buildContainerGroups","buildSVG","entry","initialTotalsObject","memo","totals","item","otherIndex","other","splice","concat","formatOrder","stack3","stack","stackOrderNone","stackOffsetNone","section","moveLayersByBaseline","buildLayers","scaleLog","extent","rangeRound","scaleTime","getMinYAxisScale","vals","sum","nice","topic","index","axisBottom","tickFormat","log","LN10","getFormattedValue","tickSize","tickPadding","axisRight","shouldHighlightXAxis","drawGridLines","buildAxis","adjustYTickLabels","text","drawAxis","emptyDataLine","chartGroup","color","area","curve","y0","drawStackedAreas","on","touch","handleTouchMove","drawHoverOverlay","drawVerticalMarker","mouse","handleMouseOver","handleMouseOut","setEpsilon","dataPointXPosition","xPosition","yPosition","dataPoint","getNearestDataPoint","moveVerticalMarker","highlightDataPoints","handleMouseMove","mouseX","points","dates","accumulator","sortedValues","current","find","marker","glowEl","highlightCircleRadius","addGlowFilter","handleHighlightClick","point","verticalMarkerXPosition","animationDuration","_x","colorMap","_flag"],"mappings":"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MAGDC,EAAW,CACpBC,OAAQC,cACRC,MAAOC,aACPC,SAAUC,gBACVC,WAAYC,kBACZC,UAAWC,iBACXC,UAAWC,iBACXC,QAASC,eACTC,KAAMC,YACNC,UAAWC,iBACXC,WAAYC,mBAGHC,EAAiB,CAC1B,CACIC,SAAU,EACVC,WAAY,MAIPC,EAAgB,CACzBC,gBAAiBA,kBACjBC,eAAgBA,iBAChBC,WAAYA,aACZC,UAAWA,YACXC,WAAYA,aACZC,UAAWA,YACXC,SAAUA,WACVC,QAASA,UACTC,QAASA,UACTC,OAAQA,SACRC,SAAUA,WACVC,QAASA,UACTC,WAAYA,aACZC,UAAWA,YACXC,WAAYA,aACZC,UAAWA,YACXC,YAAaA,cACbC,WAAYA,aACZC,cAAeA,gBACfC,aAAcA,eACdC,aAAcA,eACdC,YAAaA,cACbC,WAAYA,aACZC,UAAWA,YACXC,aAAcA,eACdC,YAAaA,cACbC,UAAWA,YACXC,SAAUA,WACVC,SAAUA,WACVC,QAASA,Y,cC5IbvH,EAAOD,QAAUW,G,6BCAjB,oyBACO,IAAM8G,EAAiB,CAC1BC,UAAW,CAAC,UAAW,WACvBC,WAAY,CAAC,UAAW,WACxBC,WAAY,CAAC,UAAW,YAEfC,EAAsB,CAC/BH,UAAW,gBACXC,WAAY,iBACZC,WAAY,kBAKHE,EAAc,CACvB,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAO,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAS,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAY,CACrB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAO,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAQ,CACjB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAS,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAO,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAS,CAClB,UACA,UACA,UACA,UA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AO,EACPC,QAAQ,EACRC,OAAO,EACPC,OAAO,GAKLC,EAAW,CACb,IACA,OACA,UACA,OACA,UACA,QACA,QACA,IACA,OACA,MACA,MACA,aACA,OACA,KACA,SACA,SACA,UACA,SACA,OACA,OACA,MACA,WACA,UACA,WACA,KACA,MACA,UACA,MACA,MACA,KACA,KACA,KACA,QACA,WACA,aACA,SACA,OACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,SACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,MACA,OACA,OACA,OACA,OACA,QACA,MACA,OACA,WACA,SACA,KACA,SACA,WACA,SACA,IACA,QACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,SACA,UACA,SACA,QACA,SACA,OACA,SACA,QACA,MACA,UACA,MACA,MACA,QACA,QACA,KACA,WACA,QACA,KACA,QACA,OACA,QACA,KACA,QACA,IACA,KACA,MACA,QACA,OASEC,EAA+B,SAACC,GAClC,IAAIC,EAAe,GACfC,EAAUtE,SAASuB,KAAKC,YACpBxB,SAASC,cAAcmE,IAE3BG,EAAgB9R,OAAO+R,iBAAiBF,GAO5C,MALA,GAAGG,QAAQ7Q,KAAK2Q,GAAe,SAACG,GAC5BL,EAAaK,GAASH,EAAcG,MAExC1E,SAASuB,KAAKG,YAAY4C,GAEnBD,GA8EX,MAAO,CACHhF,qBAvEyB,WAEzB,IAAIsF,EAAyB,GAiE7B,MA9DA,GAAGF,QAAQ7Q,KAAKsQ,GAAU,SAAClQ,GAClBuP,EAAYvP,KACb2Q,EAAuB3Q,GAAQmQ,EAC3BnQ,OAiBZ,SAA6B4Q,GACzB,IACIC,EACAN,EACAF,EACAS,EAJAC,EAAW,GAMf,GAAKH,GAAQA,EAAKI,WAAaC,KAAKC,aAgCpC,OA1BAH,EAAW,GACXF,EAAWD,EAAKO,iBAAiB,KAEjC,GAAGV,QAAQ7Q,KAAKiR,GAAU,SAACO,EAAI3R,GA5BnC,IAAkC2Q,EA6BrBb,EAAY6B,EAAGhB,WAChBG,EAAgB9R,OAAO+R,iBAAiBY,GA7BhDhB,GAD8BA,EA+BkBgB,EAAGhB,SA9BjCiB,cAEbV,EAAuBP,KACxBO,EAAuBP,GAAWD,EAC9BC,IA0BAC,EAtBDM,EAAuBP,GAuBtBW,EAAStR,GAAK2R,EAAGV,MAAMY,QACvB,GAAGb,QAAQ7Q,KAAK2Q,GAAe,SAACgB,GAExBhB,EAAcgB,KACdlB,EAAakB,KAEbH,EAAGV,MAAMa,GAAehB,EAAcgB,WAMtDT,EAASF,EAAKY,UACdX,EAAW,GAAGY,IAAI7R,KAAKiR,GAAU,SAACO,EAAI3R,GAGlC,OAFA2R,EAAGV,MAAMY,QAAUP,EAAStR,GAErB2R,KAGJN,KAhOD,I,6BCAlB,8NAGIY,EAAY,EAEVC,EAAsB,CACxBC,MAAO,CACHC,MAAO,GACPC,OAAQA,iBAAO,KAEnBC,OAAQ,CACJF,MAAO,IACPC,OAAQA,iBAAO,KAEnBE,MAAO,CACHH,MAAO,KACPC,OAAQA,iBAAO,SAIjBG,EAAsB,CACxBL,MAAO,CACHC,MAAO,GACPC,OAAQA,iBAAO,QAEnBC,OAAQ,CACJF,MAAO,IACPC,OAAQA,iBAAO,QAEnBE,MAAO,CACHH,MAAO,KACPC,OAAQA,iBAAO,SAWjBI,EAAe,SAACxR,EAAOyR,GACzB,IAAIC,EAAO,QAQX,OANI1R,EAAQyR,EAAOP,MAAMC,MACrBO,EAAO,QACA1R,EAAQyR,EAAOJ,OAAOF,QAC7BO,EAAO,UAGJA,GAUEC,EAAuB,SAACC,GACjC,IAAIpR,EAAIoR,EAAWnK,OACfoK,EAAI,EACJC,EAAI,EACJC,EAAK,EACLC,EAAK,EAETJ,EAAW7B,SAAQ,SAAC1Q,GAChBwS,GAAKxS,EAAEwS,EACPC,GAAKzS,EAAEyS,EACPC,GAAM1S,EAAEwS,EAAIxS,EAAEyS,EACdE,GAAM3S,EAAEwS,EAAIxS,EAAEwS,KAGlB,IAAMI,EAAczR,EAAIwR,EAAKH,EAAIA,EAC3BK,GAAaJ,EAAIE,EAAKH,EAAIE,GAAME,EAChCE,GAAS3R,EAAIuR,EAAKF,EAAIC,GAAKG,EAC3BG,EAAOC,cAAIT,GAAY,qBAAGC,KAC1BS,EAAOC,cAAIX,GAAY,qBAAGC,KAEhC,MAAO,CACHW,GAAIJ,EACJK,GAAIN,EAAQ3R,EAAI0R,EAChBF,GAAIM,EACJI,GAAIP,EAAQG,EAAOJ,IAYdS,EAAmB,SAAC3S,EAAO4S,EAAOC,GAC3C,IAAMC,EAAUF,EAAS5S,EAAQ4S,EAAS,IAAM,EAEhD,OAAOxB,iBAAOyB,EAAPzB,CAAiB0B,IASfC,EAAY,SAAC/S,GACtB,OAAOA,EAAQ,GAAM,GASZgT,EAAqB,SAAChT,GAC/B,IAAI0R,EAAOF,EAAaxR,EAAOuR,GAG/B,OAAOH,EAFMG,EAAoBG,GAAMN,QAEzBpR,IASLiT,EAAqB,SAACjT,GAC/B,IAAI0R,EAAOF,EAAaxR,EAAOiR,GAG/B,OAAOG,EAFMH,EAAoBS,GAAMN,QAEzBpR,IASLkT,EAAW,SAACC,GACrB,IAAMC,IAAOpC,EAEb,gBAAUmC,EAAOjL,WAAjB,YAA+BkL,K,cCpJnCzV,EAAOD,QAAUe,G,cCAjBd,EAAOD,QAAUgB,G,6BCAjB,+WAAO,IAAM2U,EAAiB,qiBAYjBC,EAAmB,2HAAH,OAEfD,EAFe,s0DA6BhBE,EAAqB,6HAAH,OAEjBF,EAFiB,8nBAclBG,EAAoB,6KAAH,OAMhBH,EANgB,41BAyBjBI,EAA2B,qLAAH,OAMvBJ,EANuB,6gEA0BxBK,EAAyB,kLAAH,OAMrBL,EANqB,whDActBM,EAAqB,8KAAH,OAMjBN,EANiB,mxDAoBhB,WACXA,iBACAC,mBACAC,qBACAC,oBACAG,qBACAD,yBACAD,6B,gBCnJJ,IAAIzL,EAAmB,EAAQ,IAM/BrK,EAAOD,QAJP,SAA4B0J,GAC1B,GAAIO,MAAMiM,QAAQxM,GAAM,OAAOY,EAAiBZ,IAGbzJ,EAAOD,QAAQyC,YAAa,EAAMxC,EAAOD,QAAiB,QAAIC,EAAOD,S,cCF1GC,EAAOD,QAJP,SAA0BmW,GACxB,GAAsB,oBAAX/T,QAAmD,MAAzB+T,EAAK/T,OAAOwH,WAA2C,MAAtBuM,EAAK,cAAuB,OAAOlM,MAAMS,KAAKyL,IAGnFlW,EAAOD,QAAQyC,YAAa,EAAMxC,EAAOD,QAAiB,QAAIC,EAAOD,S,cCAxGC,EAAOD,QAJP,WACE,MAAM,IAAIoW,UAAU,yIAGenW,EAAOD,QAAQyC,YAAa,EAAMxC,EAAOD,QAAiB,QAAIC,EAAOD,S,qHCAlGqW,GADgBnW,EAAQ,GAAxBoW,YACepW,EAAQ,IAAvBmW,YAWFE,EALuB,aAKvBA,EAJqB,WAgB3B,SAASC,EAAeC,GACpB,OAAO,SAAC9U,GAAD,OAAQ8U,EAAM9U,GAAK,IAU9B,SAAS+U,EAAeD,GACpB,IAAIE,EAASC,KAAK/B,IAAI,EAAG4B,EAAMI,YAAc,GAAK,EAMlD,OAJIJ,EAAMK,UACNH,EAASC,KAAKE,MAAMH,IAGjB,SAAChV,GAAD,OAAQ8U,EAAM9U,GAAKgV,EAAS,IAUvC,SAASI,EAASC,EAAQP,GACtB,IAAIQ,EAAQ,CAAC,EAAG,GACZC,EAAc,EACdC,EAAY,EACZC,GAAY,EACZC,EAAQ,KACRC,EAAa,KAEbC,EAAWlB,EAtDS,OAsDuBW,GAG3C7C,EAAI6C,IAAWT,EAAQ,IAAM,IAC7BnC,EAAI4C,IAAWT,EAAQ,IAAM,IAMjC,SAASiB,EAAkBC,GACvB,IAAIC,EAmFR,WACI,IAAIC,GACkB,IAAdP,GACc,SAAdA,GACc,UAAdA,EACJQ,GACkB,IAAdR,GACc,SAAdA,GACc,SAAdA,EACJM,EAAwB,OAAfJ,EAajB,WACI,IAAIO,EAGAA,EADApB,EAAMY,MACOZ,EAAMY,MAAMS,MAAMrB,EAAOY,EAAQ,CAACA,GAAS,IAE3CZ,EAAMsB,SAGvB,OAAOF,EAAWpN,QAtBiBoN,GAAeP,EAAW7M,QAEzDkN,GAAWD,EAAOM,QAClBJ,GAAUF,EAAOO,MAErB,OAAOP,EAjGMQ,GAGTrH,GAAY4F,EAAMI,UAAYH,EAAiBF,GAC3CC,EAAM0B,QAGVC,EAAInB,EAAMA,EAAMlN,OAAS,IAAMkN,EAAM,GAAK,GAAK,EAE/CoB,EAAYZ,EAAQY,UAAYZ,EAAQY,YAAcZ,EAEtDa,EAAgBD,EACXE,UAAUhB,EAASiB,cACnBC,KAAK,CAAC,OACXC,EAAYJ,EAAcK,MACtBL,EACKM,QACAC,OAAO,KACP/L,KAAK,QAASyK,EAASuB,WAGhCC,EAAOL,EAAUH,UAAU,QAAQE,KAAKf,EAAQjB,GAAOuC,QACvDC,EAAWF,EAAKG,OAChBC,EAAYJ,EAAKH,QAAQC,OAAO,QAAQ/L,KAAK,QAAS,aAK1D,GAHAiM,EAAOA,EAAKJ,MAAMQ,GAGd1B,IAAYY,EAAW,CAGvB,IAAMe,EAAe,SAACtM,GAAD,OACjB,SAAUnL,GACN,OAAO0X,SAAU1X,EAAIkP,EAASlP,IACxBA,EACAoK,KAAKuN,aAAaxM,KAK1ByM,EAAgB,SAAU5X,GAC5B,IAAIwB,EAAI4I,KAAKyN,WAAWC,MAExB,OAAOtW,GAAKkW,SAAUlW,EAAIA,EAAExB,IAAOwB,EAAI0N,EAASlP,IAGpDoX,EAAOA,EAAKW,WAAWjC,GAEvBwB,EAAWA,EACNS,WAAWjC,GACX3K,KAAK,UArHN,MAsHCA,KAAKsH,EAAI,IAAKgF,EAAahF,EAAI,MAC/BtH,KAAKsH,EAAI,IAAKgF,EAAahF,EAAI,MAEpC+E,EAAYA,EACPrM,KAAK,UA1HN,MA2HCA,KAAKsH,EAAI,IAAKmF,GACdzM,KAAKsH,EAAI,IAAKmF,GAGvBN,EAASU,SAETZ,EAAKjM,KAAK,UAAW,GAChBA,KAAKqH,EAAI,KAAM8C,EAAM,GAAKmB,EAAIlB,GAC9BpK,KAAKqH,EAAI,KAAM8C,EAAMA,EAAMlN,OAAS,GAAKqO,EAAIjB,GAC7CrK,KAAKsH,EAAI,KAAK,SAACzS,GAAD,OAAOkP,EAASlP,MAC9BmL,KAAKsH,EAAI,KAAK,SAACzS,GAAD,OAAOkP,EAASlP,MAKnC+W,EAAUkB,MAAK,WACX7N,KAAK0N,MAAQ5I,KAkKrB,OA5GA2G,EAAkBf,MAAQ,SAAUoD,GAChC,OAAKC,UAAU/P,QAGf0M,EAAQoD,EAEDrC,GAJIf,GAefe,EAAkBP,MAAQ,SAAU4C,GAChC,OAAKC,UAAU/P,QAGfkN,EAAQ4C,EAEDrC,GAJIP,GAcfO,EAAkBN,YAAc,SAAU2C,GACtC,OAAKC,UAAU/P,QAGfmN,EAAc2C,EAEPrC,GAJIN,GAcfM,EAAkBL,UAAY,SAAU0C,GACpC,OAAKC,UAAU/P,QAGfoN,EAAY0C,EAELrC,GAJIL,GAgBfK,EAAkBJ,UAAY,SAAUyC,GACpC,OAAKC,UAAU/P,QAGfqN,EAAYyC,EAELrC,GAJIJ,GAcfI,EAAkBH,MAAQ,SAAUwC,GAChC,OAAKC,UAAU/P,QAGfsN,EAAQwC,EAEDrC,GAJIH,GAcfG,EAAkBF,WAAa,SAAUuC,GACrC,OAAKC,UAAU/P,QAGfuN,EAAmB,OAANuC,EAAa,KAAO,IAAIA,GAAGpP,QAEjC+M,GAJIF,GAAcA,EAAW7M,SAOjC+M,EAqXJ,SAASuC,EAAetD,GAC3B,OAAOM,EAASR,EAAOE,GAkBpB,SAASuD,EAAavD,GACzB,OAAOM,EAASR,EAAOE,K,cC7rB3BxW,EAAOD,QAAU,SAASC,GAoBzB,OAnBKA,EAAOga,kBACXha,EAAOia,UAAY,aACnBja,EAAOka,MAAQ,GAEVla,EAAOma,WAAUna,EAAOma,SAAW,IACxCrY,OAAOC,eAAe/B,EAAQ,SAAU,CACvCgC,YAAY,EACZC,IAAK,WACJ,OAAOjC,EAAOqB,KAGhBS,OAAOC,eAAe/B,EAAQ,KAAM,CACnCgC,YAAY,EACZC,IAAK,WACJ,OAAOjC,EAAOoB,KAGhBpB,EAAOga,gBAAkB,GAEnBha,I,cCpBR,IAAIoa,EAGJA,EAAI,WACH,OAAOtO,KADJ,GAIJ,IAECsO,EAAIA,GAAK,IAAIC,SAAS,cAAb,GACR,MAAOC,GAEc,iBAAXla,SAAqBga,EAAIha,QAOrCJ,EAAOD,QAAUqa,G,8BCnBjB,4IAAMG,EAAgB,CAClBC,OAAQ,CAAEA,OAAQ,WAClBC,KAAM,CAAEA,KAAM,WACdC,IAAK,CAAEA,IAAK,WACZC,SAAU,CAAED,IAAK,UAAWE,MAAO,SACnCA,MAAO,CAAEA,MAAO,SAChBC,KAAM,CAAEA,KAAM,YAULC,EAAU,SAACC,EAAWC,GAC/B,IAAMvI,EAAS,IAAIwI,KAAKF,GAIxB,OAFAtI,EAAOyI,QAAQzI,EAAO0I,UAAYH,GAE3B1M,OAAOmE,IAUL2I,EAAW,SAACL,EAAWM,GAGhC,OAAO1E,KAAK2E,KACR3E,KAAK4E,KACA,IAAIN,KAAKF,GAAWS,UAAY,IAAIP,KAAKI,GAASG,WAJ9B,SAgBpBC,EAA4B,SAACC,GAAD,OACrC/E,KAAK2E,KAAKI,EAAe,QAShBC,EAAyB,SAACC,GAA6B,IAArBC,EAAqB,uDAAV,MAClDC,EAAUvB,EAAcsB,GACxBE,EAAY,IAAIC,KAAKC,eAAeL,EAAQE,GAEhD,OAAO,SAACI,GAAD,OAAUH,EAAUtI,OAAOyI,M,cC1DtClc,EAAOD,QAJP,SAAyB0J,GACvB,GAAIO,MAAMiM,QAAQxM,GAAM,OAAOA,GAGCzJ,EAAOD,QAAQyC,YAAa,EAAMxC,EAAOD,QAAiB,QAAIC,EAAOD,S,cC0BvGC,EAAOD,QA9BP,SAA+B0J,EAAKrI,GAClC,IAAI+a,EAAY,MAAP1S,EAAc,KAAyB,oBAAXtH,QAA0BsH,EAAItH,OAAOwH,WAAaF,EAAI,cAE3F,GAAU,MAAN0S,EAAJ,CACA,IAIIC,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKL,EAAKA,EAAG5a,KAAKkI,KAAQ8S,GAAMH,EAAKD,EAAGM,QAAQC,QAC9CJ,EAAKK,KAAKP,EAAG/Z,QAETjB,GAAKkb,EAAKxS,SAAW1I,GAH4Bmb,GAAK,IAK5D,MAAO5M,GACP6M,GAAK,EACLH,EAAK1M,EACL,QACA,IACO4M,GAAsB,MAAhBJ,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIK,EAAI,MAAMH,GAIlB,OAAOC,IAG+Btc,EAAOD,QAAQyC,YAAa,EAAMxC,EAAOD,QAAiB,QAAIC,EAAOD,S,cC1B7GC,EAAOD,QAJP,WACE,MAAM,IAAIoW,UAAU,8IAGanW,EAAOD,QAAQyC,YAAa,EAAMxC,EAAOD,QAAiB,QAAIC,EAAOD,S,6BCJxG,0GAAM6c,EAAW,mBAEJC,EAAwB,SAACC,GAMlC,OALsBA,EACjBlE,OAAO,QACPA,OAAO,UACP/L,KAAK,KAAM+P,IAqCPG,EAAuB,SAACC,GAGjCA,EACKnQ,KAAK,IAAK,SACVA,KAAK,IAAK,SACVA,KAAK,QAAS,SACdA,KAAK,SAAU,SAEpBmQ,EACKpE,OAAO,iBACP/L,KAAK,OAAQ,UACbA,KAAK,SAXQ,2CAalBmQ,EACKpE,OAAO,kBACP/L,KAAK,eAAgB,KACrBA,KAAK,SAAU,eACfA,KAAK,KAAM,iBAEhB,IAAI6L,EAAQsE,EAAepE,OAAO,WAMlC,OAJAF,EAAME,OAAO,eAAe/L,KAAK,KAAM,eAEvC6L,EAAME,OAAO,eAAe/L,KAAK,KAAM,iBAEhC+P,GA6CEK,EAAwB,SACjClK,EACAmK,EACAC,GAEC,IADDC,EACC,uDADuB,EAATD,EAETnZ,EAAW,IACXqZ,EAAQ,GAEdtK,EAAG0G,aACEyD,KAAKA,GACLlZ,SAASA,GACT6I,KAAK,IAAKuQ,GACV3D,aACAyD,KAAKA,GACLG,MAAMA,GACNrZ,SAASA,GACT6I,KAAK,IAAKsQ,K,6BCnInB,oEAQO,IAAMG,EAAkB,SAACjb,EAAOkb,GACnC,MAAa,WAATA,EACOC,OAAOnb,GAGX,IAAI4Y,KAAK5Y,IAUPob,EAAY,SAACpb,GACtB,OAAOA,U,eCxBXrC,EAAOD,QAAUiB,G,6BCMV,SAASoV,EAAWkB,GAGvB,OAFAA,EAAWtN,MAAMiM,QAAQqB,GAAYA,EAA1BtN,MAAA,qBAAyC6P,WAE7C,CACHhB,OAAQ,kBAAMvB,EAASoG,KAAK,MAC5BnF,WAAY,iBAAM,IAAMjB,EAASoG,KAAK,OAX9C,kDAee,WACXtH,e,wLCNEuH,EAAY,CACdnD,OAAQoD,qBAAW,QACnBnD,KAAMmD,qBAAW,SACjBlD,IAAKkD,qBAAW,MAChBjD,SAAUiD,qBAAW,SACrBhD,MAAOgD,qBAAW,MAClB/C,KAAM+C,qBAAW,OAEfC,GAAsB,WACvBza,IAAqBC,YAAc2C,WAAS8X,MAAM,IAD3B,MAEvB1a,IAAqBE,SAAW4C,UAAQ4X,MAAM,IAFvB,MAGvB1a,IAAqBG,UAAY6D,YAAU0W,MAAM,IAH1B,MAIvB1a,IAAqBI,WAAa8D,WAASwW,MAAM,IAJ1B,GAatBC,EAA8B,SAACC,GACjC,IAAMpa,EAAsBF,IAAtBE,SAWN,OARIoa,EAHwBta,IAAZG,QAIDT,IAAqBE,SACzB0a,EAAWpa,EACPR,IAAqBG,UAErBH,IAAqBI,YAalCya,EAA6B,SAACvR,EAAOwR,GACvC,IAAIC,EAAgBxH,KAAK2E,KACrB5O,EAAQ,IAGZ,OAAOwR,EAlDqB,EAmDtBhY,UACAyQ,KAAKjC,IAAIwJ,EAAiBC,IA4BvBC,EAAoB,SAC7BC,EACA3R,GAGC,IAFD4R,EAEC,uDAFU,KACX1C,EACC,uDADQ,KAEH2C,EAAY,IAAItD,KAAKoD,EAAW,GAAGnC,MACnCsC,EAAW,IAAIvD,KAAKoD,EAAWA,EAAWvU,OAAS,GAAGoS,MACtDuC,EAAeD,EAAWD,EAG5B3C,IACiB,oBAATI,MACa,YAAhB,oBAAOA,KAAP,gBAAOA,SAAsBA,KAAKC,kBAEvCL,EAAS,MAGR0C,IACDA,EAAWP,EAA4BU,IAG3C,MAAuBH,EAASI,MAAM,KAAtC,WAAOC,EAAP,KAAcC,EAAd,KACMC,EAAiBhB,EAAuBS,GACxCQ,EAAiBb,EACnBvR,EACA+O,YAA0BgD,IAG9B,MAAO,CACHE,MAAO,CACHlL,OAAQmI,EACFD,YAAuBC,EAAQ+C,GAC/BhB,EAAUgB,GAChBI,KAAMD,GAEVF,MAAO,CACHnL,OAAQmI,EACFD,YAAuBC,EAAQgD,GAC/BjB,EAAUiB,GAChBG,KAAMF,KAaLG,EAAsB,SAACC,EAAYvS,GAC5C,IAAMwS,EAAaD,EAAW,GAAG/C,KASjC,MAAO,CACH6C,KAjF0C,SAACrS,EAAOwR,GACtD,IAAIC,EAAgBxH,KAAK2E,KACrB5O,EAAQ,IAGZ,OAAOiK,KAAKjC,IAAIwJ,EAAiBC,GAsEVgB,CACnBzS,EAJcuS,EAAWA,EAAWnV,OAAS,GAAGoS,KACvBgD,KAYlB,KACXd,oBACAY,wB,q3BC/HJ,IAAMI,EAAO,SAACC,GAAD,OACTA,EAAOC,QAAO,SAAC/M,EAAMgN,EAAK9V,GAAZ,OAAoBA,EAAIwH,QAAQsB,KAAUgN,MA2C7C,SAASvf,IACpB,IASIwf,EACAC,EACAC,EACAC,EACAC,EAOAC,EACAC,EAgBA/G,EACAgH,EAIAnE,EAGAoE,EACAC,EACAC,EACAC,EACAC,EASAC,EAEAC,EACAC,EACAC,EASAC,EACAC,EACAC,EACAnI,EACAyG,EACA2B,EACAC,EA7EAhR,EAAS,CACLiR,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRlR,KAAM,IAEVpD,EAAQ,IACRC,EAAS,IACTsU,IAAY,EAOZC,GAAiB,OACjBC,GAAa,SACbC,GAAS,EAETC,GAAgB,EAGhBC,IAAoB,GAGpBC,GAAcC,UAAYjZ,aAAaV,YACvC4Z,GAAeD,UAAYha,eAAeC,UAC1Cia,GAAiB,KACjBC,GAAkB,KAClBC,GAAoB,KAOpBC,GAAc,IAGdC,GAAc,KACdC,GAAS,KACTC,GAAoB,KAGpBC,GAAY,YASZC,GAAsBlL,gBADG,GAGrBmL,IAHqB,IAezBC,IAAa,EACblF,GAAOmF,gBACPC,GAAwBve,IAAOC,SAC/Bue,IAAa,EAQbC,GAAO,KACPC,GAAmB,IACnBC,GAEU,GAFVA,GAGY,EAGZC,GAAY,OACZC,GAAa,QACbC,GAAW,OACXC,GAAkB,CACdC,QAAS,IAAI9H,MAAK,IAAIA,MAAOC,SAAQ,IAAID,MAAOE,UAAY,KAC5D6H,QAAS,IAAI/H,KACbgI,KAAM,EACNC,KAAM,KAEVC,IAAkB,EAElBC,GAAU,SAAC,GAAD,SAAGzhB,MACbwZ,GAAU,SAAC,GAAD,SAAGe,MAEbmH,GAAaC,mBACT,kBACA,iBACA,kBACA,uBACA,mBASR,SAASvjB,GAAQwjB,GACbA,EAAW5J,MAAK,SAAU6J,GA8X9B,IACUC,EAIAC,EAyBSC,EA+fXC,EACAC,EA9jBEZ,EACAC,GA9VFxC,EAAahU,EAAQmD,EAAOC,KAAOD,EAAOkR,MAC1CJ,EAAchU,EAASkD,EAAOiR,IAAMjR,EAAOmR,OAC3CxI,GA0ZJmL,EAC4B,KAFbA,EAzZMH,GA2ZJ1Z,QA/BX2Z,EAAUrI,YACZ0H,GAAgBC,QAChBD,GAAgBE,SAEdU,EAAa1Z,MAAM6N,MAAM,KAAM7N,MAAMyZ,IAE3CN,IAAkB,EAElB,cACOO,EAAWtQ,KAAI,SAACL,EAAI3R,GAAL,wBACbuhB,GAAY7H,YAAQgI,GAAgBC,QAAS3hB,IADhC,MAEbwhB,GAAa,GAFA,MAGbC,GAAW,KAHE,MADtB,IAMOa,EAAWtQ,KAAI,SAACL,EAAI3R,GAAL,wBACbuhB,GAAY7H,YAAQgI,GAAgBC,QAAS3hB,IADhC,MAEbwhB,GAAa,GAFA,MAGbC,GAAW,KAHE,QAiB6Bc,GAE/BG,QAAO,SAACC,EAAKriB,GAI7B,OAHCA,EAAEwa,KAAOoB,YAAgB5b,EAAEihB,IAAYzB,IACnCxf,EAAEW,OAASX,EAAEkhB,IAElB,cAAWmB,GAAX,CAAgBriB,MACjB,IAjaCud,EA62BR,SAAuBzG,GACnB,OAAOwL,iBACFrhB,IAAIwY,IACJ8I,QAAQzL,EAAK0L,MAAK,SAAC3T,EAAGC,GAAJ,OAAUD,EAAE2L,KAAO1L,EAAE0L,SACvC9I,KAAI,SAAC1R,GACF,OAAOI,OAAOqiB,OAAO,GAAIziB,EAAG,CACxBwa,KAAMoB,YAAgB5b,EAAEiB,IAAKue,SAn3BxBkD,CAAc5L,GAuWnC,SAAkBC,GACTgI,IACDA,EAAM4D,iBAAO5L,GACRG,OAAO,OACP0L,QAAQ,2BAA2B,GAtMhD,WACI,IAAI7L,EAAYgI,EACX7H,OAAO,KACP0L,QAAQ,mBAAmB,GAC3BzX,KAAK,YAHM,oBAGoBgD,EAAOC,KAH3B,YAGmCD,EAAOiR,IAH1C,MAKhBL,EAAI7H,OAAO,KAAK0L,QAAQ,uBAAuB,GAE/C7L,EACKG,OAAO,KACP0L,QAAQ,gBAAgB,GACxB1L,OAAO,KACP0L,QAAQ,UAAU,GACvB7L,EACKH,UAAU,iBACVM,OAAO,KACP0L,QAAQ,cAAc,GAC3B7L,EAAUG,OAAO,KAAK0L,QAAQ,qBAAqB,GACnD7L,EAAUG,OAAO,KAAK0L,QAAQ,oBAAoB,GAClD7L,EAAUG,OAAO,KAAK0L,QAAQ,gBAAgB,GAC9C7L,EAAUG,OAAO,KAAK0L,QAAQ,eAAe,GAC7C7L,EAAUG,OAAO,KAAK0L,QAAQ,kBAAkB,GAmL5CC,IAGJ9D,EAAI5T,KAAK,UAAW,CAAC,EAAG,EAAGH,EAAOC,IAC7BE,KAAK,QAAS,qDACdA,KAAK,QAASH,GACdG,KAAK,SAAUF,GAjXhB6X,CAAS1Y,MACLmV,IA8rBRR,EAAI4D,OAAO,wBAAwBvX,KAAKgJ,6BAxRxC2K,EAAI4D,OAAO,4BAA4B3K,SAvO3C,WACIkH,EAAsB3B,EACjB7L,KAAI,SAAC1R,GAAD,OAAOI,OAAOqiB,OAAO,GAAIziB,EAAGA,EAAE+V,WAClCrE,KAAI,SAAC1R,GASF,OARAI,OAAO8hB,KAAKliB,GAAG0Q,SAAQ,SAAC+F,GACpB,IAAMsM,EAAQ/iB,EAAEyW,GAEZsM,GAASA,EAAM9iB,OACfD,EAAE+iB,EAAM9iB,MAAQ8iB,EAAMpiB,UAIvBP,OAAOqiB,OAAO,GAAIziB,EAAG,CACxBwa,KAAMoB,YAAgB5b,EAAC,IAASwf,SAI5CL,EAAmB5B,EACd7L,KAAI,SAAC1R,GAAD,OAAOI,OAAOqiB,OAAO,GAAIziB,EAAGA,EAAE+V,WAClCrE,KAAI,SAAC1R,GASF,OARAI,OAAO8hB,KAAKliB,GAAG0Q,SAAQ,SAAC+F,GACpB,IAAMsM,EAAQ/iB,EAAEyW,GAEZsM,GAASA,EAAM9iB,OACfD,EAAE+iB,EAAM9iB,MAAQ,MAIjBG,OAAOqiB,OAAO,GAAIziB,EAAG,CACxBwa,KAAMoB,YAAgB5b,EAAC,IAASwf,SAI5C,IAAIwD,EAAsBtF,EAAK5G,EAAKpF,IAAIgQ,KAAUU,QAC9C,SAACa,EAAMhiB,GAAP,OAAeb,OAAOqiB,OAAO,GAAIQ,EAAlB,OAA2BhiB,EAAM,MAChD,IAGAiiB,EAASpM,EAAKsL,QACd,SAACa,EAAME,GAAP,OACI/iB,OAAOqiB,OAAO,GAAIQ,EAAlB,OACKE,EAAKljB,KAAQgjB,EAAKE,EAAKljB,OAASkjB,EAAKxiB,UAE9CqiB,GAGJ3L,EAAQgH,GA0CZ,SAAqB6E,GACjB,IAAI7L,EAAQjX,OAAO8hB,KAAKgB,GAAQV,MAAK,SAAC3T,EAAGC,GACrC,OAAIoU,EAAOrU,GAAKqU,EAAOpU,IAAY,EAC/BoU,EAAOrU,KAAOqU,EAAOpU,GAAW,EAE7B,KAGPsU,EAAa/L,EAAM9H,QAAQ,SAE/B,GAAI6T,GAAc,EAAG,CACjB,IAAIC,EAAQhM,EAAMiM,OAAOF,EAAY,GAErC/L,EAAQA,EAAMkM,OAAOF,GAGzB,OAAOhM,EA1DgBmM,CAAYN,GAEnC,IAAIO,EAASC,kBACRxB,KAAK7K,GACLA,MAAMsM,kBACN3O,OAAO4O,mBAEZpF,EAAgBiF,EAAOtE,GACvBb,EASJ,SAA8BA,GAC1B,GAAsB,IAAlBqB,GACA,OAAOrB,EAaX,OAVAA,EAASA,EAAO5M,KAAI,SAACmS,GAOjB,OANAA,EAAQnS,KAAI,SAACqR,GAGT,OAFAA,EAAM,GAAKpD,GAEJoD,KAGJc,KArBFC,CAAqBL,EAAOvE,IA/OjC6E,GAySJjG,EAkBuB,WAAnB0B,GACmB,gBAAfC,GACOuE,qBACF5N,OAAO6N,iBAAO1G,GAAY,qBAAG/C,SAC7B0J,WAAW,CAAC,EAAGlF,IAEbrK,wBACFyB,OAAO6N,iBAAO1G,GAAY,qBAAG/C,SAC7B0J,WAAW,CAAC,EAAGlF,IAGjBmF,sBACF/N,OAAO6N,iBAAO1G,GAAY,qBAAG/C,SAC7B0J,WAAW,CAAC,EAAGlF,IASlBuC,EAAO6C,KACP5C,EAylBFC,GACOL,GAAgBI,KAGpBtO,cAAI,EAjCPgP,EAAOxE,EAAK5G,EAAKpF,KAAI,SAACvR,GAAD,OAAOA,EAAEF,SAC9BkiB,EAAiBjP,cAAIgM,GAAqB,SAAUlf,GACpD,IAAIqkB,EAAOnC,EAAKxQ,KAAI,SAACzQ,GAAD,OAASjB,EAAEiB,MAE/B,OAAOqjB,cAAID,MAGRlC,GA0B0BxC,KAroBjC1B,EA0COtJ,wBACFyB,OAAO,CAACmL,EAAMC,IACd0C,WAAW,CAACjF,EAAa,IACzBsF,OA3CLvE,GACIA,IACA3I,EAAM+K,QACF,SAACa,EAAMuB,EAAOC,GAAd,OACIrkB,OAAOqiB,OAAO,GAAIQ,EAAlB,OAA2BuB,EAAQ3E,GAAY4E,OACnD,IAzNZ,WACI,IAAIxH,EAAOC,EAEX,GAAuB,WAAnBsC,GACAvC,EAAQK,YAAoBC,EAAYvS,GACxCkS,EAAQ,KAGJa,EADe,gBAAf0B,GACQiF,qBAAW5G,GACdpI,MAAMuH,EAAMI,KAAM,KAClBsH,YAAW,SAAU3kB,GAClB,IAAM4kB,EAAM3P,KAAK2P,IAAI5kB,GAAKiV,KAAK4P,KAE/B,OAAO5P,KAAK4E,IAAI5E,KAAKE,MAAMyP,GAAOA,GAAO,KACnC,MAAQ3P,KAAKE,MAAMyP,GACnB,MAGNF,qBAAW5G,GACdpI,MAAMuH,EAAMI,MACZsH,WAAWG,QAEjB,CACH,GACoB,WAAhB1E,IAC6B,iBAAtBE,GAEPrD,EAAQ,CACJI,KAAMgD,GACNtO,OAAQmK,qBAAWoE,KAEvBpD,EAAQ,SACL,OACiBR,YAChBa,EACAvS,EACAoV,GACAlG,GAJD+C,EADA,EACAA,MAAOC,EADP,EACOA,MAOVc,EAAW0G,qBAAW5G,GACjBpI,MAAMwH,EAAMG,MACZ0H,SAAS,EAAG,GACZJ,WAAWzH,EAAMnL,QAG1BgM,EAAQ2G,qBAAW5G,GACdpI,MAAMuH,EAAMI,MACZ0H,SAAS,GAAI,GACbC,YAjPK,GAkPLL,WAAW1H,EAAMlL,QAG1BmM,EAAQ+G,oBAAUhH,GACbvI,MAAMgK,IACNqF,SAAS,CAAC,IACVC,YAxPS,GAyPTL,WAAWG,IA6XpB,WACI/F,EAAI4D,OAAO,qBAAqB/L,UAAU,QAAQoB,SAElD,IAAIkN,EAAuBd,KAAqB,EAEnC,eAATtD,IAAkC,SAATA,KAiBhB1I,YAAe6F,GACvB3I,MAAM,CAAC,EAAG0J,IACVvJ,UAAU,SACVC,MAAMgK,GAEXoB,CAAK/B,EAAI4D,OAAO,sBAUL5D,EACN4D,OAAO,qBACP/L,UAAU,wBACVE,KAAK,CAAC,IACNG,QACAC,OAAO,QACP/L,KAAK,QAAS,mBACdA,KAAK,KAAM,GACXA,KAAK,KAAM6T,GACX7T,KAAK,KAAM8T,GACX9T,KAAK,KAAM8T,GAxCRiG,GAiDenG,EAClB4D,OAAO,eACP/L,UAAU,cACAzL,KAAK,SAAS,SAACnL,GAAD,OACnB,IAANA,EACM,8CACA,gBAlDG,aAAT8gB,IAAgC,SAATA,KA2DdzI,YAAayF,GACrBxI,MAAM,CAAC,EAAG2J,IACVxJ,UAAU,SACVC,MAAM2K,GAEXS,CAAK/B,EAAI4D,OAAO,sBAUL5D,EACN4D,OAAO,qBACP/L,UAAU,wBACVE,KAAK,CAAC,IACNG,QACAC,OAAO,QACP/L,KAAK,QAAS,mBACdA,KAAK,KAAM6V,IACX7V,KAAK,KAAM8T,GACX9T,KAAK,KAAM,GACXA,KAAK,KAAM,IA3dhBga,CAAclI,EAAMI,MAjJhB+H,GAsaR,WACIrG,EAAI4D,OAAO,yBACNxX,KAAK,YADV,wBACwC8T,EADxC,OAEKpf,KAAKke,GAEU,WAAhBqC,IAA+C,WAAnBZ,IAC5BT,EAAI4D,OAAO,6BACNxX,KACG,YAFR,uBAGwB8T,EAniBT,GAgiBf,MAKKpf,KAAKme,GAGde,EAAI4D,OAAO,sBACNxX,KAAK,YADV,sBACsC6V,GADtC,SAEKnhB,KAAKqe,GACLre,KAAKwlB,IAENlH,IACIC,GACAW,EAAInI,UAAU,sBAAsBoB,SAGxCoG,EAAeW,EACV4D,OAAO,iBACPzL,OAAO,QACP0L,QAAQ,qBAAqB,GAC7BzX,KAAK,KAAM8T,EAAc,GACzB9T,KAAK,IAAKyU,IACVzU,KAAK,cAAe,UACpBA,KAAK,YAAa,mBAClBma,KAAKnH,IArcVoH,GA4rBR,WAEQhH,IACAQ,EAAInI,UAAU,oBAAoBoB,SAClC+G,EAAInI,UAAU,UAAUoB,SACxB+G,EAAInI,UAAU,iBAAiBoB,UAGnC,GAAIyJ,GAGA,OAtDA+D,EAAgBpO,iBACf5E,GAAE,SAACxS,GAAD,OAAO8d,EAAO9d,EAAEwa,SAClB/H,GAAE,kBAAMwL,EAAO,GAAK,MAErBwH,EAAa1G,EAAI4D,OAAO,iBAGvBzL,OAAO,QACP/L,KAAK,QAAS,mBACdA,KAAK,IAAKqa,EAActG,IACxBvO,MAAM,SAAU,uCAErB8U,EACKvO,OAAO,kBACP/L,KAAK,KAAM,4BACXA,KAAK,gBAAiB,kBACtBA,KAAK,KAAM,GACXA,KAAK,KAAM2S,EAAOhH,EAAKA,EAAK1O,OAAS,GAAGoS,OACxCrP,KAAK,KAAM,GACXA,KAAK,KAAM,GACXyL,UAAU,QACVE,KAAK,CACF,CAAE9B,OAAQ,KAAM0Q,MAAO3F,GAAa,IACpC,CAAE/K,OAAQ,OAAQ0Q,MAAO3F,GAAa,MAEzC9I,QACAC,OAAO,QACP/L,KAAK,UAAU,qBAAG6J,UAClB7J,KAAK,cAAc,qBAAGua,SA7B/B,IACQF,EAIAC,EAqDJhH,EAAYkH,iBACPC,MAAMrjB,IAASge,KACf/N,GAAE,gBAAGsE,EAAH,EAAGA,KAAH,OAAcgH,EAAOhH,EAAK0D,SAC5BqL,IAAG,SAAC7lB,GAAD,OAAOie,EAAOje,EAAE,OACnBoT,IAAG,SAACpT,GAAD,OAAOie,EAAOje,EAAE,OAExB0e,EAActH,iBACTwO,MAAMnH,EAAUmH,SAChBpT,GAAE,gBAAGsE,EAAH,EAAGA,KAAH,OAAcgH,EAAOhH,EAAK0D,SAC5B/H,GAAE,SAACzS,GAAD,OAAOie,EAAOje,EAAE,OAEnB0gB,KACAnC,EAASQ,EACJ4D,OAAO,gBACP/L,UAAU,UACVE,KAAK0H,EAAekD,IACpBzK,QACAC,OAAO,KACP0L,QAAQ,mBAAmB,IAG3B1L,OAAO,QACP/L,KAAK,QAAS,SACdA,KAAK,IAAKsT,GACV9N,MAAM,UAAWwP,IACjBhV,KAAK,QAAQ,gBAAGlK,EAAH,EAAGA,IAAH,OAAa+e,GAAe/e,MAE9Csd,EACKrH,OAAO,QACP/L,KAAK,QAAS,gBACdA,KAAK,IAAKuT,GACV/N,MAAM,UAAU,gBAAG1P,EAAH,EAAGA,IAAH,OAAa+e,GAAe/e,MAC5CkK,KAAK,OAAQ,QAGlB4T,EAAI4D,OAAO,gBACN/L,UAAU,UACVE,KAAKwH,GACLvG,aACA4D,OAAM,SAACzD,EAAGxY,GAAJ,OAAU8gB,GAAoB9gB,MACpC4C,SAASse,IACTpF,KAAKA,IACLrQ,KAAK,IAAKsT,GACV9N,MAAM,UAAWwP,IACjBhV,KAAK,QAAQ,gBAAGlK,EAAH,EAAGA,IAAH,OAAa+e,GAAe/e,MAE9C8d,EAAI4D,OAAO,gBACN/L,UAAU,iBACVE,KAAKwH,GACLvG,aACA4D,OAAM,SAACzD,EAAGxY,GAAJ,OAAU8gB,GAAoB9gB,MACpC4C,SAASse,IACTpF,KAAKA,IACLrQ,KAAK,IAAKuT,GACVvT,KAAK,OAAQ,WAElBoT,EAASQ,EACJ4D,OAAO,gBACP/L,UAAU,UACVE,KAAKwH,GACLrH,QACAC,OAAO,KACP0L,QAAQ,mBAAmB,IAG3B1L,OAAO,QACP/L,KAAK,QAAS,SACdA,KAAK,IAAKsT,GACV9N,MAAM,UAAWwP,IACjBhV,KAAK,QAAQ,gBAAGlK,EAAH,EAAGA,IAAH,OAAa+e,GAAe/e,MAE9Csd,EACKrH,OAAO,QACP/L,KAAK,QAAS,gBACdA,KAAK,IAAKuT,GACV/N,MAAM,UAAU,gBAAG1P,EAAH,EAAGA,IAAH,OAAa+e,GAAe/e,MAGjD8d,EAAI4D,OAAO,gBACN/L,UAAU,UACVzL,KAAK,IAAKsT,GACV9N,MAAM,UAAWwP,IACjBhV,KAAK,QAAQ,gBAAGlK,EAAH,EAAGA,IAAH,OAAa+e,GAAe/e,MAE9C8d,EAAI4D,OAAO,gBACN/L,UAAU,iBACVzL,KAAK,QAAS,gBACdA,KAAK,IAAKuT,GACV/N,MAAM,UAAU,gBAAG1P,EAAH,EAAGA,IAAH,OAAa+e,GAAe/e,OAGhD4f,IACD9B,EAAI4D,OAAO,gBACN/L,UAAU,iBACVjG,MAAM,UAAW,QAI1B4N,EAAOhH,OAAOQ,aAAapH,MAAM,UAAW,GAAGqH,SA3yB3C8N,GA0DJ/G,EAAIgH,GAAG,aAAa,SAAU/lB,IAu+BlC,SAAyB4Y,EAAG5Y,GACxB2hB,GAAW9hB,KAAK,kBAAmB+Y,EAAG5Y,EAAGgmB,gBAAMpN,IAv+B3CqN,CAAgB7b,KAAMpK,MA0jCnBgL,EAAQ+V,KAAqBU,MA5fxC,WAEQ9C,GACAI,EAAInI,UAAU,YAAYoB,SAG9B2G,EAAUI,EACL4D,OAAO,mBACPzL,OAAO,QACP/L,KAAK,QAAS,WACdA,KAAK,KAAM,GACXA,KAAK,KAAM8T,GACX9T,KAAK,SAAU8T,GACf9T,KAAK,QAAS6T,GACd7T,KAAK,OAhtBK,oBAitBVwF,MAAM,UAAW,QAnoBduV,GA6yBZ,WAEQtH,GACAG,EAAInI,UAAU,8BAA8BoB,SAGhD4G,EAA0BG,EACrB4D,OAAO,mBACPzL,OAAO,KACP/L,KAAK,QAAS,6BACdA,KAAK,YAAa,sBAEvB0T,EAAqBD,EAChBhI,UAAU,QACVE,KAAK,CACF,CACI3D,GAAI,EACJC,GAAI,EACJT,GAAI,EACJU,GAAI,KAGX4D,QACAC,OAAO,QACP0L,QAAQ,mBAAmB,GAC3BzX,KAAK,KAAM,GACXA,KAAK,KAAM8T,GACX9T,KAAK,KAAM,GACXA,KAAK,KAAM,GAx0BRgb,GAmCRpH,EAAIgH,GAAG,aAAa,SAAU/lB,IA4+BlC,SAAyB4Y,EAAG5Y,GACxB2e,EAAQhO,MAAM,UAAW,SACzBkO,EAAmB+D,QAAQ,gBAAgB,GAE3CjB,GAAW9hB,KAAK,kBAAmB+Y,EAAG5Y,EAAGomB,gBAAMxN,IA/+B3CyN,CAAgBjc,KAAMpK,MAErB+lB,GAAG,YAAY,SAAU/lB,IA69BlC,SAAwB4Y,EAAG5Y,GACvB2e,EAAQhO,MAAM,UAAW,QACzBkO,EAAmB+D,QAAQ,gBAAgB,GAC3ChE,EAAwBzT,KAAK,YAAa,sBAE1CwW,GAAW9hB,KAAK,iBAAkB+Y,EAAG5Y,EAAGomB,gBAAMxN,IAj+BtC0N,CAAelc,KAAMpK,MAExB+lB,GAAG,aAAa,SAAU/lB,IA47BnC,SAAyB4Y,GACrBkG,GAAWyH,KAEX,IAEIC,EAFJ,EAA6BJ,gBAAMxN,GAAnC,WAAK6N,EAAL,KAAgBC,EAAhB,KACIC,EAAYC,GAAoBH,EAAYtY,EAAOC,MAGnDuY,IAGAE,GAFAL,EAAqB1I,EAAO,IAAIvE,KAAKoN,EAAU1lB,OAI/C6lB,GAAoBH,GAEpBhF,GAAW9hB,KACP,kBACA+Y,EACA+N,EACA3G,GACAwG,EACAE,IA/8BAK,CAAgB3c,cAoB5B,SAAS0a,GAAkBnkB,GASvB,OANI+S,YAAU/S,GACDiT,IAEAD,KAGChT,GAoYlB,SAAS0kB,GAAkB3O,GACvBA,EACKE,UAAU,cACVzL,KACG,YAHR,qBA/jBmB,GA+jBnB,cApkBmB,EAokBnB,MAucJ,SAASiZ,KACL,OAAI3C,GACOL,GAAgBG,KAGpBvO,cAAI,CA7CJA,cAAI8D,EAAKpF,KAAI,SAAC1R,GAAD,OAAOA,EAAEW,WASzBuhB,EAAOxE,EAAK5G,EAAKpF,KAAI,SAACvR,GAAD,OAAOA,EAAEF,SACb+S,cAAIkM,GAAqB,SAAUlf,GACpD,IAAIqkB,EAAOnC,EAAKxQ,KAAI,SAACzQ,GAAD,OAASjB,EAAEiB,MAE/B,OAAOqjB,cAAID,OAgCiC1E,GAAe,IArCnE,IACQuC,EAyDR,SAAS0E,GAAoBI,GACzB,IAAIC,EAAS1J,EAAWK,QACpB,gBAAGpD,EAAH,EAAGA,KAAH,OAAcvF,KAAK4E,IAAIiE,EAAOtD,GAAQwM,IAAWlI,KAGrD,GAAImI,EAAO7e,OACP,OAAO6e,EAAO,GAStB,SAASV,KACL,IAAIW,EAAQ3J,EAAW7L,KAAI,qBAAG8I,QAE9BsE,GAAWhB,EAAOoJ,EAAM,IAAMpJ,EAAOoJ,EAAM,KAAO,EA8GtD,SAASJ,GAAT,GAAyC,IAAV/Q,EAAU,EAAVA,OACvBoR,EAAc,EA7NlBvI,EAAwBhI,UAAU,qBAAqBoB,SAkOvD,IAAIoP,EAAe/P,EAAM+K,QAAO,SAACC,EAAKgF,GAClC,oBAAWhF,GAAX,CAAgBtM,EAAOuR,MAAK,qBAAGrnB,OAAoBonB,SACpD,IAEHD,EAAa1W,SAAQ,SAAC1Q,EAAGykB,GACrB,IAAI8C,EAAS3I,EACR1H,OAAO,KACP0L,QAAQ,oBAAoB,GAC5B1L,OAAO,UACP0L,QAAQ,0BAA0B,GAClCzX,KAAK,KAzqCQ,IA0qCbA,KAAK,KAAM,GACXA,KAAK,IA1qCU,GA2qCfwF,MAAM,eA1qCS,KA2qCfA,MAAM,SAAUqP,GAAehgB,EAAEC,OACjC0Q,MAAM,SAAU,WAChBoV,GAAG,SAAS,YAxjCzB,SAAuB1U,GACd4O,KACDA,GAAkB9E,YACd4D,EAAI4D,OAAO,oBAEfzC,GAAoB7E,YAAqB4E,KAG7C,IAAIuH,EAAS7E,iBAAOtR,GAEpBmW,EACK7W,MAAM,eA9HwB,GA+H9BA,MAAM,iBA9H0B,IA+HhCxF,KAAK,SAHV,eAG4B+U,GAH5B,MAKA3E,YAAsBiM,EAAQhM,GAnIAiM,GA6qClBC,CAActd,MAhC9B,SAA8BwO,EAAG5Y,GAC7B2hB,GAAW9hB,KAAK,uBAAwB+Y,EAAG5Y,EAAGomB,gBAAMxN,IAgCxC+O,CAAqBvd,KAAMpK,MAE9B+lB,GAAG,YAAY,WA6B5B,IAAsB6B,IA5BOxd,KA6BzBuY,iBAAOiF,GAAOzc,KAAK,SAAU,WA1BzBgc,GAA4BC,EAAa3C,GAAOvD,IAEhDqG,EAAOpc,KACH,YADJ,sBAzrCkB,GAyrClB,aAE2C8S,EAAOkJ,GAFlD,UAYR,SAASN,GAAmBgB,GACxBjJ,EAAwBzT,KACpB,YADJ,oBAEiB0c,EAFjB,QAkgBJ,OAneAxpB,GAAQypB,kBAAoB,SAAUC,GAClC,OAAK5P,UAAU/P,QAGfwY,GAAwBmH,EAEjB3d,MAJIwW,IAgBfviB,GAAQkiB,UAAY,SAAUwH,GAC1B,OAAK5P,UAAU/P,QAGfmY,GAAYwH,EAEL3d,MAJImW,IAafliB,GAAQ8hB,YAAc,SAAU4H,GAC5B,OAAK5P,UAAU/P,QAGf+X,GAAc4H,EAEP3d,MAJI+V,IAaf9hB,GAAQqD,qBAAuBA,IAS/BrD,GAAQ2pB,SAAW,SAAUD,GACzB,OAAK5P,UAAU/P,QAGf4X,GAAiB+H,EAEV3d,MAJI4V,IAaf3hB,GAAQwhB,YAAc,SAAUkI,GAC5B,OAAK5P,UAAU/P,QAGfyX,GAAckI,EAEP3d,MAJIyV,IAcfxhB,GAAQ4iB,UAAY,SAAU8G,GAC1B,OAAK5P,UAAU/P,QAGf6Y,GAAY8G,EACZxf,YAA0B,QAEnB6B,MALI6W,IAcf5iB,GAAQ+iB,gBAAkB,SAAU2G,GAChC,OAAK5P,UAAU/P,QAGfgZ,GAAkB2G,EAEX3d,MAJIgX,IAaf/iB,GAAQyiB,KAAO,SAAUiH,GACrB,OAAK5P,UAAU/P,QAGf0Y,GAAOiH,EAEA3d,MAJI0W,IAafziB,GAAQwiB,WAAa,SAAUkH,GAC3B,OAAK5P,UAAU/P,QAGfyY,GAAakH,EAEN3d,MAJIyW,IAafxiB,GAAQ4M,OAAS,SAAU8c,GACvB,OAAK5P,UAAU/P,QAGf6C,EAAS8c,EAEF3d,MAJIa,GAaf5M,GAAQqiB,WAAa,SAAUqH,GAC3B,OAAK5P,UAAU/P,QAGfsY,GAAaqH,EAEN3d,MAJIsW,IAcfriB,GAAQ8iB,SAAW,SAAU4G,GACzB,OAAK5P,UAAU/P,QAGf+Y,GAAW4G,EACXxf,YAA0B,QAEnB6B,MALI+W,IAcf9iB,GAAQ8P,OAAS,SAAU4Z,GACvB,OAAK5P,UAAU/P,QAGf+F,EAAS,EAAH,KACCA,GACA4Z,GAGA3d,MAPI+D,GAiBf9P,GAAQ0iB,iBAAmB,SAAUgH,GACjC,OAAK5P,UAAU/P,QAGf2Y,GAAmBgH,EAEZ3d,MAJI2W,IAaf1iB,GAAQggB,YAAc,SAAU0J,GAC5B,OAAK5P,UAAU/P,QAGfiW,EAAc0J,EAEP3d,MAJIiU,GAafhgB,GAAQkhB,UAAY,SAAU0I,GAC1B,OAAK9P,UAAU/P,QAGfmX,GAAY0I,EAEL7d,MAJImV,IAeflhB,GAAQ6b,OAAS,SAAU6N,GACvB,OAAK5P,UAAU/P,QAGf8R,EAAS6N,EAEF3d,MAJI8P,GAcf7b,GAAQgM,YAAc,SAAUE,EAAUC,GACtC,OAAOH,IAAYxK,KAAKxB,GAAS0gB,EAAKxU,EAAUC,IAWpDnM,GAAQ0nB,GAAK,WACT,IAAIplB,EAAQghB,GAAWoE,GAAG5P,MAAMwL,GAAYxJ,WAE5C,OAAOxX,IAAUghB,GAAatjB,GAAUsC,GAU5CtC,GAAQ6iB,WAAa,SAAU6G,GAC3B,OAAK5P,UAAU/P,QAGf8Y,GAAa6G,EACbxf,YAA0B,SAEnB6B,MALI8W,IAcf7iB,GAAQ2M,MAAQ,SAAU+c,GACtB,OAAK5P,UAAU/P,QAGf4C,EAAQ+c,EAED3d,MAJIY,GAiBf3M,GAAQiiB,kBAAoB,SAAUyH,GAClC,OAAK5P,UAAU/P,QAGfkY,GAAoByH,EAEb3d,MAJIkW,IAgBfjiB,GAAQ+hB,YAAc,SAAU2H,GAC5B,OAAK5P,UAAU/P,QAGfgY,GAAc2H,EAEP3d,MAJIgW,IAgBf/hB,GAAQmhB,eAAiB,SAAUuI,GAC/B,OAAK5P,UAAU/P,QAGfoX,GAAiBuI,EAEV3d,MAJIoV,IAgBfnhB,GAAQohB,WAAa,SAAUsI,GAC3B,OAAK5P,UAAU/P,QAGfqX,GAAasI,EAEN3d,MAJIqV,IAefphB,GAAQgiB,OAAS,SAAU0H,GACvB,OAAK5P,UAAU/P,QAGfiY,GAAS0H,EAEF3d,MAJIiW,IAcfhiB,GAAQ8f,WAAa,SAAU4J,GAC3B,OAAK5P,UAAU/P,QAGf+V,EAAa4J,EAEN3d,MAJI+T,GAef9f,GAAQuhB,iBAAmB,SAAUmI,GACjC,OAAK5P,UAAU/P,QAGfwX,GAAmBmI,EAEZ3d,MAJIwV,IAafvhB,GAAQqhB,OAAS,SAAUqI,GACvB,OAAK5P,UAAU/P,QAGfsX,GAASqI,EAEF3d,MAJIsV,IAefrhB,GAAQshB,cAAgB,SAAUoI,GAC9B,OAAK5P,UAAU/P,QAGfuX,GAAgBoI,EAET3d,MAJIuV,IAORthB,O","file":"stackedArea.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3-time\"), require(\"d3-shape\"), require(\"d3-selection\"), require(\"d3-format\"), require(\"d3-array\"), require(\"d3-scale\"), require(\"d3-axis\"), require(\"d3-time-format\"), require(\"d3-ease\"), require(\"d3-transition\"), require(\"d3-dispatch\"), require(\"d3-collection\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3-time\", \"d3-shape\", \"d3-selection\", \"d3-format\", \"d3-array\", \"d3-scale\", \"d3-axis\", \"d3-time-format\", \"d3-ease\", \"d3-transition\", \"d3-dispatch\", \"d3-collection\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"stackedArea\"] = factory(require(\"d3-time\"), require(\"d3-shape\"), require(\"d3-selection\"), require(\"d3-format\"), require(\"d3-array\"), require(\"d3-scale\"), require(\"d3-axis\"), require(\"d3-time-format\"), require(\"d3-ease\"), require(\"d3-transition\"), require(\"d3-dispatch\"), require(\"d3-collection\"));\n\telse\n\t\troot[\"britecharts\"] = root[\"britecharts\"] || {}, root[\"britecharts\"][\"stackedArea\"] = factory(root[\"d3-time\"], root[\"d3-shape\"], root[\"d3-selection\"], root[\"d3-format\"], root[\"d3-array\"], root[\"d3-scale\"], root[\"d3-axis\"], root[\"d3-time-format\"], root[\"d3-ease\"], root[\"d3-transition\"], root[\"d3-dispatch\"], root[\"d3-collection\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__11__, __WEBPACK_EXTERNAL_MODULE__14__, __WEBPACK_EXTERNAL_MODULE__17__, __WEBPACK_EXTERNAL_MODULE__22__, __WEBPACK_EXTERNAL_MODULE__23__, __WEBPACK_EXTERNAL_MODULE__39__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 60);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","import {\n    curveLinear,\n    curveBasis,\n    curveCardinal,\n    curveCatmullRom,\n    curveMonotoneX,\n    curveMonotoneY,\n    curveNatural,\n    curveStep,\n    curveStepAfter,\n    curveStepBefore,\n} from 'd3-shape';\nimport {\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeDay,\n    utcDay,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n} from 'd3-time';\n\nexport const axisTimeCombinations = {\n    MINUTE_HOUR: 'minute-hour',\n    HOUR_DAY: 'hour-daymonth',\n    DAY_MONTH: 'day-month',\n    MONTH_YEAR: 'month-year',\n    CUSTOM: 'custom',\n};\n\nexport const timeBenchmarks = {\n    ONE_AND_A_HALF_YEARS: 47304000000,\n    ONE_YEAR: 31536000365,\n    ONE_DAY: 86400001,\n};\n\nexport const hoursHuman = [\n    '00h',\n    '01h',\n    '02h',\n    '03h',\n    '04h',\n    '05h',\n    '06h',\n    '07h',\n    '08h',\n    '09h',\n    '10h',\n    '11h',\n    '12h',\n    '13h',\n    '14h',\n    '15h',\n    '16h',\n    '17h',\n    '18h',\n    '19h',\n    '20h',\n    '21h',\n    '22h',\n    '23h',\n];\n\nexport const motion = {\n    duration: 1200,\n};\n\nexport const curveMap = {\n    linear: curveLinear,\n    basis: curveBasis,\n    cardinal: curveCardinal,\n    catmullRom: curveCatmullRom,\n    monotoneX: curveMonotoneX,\n    monotoneY: curveMonotoneY,\n    natural: curveNatural,\n    step: curveStep,\n    stepAfter: curveStepAfter,\n    stepBefore: curveStepBefore,\n};\n\nexport const emptyDonutData = [\n    {\n        quantity: 1,\n        percentage: 100,\n    },\n];\n\nexport const timeIntervals = {\n    timeMillisecond: timeMillisecond,\n    utcMillisecond: utcMillisecond,\n    timeSecond: timeSecond,\n    utcSecond: utcSecond,\n    timeMinute: timeMinute,\n    utcMinute: utcMinute,\n    timeHour: timeHour,\n    utcHour: utcHour,\n    timeDay: timeDay,\n    utcDay: utcDay,\n    timeWeek: timeWeek,\n    utcWeek: utcWeek,\n    timeSunday: timeSunday,\n    utcSunday: utcSunday,\n    timeMonday: timeMonday,\n    utcMonday: utcMonday,\n    timeTuesday: timeTuesday,\n    utcTuesday: utcTuesday,\n    timeWednesday: timeWednesday,\n    utcWednesday: utcWednesday,\n    timeThursday: timeThursday,\n    utcThursday: utcThursday,\n    timeFriday: timeFriday,\n    utcFriday: utcFriday,\n    timeSaturday: timeSaturday,\n    utcSaturday: utcSaturday,\n    timeMonth: timeMonth,\n    utcMonth: utcMonth,\n    timeYear: timeYear,\n    utcYear: utcYear,\n};\n\nexport default {\n    axisTimeCombinations,\n    curveMap,\n    emptyDonutData,\n    timeBenchmarks,\n    lineGradientId: 'lineGradientId',\n    timeIntervals,\n    hoursHuman,\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","// Color Gradients\nexport const colorGradients = {\n    greenBlue: ['#39C7EA', '#4CDCBA'],\n    orangePink: ['#FBC670', '#F766B8'],\n    bluePurple: ['#3DC3C9', '#824a9e'],\n};\nexport const colorGradientsHuman = {\n    greenBlue: 'Green to Blue',\n    orangePink: 'Orange to Pink',\n    bluePurple: 'Blue to Purple',\n};\n\n// Color Schemas\n// Standard Color Schema for Britecharts\nexport const britecharts = [\n    '#6aedc7', //green\n    '#39c2c9', //blue\n    '#ffce00', //yellow\n    '#ffa71a', //orange\n    '#f866b9', //pink\n    '#998ce3', //purple\n];\n// Grey Palette\nexport const grey = [\n    '#F8F8FA',\n    '#EFF2F5',\n    '#D2D6DF',\n    '#C3C6CF',\n    '#ADB0B6',\n    '#666A73',\n    '#45494E',\n    '#363A43',\n    '#282C35',\n];\n// Orange Palette\nexport const orange = [\n    '#fcc870',\n    '#ffa71a',\n    '#fb8825',\n    '#f6682f',\n    '#db5a2c',\n    '#bf4c28',\n    '#a43b1c',\n    '#892a10',\n    '#f9e9c5',\n];\n// Blue Palette\nexport const blueGreen = [\n    '#ccf7f6',\n    '#70e4e0',\n    '#00d8d2',\n    '#00acaf',\n    '#007f8c',\n    '#005e66',\n    '#003c3f',\n    '#002d2f',\n    '#0d2223',\n];\n// LightBlue Palette\nexport const teal = [\n    '#ccfffe',\n    '#94f7f4',\n    '#00fff8',\n    '#1de1e1',\n    '#39c2c9',\n    '#2e9a9d',\n    '#227270',\n    '#1a5957',\n    '#133f3e',\n];\n// Green Palette\nexport const green = [\n    '#edfff7',\n    '#d7ffef',\n    '#c0ffe7',\n    '#95f5d7',\n    '#6aedc7',\n    '#59c3a3',\n    '#479980',\n    '#34816a',\n    '#206953',\n];\n// Yellow Palette\nexport const yellow = [\n    '#f9f2b3',\n    '#fbe986',\n    '#fce05a',\n    '#fed72d',\n    '#ffce00',\n    '#fcc11c',\n    '#f9b438',\n    '#eda629',\n    '#e09819',\n];\n// Pink Palette\nexport const pink = [\n    '#fdd1ea',\n    '#fb9cd2',\n    '#f866b9',\n    '#fc40b6',\n    '#ff1ab3',\n    '#e3239d',\n    '#c62c86',\n    '#a62073',\n    '#85135f',\n];\n// Purple Palette\nexport const purple = [\n    '#ddd6fc',\n    '#bbb1f0',\n    '#998ce3',\n    '#8e6bc1',\n    '#824a9e',\n    '#77337f',\n    '#6b1c60',\n    '#591650',\n    '#470f3f',\n];\n// Red Palette\nexport const red = [\n    '#ffd8d4',\n    '#ffb5b0',\n    '#ff938c',\n    '#ff766c',\n    '#ff584c',\n    '#f04b42',\n    '#e03d38',\n    '#be2e29',\n    '#9c1e19',\n];\n\nexport const colorSchemas = {\n    britecharts,\n    grey,\n    orange,\n    blueGreen,\n    teal,\n    green,\n    yellow,\n    pink,\n    purple,\n    red,\n};\nexport const colorSchemasHuman = {\n    britecharts: 'Britecharts Default',\n    grey: 'Britecharts Grey',\n    orange: 'Orange',\n    blueGreen: 'Blue',\n    teal: 'Light Blue',\n    green: 'Green',\n    yellow: 'Yellow',\n    pink: 'Pink',\n    purple: 'Purple',\n    red: 'Red',\n};\n\n// Single Colors\nexport const aloeGreen = ['#7bdcc0']; // To Deprecate\nexport const greenColor = ['#6aedc7'];\nexport const blueColor = ['#39c2c9'];\nexport const yellowColor = ['#ffce00'];\nexport const orangeColor = ['#ffa71a'];\nconst pinkColor = ['#f866b9'];\nconst purpleColor = ['#998ce3'];\n\nconst singleColors = {\n    aloeGreen,\n    greenColor,\n    blueColor,\n    yellowColor,\n    orangeColor,\n    pinkColor,\n    purpleColor,\n};\nconst singleColorsHuman = {\n    aloeGreen: 'Aloe Green',\n    greenColor: 'Green',\n    blueColor: 'Blue',\n    yellowColor: 'Yellow',\n    orangeColor: 'Orange',\n    pinkColor: 'Pink',\n    purpleColor: 'Purple',\n};\n\nexport default {\n    colorSchemas,\n    colorSchemasHuman,\n    colorGradients,\n    colorGradientsHuman,\n    singleColors,\n    singleColorsHuman,\n};\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","export const dataKeyDeprecationMessage = (keyName) => {\n    // eslint-disable-next-line no-console\n    console.warn(\n        `This method is being deprecated! Please modify your data to use \"${keyName}\" as the key.`\n    );\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__14__;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","module.exports = __WEBPACK_EXTERNAL_MODULE__17__;","import base64 from 'base-64';\n\nimport { colorSchemas } from './color';\nimport serializeWithStyles from './style';\n\nconst isBrowser = typeof window !== 'undefined';\nconst isIE = navigator.msSaveOrOpenBlob;\nconst IE_ERROR_MSG =\n    'Sorry, this feature is not available for IE. If you require this to work, check this issue https://github.com/eventbrite/britecharts/pull/652';\nconst DEFAULT_FONT_STACK = '‘Helvetica Neue’, Helvetica, Arial, sans-serif';\n\nlet encoder = isBrowser && window.btoa;\n\nif (!encoder) {\n    encoder = base64.encode;\n}\n\n// Base64 doesn't work really well with Unicode strings, so we need to use this function\n// Ref: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\nconst b64EncodeUnicode = (str) => {\n    return encoder(\n        encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function (\n            match,\n            p1\n        ) {\n            return String.fromCharCode('0x' + p1);\n        })\n    );\n};\n\nconst config = {\n    styleClass: 'britechartStyle',\n    defaultFilename: 'britechart.png',\n    chartBackground: 'white',\n    imageSourceBase: 'data:image/svg+xml;base64,',\n    titleFontSize: '15px',\n    // eslint-disable-next-line quotes\n    titleFontFamily: DEFAULT_FONT_STACK,\n    titleTopOffset: 15,\n    get styleBackgroundString() {\n        return `<style>svg{background:${this.chartBackground};}</style>`;\n    },\n};\n\n/**\n * Main function to be used as a method by chart instances to export charts to png\n * @param  {array} svgs         (or an svg element) pass in both chart & legend as array or just chart as svg or in array\n * @param  {string} filename    [download to be called <filename>.png]\n * @param  {string} title       Title for the image\n * @private\n */\nexport function exportChart(d3svg, filename, title) {\n    if (isIE) {\n        // eslint-disable-next-line no-console\n        console.error(IE_ERROR_MSG);\n\n        return false;\n    }\n\n    return loadImage(convertSvgToHtml.call(this, d3svg, title))\n        .then((img) => {\n            return {\n                canvas: createCanvas(this.width(), this.height()),\n                img,\n            };\n        })\n        .then(({ canvas, img }) => handleImageLoad.call(img, canvas, filename));\n}\n\n/**\n * adds background styles to raw html\n * @param {string} html raw html\n * @private\n */\nfunction addBackground(html) {\n    return html.replace('>', `>${config.styleBackgroundString}`);\n}\n\n/**\n * Takes the D3 SVG element, adds proper SVG tags, adds inline styles\n * from stylesheets, adds white background and returns string\n * @param  {SVGElement} d3svg   TYPE d3 svg element\n * @return {String}             String of passed d3\n * @private\n */\nexport function convertSvgToHtml(d3svg, title) {\n    if (!d3svg) {\n        return;\n    }\n\n    d3svg.attr('version', 1.1).attr('xmlns', 'http://www.w3.org/2000/svg');\n    let serializer = serializeWithStyles.initializeSerializer();\n    let html = serializer(d3svg.node());\n\n    html = formatHtmlByBrowser(html);\n    html = prependTitle.call(\n        this,\n        html,\n        title,\n        parseInt(d3svg.attr('width'), 10)\n    );\n    html = addBackground(html);\n\n    return html;\n}\n\n/**\n * Create Canvas\n * @param  {number} width\n * @param  {number} height\n * @return {object} TYPE canvas element\n * @private\n */\nfunction createCanvas(width, height) {\n    let canvas = document.createElement('canvas');\n\n    canvas.height = height;\n    canvas.width = width;\n\n    return canvas;\n}\n\n/**\n * Create Image\n * @param  {string} svgHtml string representation of svg el\n * @param  {Function} callback function to prepare image for loading\n * @return {object}  TYPE element <img>, src points at svg\n * @private\n */\nfunction createImage(svgHtml, callback) {\n    let img = new Image();\n\n    if (callback) {\n        if (typeof callback !== 'function') {\n            throw new Error(\n                `The callback provided should be a function, we got a ${typeof callback} instead.`\n            );\n        }\n        callback(img);\n    }\n    img.src = `${config.imageSourceBase}${b64EncodeUnicode(svgHtml)}`;\n\n    return img;\n}\n\n/**\n * Draws image on canvas\n * @param  {object} image TYPE:el <img>, to be drawn\n * @param  {object} canvas TYPE: el <canvas>, to draw on\n * @private\n */\nexport function drawImageOnCanvas(image, canvas) {\n    canvas.getContext('2d').drawImage(image, 0, 0);\n\n    return canvas;\n}\n\n/**\n * Triggers browser to download image, convert canvas to url,\n * we need to append the link el to the dom before clicking it for Firefox to register\n * point <a> at it and trigger click\n * @param  {object} canvas TYPE: el <canvas>\n * @param  {string} filename\n * @param  {string} extensionType\n * @private\n */\nfunction downloadCanvas(\n    canvas,\n    filename = config.defaultFilename,\n    extensionType = 'image/png'\n) {\n    let url = canvas.toDataURL(extensionType);\n    let link = document.createElement('a');\n\n    link.href = url;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n}\n\n/**\n * Some browsers need special formatting, we handle that here\n * @param  {string} html string of svg html\n * @return {string} string of svg html\n * @private\n */\nfunction formatHtmlByBrowser(html) {\n    if (navigator.userAgent.search('FireFox') > -1) {\n        return html.replace(\n            /url.*&quot;\\)/,\n            'url(&quot;linearGradient[id*=\"-gradient-\"]&quot;);'\n        );\n    }\n\n    return html;\n}\n\n/**\n * Handles on load event fired by img.onload, this=img\n * @param  {object} canvas TYPE: el <canvas>\n * @param  {string} filename\n * @private\n */\nfunction handleImageLoad(canvas, filename) {\n    downloadCanvas(drawImageOnCanvas(this, canvas), filename);\n}\n\n/**\n * Create Image instance and attach event listeners for future promise\n * @param  {string} svgHtml string representation of svg el\n * @returns {Promise} promise that exposes loaded image instance\n * @private\n */\nfunction loadImage(svgHtml) {\n    return new Promise((res, rej) => {\n        createImage(svgHtml, (img) => {\n            img.addEventListener('load', () => res(img));\n            img.addEventListener('error', (err) => rej(err));\n        });\n    });\n}\n\n/**\n * if passed, append title to the raw html to appear on graph\n * @param  {string} html     raw html string\n * @param  {string} title    title of the graph\n * @param  {number} svgWidth width of graph container\n * @return {string}         raw html with title prepended\n * @private\n */\nfunction prependTitle(html, title, svgWidth) {\n    if (!title || !svgWidth) {\n        return html;\n    }\n    let { grey } = colorSchemas;\n\n    html = html.replace(\n        /<g/,\n        `<text x=\"${this.margin().left}\" y=\"${\n            config.titleTopOffset\n        }\" font-family=\"${config.titleFontFamily}\" font-size=\"${\n            config.titleFontSize\n        }\" fill=\"${grey[6]}\"> ${title} </text><g `\n    );\n\n    return html;\n}\n\nexport default {\n    exportChart,\n    convertSvgToHtml,\n    createImage,\n    drawImageOnCanvas,\n    loadImage,\n};\n","/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '0.1.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n","module.exports = (function () {\n    'use strict';\n\n    // Styles inherited from style sheets will not be rendered for elements with these tag names\n    const noStyleTags = {\n        BASE: true,\n        HEAD: true,\n        HTML: true,\n        META: true,\n        NOFRAME: true,\n        NOSCRIPT: true,\n        PARAM: true,\n        SCRIPT: true,\n        STYLE: true,\n        TITLE: true,\n    };\n\n    // This list determines which css default values lookup tables are precomputed at load time\n    // Lookup tables for other tag names will be automatically built at runtime if needed\n    const tagNames = [\n        'A',\n        'ABBR',\n        'ADDRESS',\n        'AREA',\n        'ARTICLE',\n        'ASIDE',\n        'AUDIO',\n        'B',\n        'BASE',\n        'BDI',\n        'BDO',\n        'BLOCKQUOTE',\n        'BODY',\n        'BR',\n        'BUTTON',\n        'CANVAS',\n        'CAPTION',\n        'CENTER',\n        'CITE',\n        'CODE',\n        'COL',\n        'COLGROUP',\n        'COMMAND',\n        'DATALIST',\n        'DD',\n        'DEL',\n        'DETAILS',\n        'DFN',\n        'DIV',\n        'DL',\n        'DT',\n        'EM',\n        'EMBED',\n        'FIELDSET',\n        'FIGCAPTION',\n        'FIGURE',\n        'FONT',\n        'FOOTER',\n        'FORM',\n        'H1',\n        'H2',\n        'H3',\n        'H4',\n        'H5',\n        'H6',\n        'HEAD',\n        'HEADER',\n        'HGROUP',\n        'HR',\n        'HTML',\n        'I',\n        'IFRAME',\n        'IMG',\n        'INPUT',\n        'INS',\n        'KBD',\n        'LABEL',\n        'LEGEND',\n        'LI',\n        'LINK',\n        'MAP',\n        'MARK',\n        'MATH',\n        'MENU',\n        'META',\n        'METER',\n        'NAV',\n        'NOBR',\n        'NOSCRIPT',\n        'OBJECT',\n        'OL',\n        'OPTION',\n        'OPTGROUP',\n        'OUTPUT',\n        'P',\n        'PARAM',\n        'PRE',\n        'PROGRESS',\n        'Q',\n        'RP',\n        'RT',\n        'RUBY',\n        'S',\n        'SAMP',\n        'SCRIPT',\n        'SECTION',\n        'SELECT',\n        'SMALL',\n        'SOURCE',\n        'SPAN',\n        'STRONG',\n        'STYLE',\n        'SUB',\n        'SUMMARY',\n        'SUP',\n        'SVG',\n        'TABLE',\n        'TBODY',\n        'TD',\n        'TEXTAREA',\n        'TFOOT',\n        'TH',\n        'THEAD',\n        'TIME',\n        'TITLE',\n        'TR',\n        'TRACK',\n        'U',\n        'UL',\n        'VAR',\n        'VIDEO',\n        'WBR',\n    ];\n\n    /**\n     * Extracts the styles of elements of the given tag name\n     * @param {String} tagName  Tag name that we will check for styles\n     * @return {Object}         Values of the styles applied to the given element\n     * @private\n     */\n    const computeDefaultStyleByTagName = (tagName) => {\n        let defaultStyle = {},\n            element = document.body.appendChild(\n                document.createElement(tagName)\n            ),\n            computedStyle = window.getComputedStyle(element);\n\n        [].forEach.call(computedStyle, (style) => {\n            defaultStyle[style] = computedStyle[style];\n        });\n        document.body.removeChild(element);\n\n        return defaultStyle;\n    };\n\n    /**\n     * Returns a serializer function, only run it when you know you want to serialize your chart\n     * @return {func} serializer to add styles in line to dom string\n     * @private\n     */\n    const initializeSerializer = () => {\n        // Mapping between tag names and css default values lookup tables. This allows to exclude default values in the result.\n        var defaultStylesByTagName = {};\n\n        // Precompute the lookup tables.\n        [].forEach.call(tagNames, (name) => {\n            if (!noStyleTags[name]) {\n                defaultStylesByTagName[name] = computeDefaultStyleByTagName(\n                    name\n                );\n            }\n        });\n\n        function getDefaultStyleByTagName(tagName) {\n            tagName = tagName.toUpperCase();\n\n            if (!defaultStylesByTagName[tagName]) {\n                defaultStylesByTagName[tagName] = computeDefaultStyleByTagName(\n                    tagName\n                );\n            }\n\n            return defaultStylesByTagName[tagName];\n        }\n\n        function serializeWithStyles(elem) {\n            let cssTexts = [],\n                elements,\n                computedStyle,\n                defaultStyle,\n                result;\n\n            if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n                // 'Error: Object passed in to serializeWithSyles not of nodeType Node.ELEMENT_NODE'\n\n                return;\n            }\n\n            cssTexts = [];\n            elements = elem.querySelectorAll('*');\n\n            [].forEach.call(elements, (el, i) => {\n                if (!noStyleTags[el.tagName]) {\n                    computedStyle = window.getComputedStyle(el);\n                    defaultStyle = getDefaultStyleByTagName(el.tagName);\n                    cssTexts[i] = el.style.cssText;\n                    [].forEach.call(computedStyle, (cssPropName) => {\n                        if (\n                            computedStyle[cssPropName] !==\n                            defaultStyle[cssPropName]\n                        ) {\n                            el.style[cssPropName] = computedStyle[cssPropName];\n                        }\n                    });\n                }\n            });\n\n            result = elem.outerHTML;\n            elements = [].map.call(elements, (el, i) => {\n                el.style.cssText = cssTexts[i];\n\n                return el;\n            });\n\n            return result;\n        }\n\n        return serializeWithStyles;\n    };\n\n    return {\n        initializeSerializer,\n    };\n})();\n","import { format } from 'd3-format';\nimport { max, min } from 'd3-array';\n\nlet idCounter = 0;\n\nconst integerValueFormats = {\n    small: {\n        limit: 10,\n        format: format(''),\n    },\n    medium: {\n        limit: 1000,\n        format: format(''),\n    },\n    large: {\n        limit: null,\n        format: format('.2s'),\n    },\n};\n\nconst decimalValueFormats = {\n    small: {\n        limit: 10,\n        format: format('.3f'),\n    },\n    medium: {\n        limit: 100,\n        format: format('.1f'),\n    },\n    large: {\n        limit: null,\n        format: format('.2s'),\n    },\n};\n\n/**\n * Return a relative size for the value given, based in our decimal or integer tables\n * @param {Number} value    Value to assess its relative size\n * @param {Object} limits   Object stablishing the limits and formats\n * to consider the value of a given size\n * @private\n */\nconst getValueSize = (value, limits) => {\n    let size = 'large';\n\n    if (value < limits.small.limit) {\n        size = 'small';\n    } else if (value < limits.medium.limit) {\n        size = 'medium';\n    }\n\n    return size;\n};\n\n/**\n * Returns an object that contains necessary coordinates for drawing the trendline. The\n * calculation of slope and y-intercept uses basic accumulative linear regression formula.\n * @param  {Object[]} dataPoints    Array of circle data points\n * @return {Object}\n * @private\n */\nexport const calcLinearRegression = (dataPoints) => {\n    let n = dataPoints.length,\n        x = 0,\n        y = 0,\n        xy = 0,\n        x2 = 0;\n\n    dataPoints.forEach((d) => {\n        x += d.x;\n        y += d.y;\n        xy += d.x * d.y;\n        x2 += d.x * d.x;\n    });\n\n    const denominator = n * x2 - x * x;\n    const intercept = (y * x2 - x * xy) / denominator;\n    const slope = (n * xy - x * y) / denominator;\n    const minX = min(dataPoints, ({ x }) => x);\n    const maxX = max(dataPoints, ({ x }) => x);\n\n    return {\n        x1: minX,\n        y1: slope * n + intercept,\n        x2: maxX,\n        y2: slope * maxX + intercept,\n    };\n};\n\n/**\n * Calculates percentage of value from total\n * @param  {Number}  value    Value to check\n * @param  {Number}  total    Sum of values\n * @param  {String}  decimals Specifies number of decimals https://github.com/d3/d3-format\n * @return {String}           Percentage\n * @private\n */\nexport const calculatePercent = (value, total, decimals) => {\n    const percent = total ? (value / total) * 100 : 0;\n\n    return format(decimals)(percent);\n};\n\n/**\n * Checks if a number is an integer or a decimal value\n * @param  {Number}  value Value to check\n * @return {Boolean}       If it is an iteger\n * @private\n */\nexport const isInteger = (value) => {\n    return value % 1 === 0;\n};\n\n/**\n * Formats a floating point value depending on its value range\n * @param  {Number} value Decimal point value to format\n * @return {Number}       Formatted value to show\n * @private\n */\nexport const formatDecimalValue = (value) => {\n    let size = getValueSize(value, decimalValueFormats);\n    let format = decimalValueFormats[size].format;\n\n    return format(value);\n};\n\n/**\n * Formats an integer value depending on its value range\n * @param  {Number} value Decimal point value to format\n * @return {Number}       Formatted value to show\n * @private\n */\nexport const formatIntegerValue = (value) => {\n    let size = getValueSize(value, integerValueFormats);\n    let format = integerValueFormats[size].format;\n\n    return format(value);\n};\n\n/**\n * Generates a unique id with a prefix\n * @param  {String} prefix   Prefix to add before the id\n * @return {String}          Unique id\n * @private\n */\nexport const uniqueId = (prefix) => {\n    const id = ++idCounter;\n\n    return `${prefix.toString()}-${id}`;\n};\n\nexport default {\n    calculatePercent,\n    isInteger,\n    formatDecimalValue,\n    formatIntegerValue,\n    uniqueId,\n    calcLinearRegression,\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__22__;","module.exports = __WEBPACK_EXTERNAL_MODULE__23__;","export const linearGradient = `\n        <defs>\n            <linearGradient id=\"lgrad\" x1=\"0%\" y1=\"50%\" x2=\"100%\" y2=\"50%\" >\n                <stop offset=\"0\" stop-color=\"#ffffff\" stop-opacity=\"0.8\" />\n                <stop offset=\"33.33%\" stop-color=\"#ffffff\" stop-opacity=\"0.8\" />\n                <stop offset=\"50%\" stop-color=\"#ffffff\" stop-opacity=\"0\" />\n                <stop offset=\"66.66%\" stop-color=\"#ffffff\" stop-opacity=\"0.8\" />\n                <stop offset=\"100%\" stop-color=\"#ffffff\" stop-opacity=\"0.8\" />\n            </linearGradient>\n        </defs>\n    `;\n\nexport const barLoadingMarkup = `\n        <svg class=\"load-state bar-load-state\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 711 325\">\n            ${linearGradient}\n            <g fill=\"none\" fill-rule=\"evenodd\">\n                <g transform=\"translate(-15 29)\">\n                    <g stroke=\"#EFF2F5\" stroke-dasharray=\"4 4\">\n                        <path d=\"M.400592911 200.302477L710.674315 200.302477M.400592884 131.172748L710.674315 131.172748M.324410282 64.2071321L710.621499 64.2071321M.291004517.563888874L709.82431.563888889\"/>\n                    </g>\n                    <g fill=\"#D2D6DF\" transform=\"translate(63.08 11)\">\n                        <polygon points=\"-.08 176 23.92 176 23.92 255 -.08 255\"/>\n                        <polygon points=\"50.829 147 74.829 147 74.829 255 50.829 255\"/>\n                        <polygon points=\"254.465 0 278.465 0 278.465 255 254.465 255\"/>\n                        <polygon points=\"458.102 169 482.102 169 482.102 255 458.102 255\"/>\n                        <polygon points=\"152.647 82 176.647 82 176.647 255 152.647 255\"/>\n                        <polygon points=\"356.283 66 380.283 66 380.283 255 356.283 255\"/>\n                        <polygon points=\"559.92 229 583.92 229 583.92 255 559.92 255\"/>\n                        <polygon points=\"101.738 115 125.738 115 125.738 255 101.738 255\"/>\n                        <polygon points=\"305.374 42 329.374 42 329.374 255 305.374 255\"/>\n                        <polygon points=\"509.011 201 533.011 201 533.011 255 509.011 255\"/>\n                        <polygon points=\"203.556 19 227.556 19 227.556 255 203.556 255\"/>\n                        <polygon points=\"407.192 115 431.192 115 431.192 255 407.192 255\"/>\n                    </g>\n                </g>\n                <polygon fill=\"#D2D6DF\" fill-rule=\"nonzero\" points=\"0 295 711 295 711 294 0 294\"/>\n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport const donutLoadingMarkup = `\n        <svg class=\"load-state donut-load-state\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 376 331\">\n            ${linearGradient}\n            <g fill=\"none\" fill-rule=\"evenodd\">\n                <g transform=\"translate(116 107)\">\n                    <circle cx=\"72\" cy=\"72\" r=\"72\" stroke=\"#EFF2F5\" stroke-linecap=\"round\" stroke-width=\"9.6\"/>\n                    <path stroke=\"#D2D6DF\" stroke-width=\"19.2\" d=\"M126.153559,119.524055 C137.264629,106.845712 144,90.2321371 144,72.0444604 C144,32.2554036 111.764502,0 72,0\"/>\n                    <circle cx=\"72\" cy=\"72\" r=\"67.2\" fill=\"#FFF\"/>\n                </g>\n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport const lineLoadingMarkup = `\n        <svg\n            class=\"load-state line-load-state\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 711 325\"\n        >\n            ${linearGradient}\n            <g transform=\"translate(-10 -10)\">\n                <path\n                    id=\"chart-bg\"\n                    class=\"chart-bg\"\n                    style=\"stroke:#C3C6CF;\"\n                    d=\"M3.4,216.5h707.3 M3.4,160.5h707.3 M3.3,103.5h707.3 M3.3,48.5h707.6 M0.4,276.6H710H0.4z\"\n                />\n                <polyline\n                    id=\"chart-line\"\n                    class=\"chart-line\"\n                    style=\"stroke:#C3C6CF;stroke-width:4;fill:none;\"\n                    points=\"8.8,175.8 62.4,237.7 116.1,184.7 169.7,175.8 223.3,57 277,176.8 330.6,176.8 384.3,122.5 437.9,176.8 491.6,176.8 545.2,218.4 598.8,122.5 652.5,184.7 706.1,135.1 \"\n                />\n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport const stackedAreaLoadingMarkup = `\n        <svg\n            class=\"load-state stacked-area-load-state\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 711 325\"\n        >\n            ${linearGradient}\n            <path\n                id=\"chart-bg\"\n                class=\"chart-bg\"\n                style=\"stroke:#C3C6CF;\"\n                d=\"M3.4,216.5h707.3 M3.4,160.5h707.3 M3.3,103.5h707.3 M3.3,48.5h707.6 M0.4,276.6H710H0.4z\"\n            />\n            <g transform=\"translate(20 53)\">\n                <path\n                    id=\"chart-area\"\n                    strokeLinecap=\"square\"\n                    d=\"M0.34233103,0.593688165 L709.977885,0.593688189\"\n                    transform=\"translate(.01 227.976)\"\n                />\n                <path fill=\"#C3C6CF\" d=\"M0.528124801,224.014648 L0.528124801,177.734375 L53.3834796,177.734375 C71.5390789,177.734375 86.8277373,168.972754 101.240241,151.662202 C112.578335,138.044258 121.139826,123.110227 136.974507,91.596773 C137.343842,90.8617404 139.300293,86.9654028 139.856735,85.8583549 C155.041692,55.6476711 163.354313,41.0906306 174.319873,27.7179171 C188.951312,9.87459412 204.885845,0.5 223.830634,0.5 C242.123071,0.5 257.291724,8.27027858 270.907992,23.1359289 C281.228683,34.4036118 289.135925,47.1272372 302.542017,72.085092 C303.275893,73.4513345 306.289669,79.0766612 307.063369,80.5168656 C321.41025,107.222876 330.088083,120.97663 341.470704,132.92446 C355.88994,148.05969 371.908861,155.792969 391.654853,155.792969 C412.142049,155.792969 428.763593,152.325614 442.880698,145.765582 C454.197328,140.506893 463.373931,133.679865 473.786035,123.626931 C476.528659,120.978915 486.44777,110.911455 488.791866,108.6483 C502.907223,95.0203436 514.194325,88.9355469 530.135322,88.9355469 C546.532652,88.9355469 559.505909,97.338499 575.973261,115.41103 C579.723508,119.526837 593.103621,135.086814 592.915496,134.871799 C605.09738,148.794859 614.368835,157.635549 625.072091,164.58539 C638.386599,173.230769 652.701021,177.734375 669.279853,177.734375 L673.779853,177.734375 L673.779853,224.014648 L0.528124801,224.014648 Z\" />\n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport const sparkLineLoadingMarkup = `\n        <svg\n            class=\"load-state sparkline-load-state\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 711 325\"\n        >\n            ${linearGradient}\n            <g transform=\"translate(0 50)\">\n                <path fill=\"#C3C6CF\" d=\"M0.528124801,224.014648 L0.528124801,177.734375 L53.3834796,177.734375 C71.5390789,177.734375 86.8277373,168.972754 101.240241,151.662202 C112.578335,138.044258 121.139826,123.110227 136.974507,91.596773 C137.343842,90.8617404 139.300293,86.9654028 139.856735,85.8583549 C155.041692,55.6476711 163.354313,41.0906306 174.319873,27.7179171 C188.951312,9.87459412 204.885845,0.5 223.830634,0.5 C242.123071,0.5 257.291724,8.27027858 270.907992,23.1359289 C281.228683,34.4036118 289.135925,47.1272372 302.542017,72.085092 C303.275893,73.4513345 306.289669,79.0766612 307.063369,80.5168656 C321.41025,107.222876 330.088083,120.97663 341.470704,132.92446 C355.88994,148.05969 371.908861,155.792969 391.654853,155.792969 C412.142049,155.792969 428.763593,152.325614 442.880698,145.765582 C454.197328,140.506893 463.373931,133.679865 473.786035,123.626931 C476.528659,120.978915 486.44777,110.911455 488.791866,108.6483 C502.907223,95.0203436 514.194325,88.9355469 530.135322,88.9355469 C546.532652,88.9355469 559.505909,97.338499 575.973261,115.41103 C579.723508,119.526837 593.103621,135.086814 592.915496,134.871799 C605.09738,148.794859 614.368835,157.635549 625.072091,164.58539 C638.386599,173.230769 652.701021,177.734375 669.279853,177.734375 L773.779853,177.734375 L773.77853,204.014648 L0.528124801,204.014648 Z\"/>    \n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport const brushLoadingMarkup = `\n        <svg\n            class=\"load-state brush-load-state\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 711 325\"\n        >\n            ${linearGradient}\n            <g transform=\"translate(0 50)\">\n                <path\n                    id=\"chart-area\"\n                    strokeLinecap=\"square\"\n                    d=\"M0.34233103,0.593688165 L709.977885,0.593688189\"\n                    transform=\"translate(.01 227.976)\"\n                />\n                <path fill=\"#C3C6CF\" d=\"M0.528124801,224.014648 L0.528124801,177.734375 L53.3834796,177.734375 C71.5390789,177.734375 86.8277373,168.972754 101.240241,151.662202 C112.578335,138.044258 121.139826,123.110227 136.974507,91.596773 C137.343842,90.8617404 139.300293,86.9654028 139.856735,85.8583549 C155.041692,55.6476711 163.354313,41.0906306 174.319873,27.7179171 C188.951312,9.87459412 204.885845,0.5 223.830634,0.5 C242.123071,0.5 257.291724,8.27027858 270.907992,23.1359289 C281.228683,34.4036118 289.135925,47.1272372 302.542017,72.085092 C303.275893,73.4513345 306.289669,79.0766612 307.063369,80.5168656 C321.41025,107.222876 330.088083,120.97663 341.470704,132.92446 C355.88994,148.05969 371.908861,155.792969 391.654853,155.792969 C412.142049,155.792969 428.763593,152.325614 442.880698,145.765582 C454.197328,140.506893 463.373931,133.679865 473.786035,123.626931 C476.528659,120.978915 486.44777,110.911455 488.791866,108.6483 C502.907223,95.0203436 514.194325,88.9355469 530.135322,88.9355469 C546.532652,88.9355469 559.505909,97.338499 575.973261,115.41103 C579.723508,119.526837 593.103621,135.086814 592.915496,134.871799 C605.09738,148.794859 614.368835,157.635549 625.072091,164.58539 C638.386599,173.230769 652.701021,177.734375 669.279853,177.734375 L673.779853,177.734375 L673.779853,224.014648 L0.528124801,224.014648 Z\" />\n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport default {\n    linearGradient,\n    barLoadingMarkup,\n    donutLoadingMarkup,\n    lineLoadingMarkup,\n    brushLoadingMarkup,\n    sparkLineLoadingMarkup,\n    stackedAreaLoadingMarkup,\n};\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO: Document d3 objects rather than using *\n// TODO: Add bi-directional accessors for 2d grid, and determine naming (H/V vs. X/Y)\n\nconst { scaleLinear } = require('d3-scale');\nconst { classArray } = require('./classes');\n\n// Opacity for fade in/out\nconst EPSILON = 1e-6;\n\nconst COMPONENT_CLASSNAME = 'grid';\nconst DIRECTION_HORIZONTAL = 'horizontal';\nconst DIRECTION_VERTICAL = 'vertical';\nconst DIRECTION_FULL = 'full';\n\n// Direction orientations\nconst DIR = {\n    H: DIRECTION_HORIZONTAL,\n    V: DIRECTION_VERTICAL,\n};\n\n/**\n * Higher order function that returns the default positioning function for continuous scales\n * The +0.5 avoids anti-aliasing artifacts\n * @param {*} scale - Scale for positioning\n * @return {function}\n * @private\n */\nfunction positionNumber(scale) {\n    return (d) => +scale(d) + 0.5;\n}\n\n/**\n * Higher order function that returns the positioning function for bandwidth scales\n * Also adjusted for anti-aliasing\n * @param {*} scale - Scale for positioning\n * @return {function}\n * @private\n */\nfunction positionCenter(scale) {\n    let offset = Math.max(0, scale.bandwidth() - 1) / 2;\n\n    if (scale.round()) {\n        offset = Math.round(offset);\n    }\n\n    return (d) => +scale(d) + offset + 0.5;\n}\n\n/**\n * Constructor for a one-dimensional grid helper\n * @param {string} orient - orientation string to define the direction\n * @param {*} scale - d3 scale for the grid's ticks\n * @return {gridBaseGenerator}\n * @private\n */\nfunction gridBase(orient, scale) {\n    let range = [0, 1],\n        offsetStart = 0,\n        offsetEnd = 0,\n        hideEdges = false,\n        ticks = null,\n        tickValues = null,\n        // Create a class array helper for producing class lists\n        classArr = classArray(COMPONENT_CLASSNAME, orient),\n        // Manage horizontal and vertical directions by setting the a parameter\n        // to use in svg attributes\n        x = orient === DIR.H ? 'x' : 'y',\n        y = orient === DIR.H ? 'y' : 'x';\n\n    /**\n     * Generator function for one-dimensional grid\n     * @param {*} context - d3 selection or transition to use as the container\n     */\n    function gridBaseGenerator(context) {\n        let values = getValues(),\n            // Get the appropriate function to position the lines, based on scale type\n            // Pass a duplicate scale to ensure position values are fixed until grid updated\n            position = (scale.bandwidth ? positionCenter : positionNumber)(\n                scale.copy()\n            ),\n            // Set parameter to ensure correct line offset positions for inverted ranges\n            k = range[range.length - 1] >= range[0] ? 1 : -1,\n            // If passed a transition, convert to selection\n            selection = context.selection ? context.selection() : context,\n            // Set up container element\n            initContainer = selection\n                .selectAll(classArr.asSelector())\n                .data([null]),\n            container = initContainer.merge(\n                initContainer\n                    .enter()\n                    .append('g')\n                    .attr('class', classArr.asList())\n            ),\n            // Set up line selections\n            line = container.selectAll('line').data(values, scale).order(),\n            lineExit = line.exit(),\n            lineEnter = line.enter().append('line').attr('class', 'grid-line');\n\n        line = line.merge(lineEnter);\n\n        // Run animations only if grid was called on a transition\n        if (context !== selection) {\n            // Higher-order function that returns a function to position the exiting grid lines\n            // Requires a HOF to pass the attribute name to the inner function\n            const exitPosition = (attr) =>\n                function (d) {\n                    return isFinite((d = position(d)))\n                        ? d\n                        : this.getAttribute(attr);\n                };\n\n            // Function to initially position the entering grid lines\n            // Pulls the previously saved positioning function from the parent node if it exists\n            const enterPosition = function (d) {\n                let p = this.parentNode.__pos;\n\n                return p && isFinite((p = p(d))) ? p : position(d);\n            };\n\n            line = line.transition(context);\n\n            lineExit = lineExit\n                .transition(context)\n                .attr('opacity', EPSILON)\n                .attr(y + '1', exitPosition(y + '1'))\n                .attr(y + '2', exitPosition(y + '2'));\n\n            lineEnter = lineEnter\n                .attr('opacity', EPSILON)\n                .attr(y + '1', enterPosition)\n                .attr(y + '2', enterPosition);\n        }\n\n        lineExit.remove();\n\n        line.attr('opacity', 1)\n            .attr(x + '1', +range[0] - k * offsetStart)\n            .attr(x + '2', +range[range.length - 1] + k * offsetEnd)\n            .attr(y + '1', (d) => position(d))\n            .attr(y + '2', (d) => position(d));\n\n        // Attach the positioning function as a property of the container element\n        // This stores it for future use as the starting point for the lineEnter transition\n        // Cannot use arrow function as this must refer to the element\n        container.each(function () {\n            this.__pos = position;\n        });\n    }\n\n    // HELPERS\n\n    /**\n     * Extract the tick values and adjust for edge hiding\n     * @return {number[]}\n     * @private\n     */\n    function getValues() {\n        let hideFirst =\n                hideEdges === true ||\n                hideEdges === 'both' ||\n                hideEdges === 'first',\n            hideLast =\n                hideEdges === true ||\n                hideEdges === 'both' ||\n                hideEdges === 'last',\n            values = tickValues === null ? scaleTicks() : tickValues.slice();\n\n        if (hideFirst) values.shift();\n        if (hideLast) values.pop();\n\n        return values;\n    }\n\n    /**\n     * Get the tick values from the underlying scales\n     * @return {number[]}\n     * @private\n     */\n    function scaleTicks() {\n        let scaleTicks;\n\n        if (scale.ticks) {\n            scaleTicks = scale.ticks.apply(scale, ticks ? [ticks] : []);\n        } else {\n            scaleTicks = scale.domain();\n        }\n\n        return scaleTicks.slice();\n    }\n\n    // API\n\n    /**\n     * Gets or sets the scale\n     * Scale applies the ticks to the grid\n     * @param {*} [_] - d3 scale instance\n     * @return {*|gridBaseGenerator}\n     * @public\n     */\n    gridBaseGenerator.scale = function (_) {\n        if (!arguments.length) {\n            return scale;\n        }\n        scale = _;\n\n        return gridBaseGenerator;\n    };\n\n    /**\n     * Gets or sets the range\n     * Governs the underlying length and positioning of the grid lines relative to the container\n     * Should usually be set to the output range from the orthogonal scale in a 2D chart\n     * @param {number[]} [_] - Array representing the output range\n     * @return {*|gridBaseGenerator}\n     * @public\n     */\n    gridBaseGenerator.range = function (_) {\n        if (!arguments.length) {\n            return range;\n        }\n        range = _;\n\n        return gridBaseGenerator;\n    };\n\n    /**\n     * Gets or sets the start offset\n     * Start offset is the distance before the start position of the scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {*|gridBaseGenerator}\n     * @public\n     */\n    gridBaseGenerator.offsetStart = function (_) {\n        if (!arguments.length) {\n            return offsetStart;\n        }\n        offsetStart = _;\n\n        return gridBaseGenerator;\n    };\n\n    /**\n     * Gets or sets the end offset\n     * End offset is the distance after the end position of the scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {*|gridBaseGenerator}\n     * @public\n     */\n    gridBaseGenerator.offsetEnd = function (_) {\n        if (!arguments.length) {\n            return offsetEnd;\n        }\n        offsetEnd = _;\n\n        return gridBaseGenerator;\n    };\n\n    /**\n     * Gets or sets the hideEdges parameter\n     * Determines if the first and last grid line are suppressed\n     * True or 'both' suppress both edges, 'first' and 'last' suppress the grid line\n     * corresponding to the first and last tick value respectively\n     * @param {boolean|string} [_] - hideEdges parameter, accepts boolean and 'both', 'first', or 'last' strings\n     * @return {boolean|string|gridBaseGenerator}\n     * @public\n     */\n    gridBaseGenerator.hideEdges = function (_) {\n        if (!arguments.length) {\n            return hideEdges;\n        }\n        hideEdges = _;\n\n        return gridBaseGenerator;\n    };\n\n    /**\n     * Gets or sets the tick count\n     * Mirrors d3 axis' ticks API method\n     * @param {number} [_] - Approximate tick count\n     * @return {number|gridBaseGenerator}\n     * @public\n     */\n    gridBaseGenerator.ticks = function (_) {\n        if (!arguments.length) {\n            return ticks;\n        }\n        ticks = _;\n\n        return gridBaseGenerator;\n    };\n\n    /**\n     * Gets or sets the tick values\n     * Mirrors d3 axis' tickValues API method\n     * @param {number[]} [_] - Array of domain values to place ticks\n     * @return {number[]|gridBaseGenerator}\n     * @public\n     */\n    gridBaseGenerator.tickValues = function (_) {\n        if (!arguments.length) {\n            return tickValues && tickValues.slice();\n        }\n        tickValues = _ === null ? null : [..._].slice();\n\n        return gridBaseGenerator;\n    };\n\n    return gridBaseGenerator;\n}\n\n/**\n * Constructor for a two-dimensional grid helper\n * @param {*} scaleX - d3 scale for the grid's x direction\n * @param {*} scaleY - d3 scale for the grid's y direction\n * @return {gridGenerator}\n * @memberof Grid\n * @alias module:Grid.grid\n * @example\n * const grid = grid(xScale, yScale)\n        .offsetStart(5)\n        .hideEdges(true)\n        .ticks(4);\n\n    grid(svg.select('.grid-lines-group'));\n */\nexport function grid(scaleX, scaleY) {\n    let gridH = gridHorizontal(scaleY || scaleLinear()),\n        gridV = gridVertical(scaleX || scaleLinear()),\n        direction = DIRECTION_FULL,\n        tickValuesX = null,\n        tickValuesY = null;\n\n    /**\n     * Generator function for two-dimensional grid\n     * @param {*} context - d3 selection or transition to use as the container\n     */\n    function gridGenerator(context) {\n        direction === DIRECTION_FULL || direction === DIRECTION_HORIZONTAL\n            ? gridH.tickValues(tickValuesY).range(scaleX.range())\n            : gridH.tickValues([]);\n\n        direction === DIRECTION_FULL || direction === DIRECTION_VERTICAL\n            ? gridV.tickValues(tickValuesX).range(scaleY.range())\n            : gridV.tickValues([]);\n\n        context.call(gridH).call(gridV);\n    }\n\n    // API\n\n    /**\n     * Gets or sets the x-scale\n     * X-scale applies ticks to the vertical grid and range to the horizontal grid\n     * @param {*} [_] - d3 scale instance\n     * @return {*|gridGenerator}\n     * @public\n     */\n    gridGenerator.scaleX = function (_) {\n        if (!arguments.length) {\n            return scaleX;\n        }\n        scaleX = _;\n        gridV.scale(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the y-scale\n     * Y-scale applies ticks to the horizontal grid and range to the vertical grid\n     * @param {*} [_] - d3 scale instance\n     * @return {*|gridGenerator}\n     * @public\n     */\n    gridGenerator.scaleY = function (_) {\n        if (!arguments.length) {\n            return scaleY;\n        }\n        scaleY = _;\n        gridH.scale(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the direction of the grid\n     * Direction of 'full' will render both horizontal and vertical grid lines\n     * Either 'horizontal' or 'vertical' wil render the respective lines\n     * @param {string} [_] - Grid direction accepts 'full', 'vertical', or 'horizontal'\n     * @return {string|gridGenerator}\n     * @public\n     */\n    gridGenerator.direction = function (_) {\n        if (!arguments.length) {\n            return direction;\n        }\n        direction = _;\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets both the horizontal and vertical grid start offset\n     * Convenience method that sets the start offset for both horizontal and vertical grids\n     * Returns the start offset of the horizontal grid if no argument is supplied\n     * Start offset is the distance before the start position of the scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.offsetStart = function (_) {\n        if (!arguments.length) {\n            return gridH.offsetStart();\n        }\n        gridH.offsetStart(_);\n        gridV.offsetStart(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the horizontal grid start offset\n     * Returns the start offset of the horizontal grid if no argument is supplied\n     * Start offset is the distance before the start of the x-scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.offsetStartH = function (_) {\n        if (!arguments.length) {\n            return gridH.offsetStart();\n        }\n        gridH.offsetStart(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the vertical grid start offset\n     * Returns the start offset of the vertical grid if no argument is supplied\n     * Start offset is the distance before the start of the y-scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.offsetStartV = function (_) {\n        if (!arguments.length) {\n            return gridV.offsetStart();\n        }\n        gridV.offsetStart(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets both the horizontal and vertical grid end offset\n     * Convenience method that sets the end offset for both horizontal and vertical grids\n     * Returns the end offset of the horizontal grid if no argument is supplied\n     * End offset is the distance after the end position of the scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.offsetEnd = function (_) {\n        if (!arguments.length) {\n            return gridH.offsetEnd();\n        }\n        gridH.offsetEnd(_);\n        gridV.offsetEnd(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the horizontal grid end offset\n     * Returns the end offset of the horizontal grid if no argument is supplied\n     * End offset is the distance after the end of the x-scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.offsetEndH = function (_) {\n        if (!arguments.length) {\n            return gridH.offsetEnd();\n        }\n        gridH.offsetEnd(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the vertical grid end offset\n     * Returns the end offset of the vertical grid if no argument is supplied\n     * End offset is the distance after the end of the y-scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.offsetEndV = function (_) {\n        if (!arguments.length) {\n            return gridV.offsetEnd();\n        }\n        gridV.offsetEnd(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the hideEdges parameter for both horizontal and vertical grids\n     * Returns the horizontal value if no argument specified\n     * Determines if the first and last grid line are suppressed\n     * True or 'both' suppress both edges, 'first' and 'last' suppress the grid line\n     * corresponding to the first and last tick value respectively\n     * @param {boolean|string} [_] - hideEdges parameter, accepts boolean and 'both', 'first', or 'last' strings\n     * @return {boolean|string|gridGenerator}\n     * @public\n     */\n    gridGenerator.hideEdges = function (_) {\n        if (!arguments.length) {\n            return gridH.hideEdges();\n        }\n        gridH.hideEdges(_);\n        gridV.hideEdges(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the hideEdges parameter for the horizontal grid\n     * Determines if the first and last grid line are suppressed\n     * True or 'both' suppress both edges, 'first' and 'last' suppress the grid line\n     * corresponding to the first and last tick value respectively\n     * @param {boolean|string} [_] - hideEdges parameter, accepts boolean and 'both', 'first', or 'last' strings\n     * @return {boolean|string|gridGenerator}\n     * @public\n     */\n    gridGenerator.hideEdgesH = function (_) {\n        if (!arguments.length) {\n            return gridH.hideEdges();\n        }\n        gridH.hideEdges(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the hideEdges parameter for the vertical grid\n     * Determines if the first and last grid line are suppressed\n     * True or 'both' suppress both edges, 'first' and 'last' suppress the grid line\n     * corresponding to the first and last tick value respectively\n     * @param {boolean|string} [_] - hideEdges parameter, accepts boolean and 'both', 'first', or 'last' strings\n     * @return {boolean|string|gridGenerator}\n     * @public\n     */\n    gridGenerator.hideEdgesV = function (_) {\n        if (!arguments.length) {\n            return gridV.hideEdges();\n        }\n        gridV.hideEdges(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the tick count for both horizontal and vertical grids\n     * Returns the horizontal ticks if no argument specified\n     * Mirrors d3 axis' ticks API method\n     * @param {number} [_] - Approximate tick count\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.ticks = function (_) {\n        if (!arguments.length) {\n            return gridH.ticks();\n        }\n        gridH.ticks(_);\n        gridV.ticks(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the tick count for the horizontal grid\n     * Mirrors d3 axis' ticks API method\n     * @param {number} [_] - Approximate tick count\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.ticksH = function (_) {\n        if (!arguments.length) {\n            return gridH.ticks();\n        }\n        gridH.ticks(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the tick count for the vertical grid\n     * Mirrors d3 axis' ticks API method\n     * @param {number} [_] - Approximate tick count\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.ticksV = function (_) {\n        if (!arguments.length) {\n            return gridV.ticks();\n        }\n        gridV.ticks(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the tick values for both horizontal and vertical grids\n     * Returns the horizontal tick values if no argument specified\n     * Mirrors d3 axis' tickValues API method\n     * @param {number[]} [_] - Array of domain values to place ticks\n     * @return {number[]|gridGenerator}\n     * @public\n     */\n    gridGenerator.tickValues = function (_) {\n        if (!arguments.length) {\n            return tickValuesY;\n        }\n        tickValuesX = tickValuesY = _;\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the tick values for the horizontal grid\n     * Mirrors d3 axis' tickValues API method\n     * @param {number[]} [_] - Array of domain values to place ticks\n     * @return {number[]|gridGenerator}\n     * @public\n     */\n    gridGenerator.tickValuesH = function (_) {\n        if (!arguments.length) {\n            return tickValuesY;\n        }\n        tickValuesY = _;\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the tick values for the vertical grid\n     * Mirrors d3 axis' tickValues API method\n     * @param {number[]} [_] - Array of domain values to place ticks\n     * @return {number[]|gridGenerator}\n     * @public\n     */\n    gridGenerator.tickValuesV = function (_) {\n        if (!arguments.length) {\n            return tickValuesX;\n        }\n        tickValuesX = _;\n\n        return gridGenerator;\n    };\n\n    return gridGenerator;\n}\n\n/**\n * Constructor for a horizontal grid helper\n * @param {*} scale - d3 scale to initialize the grid\n * @return {gridBaseGenerator}\n * @public\n * @memberof Grid\n * @alias module:Grid.gridHorizontal\n * @example\n * const grid = gridHorizontal(yScale)\n        .range([0, chartWidth])\n        .hideEdges('first')\n        .ticks(yTicks);\n\n    grid(svg.select('.grid-lines-group'));\n */\nexport function gridHorizontal(scale) {\n    return gridBase(DIR.H, scale);\n}\n\n/**\n * Constructor for a vertical grid helper\n * @param {*} scale - d3 scale to initialize the grid\n * @return {gridBaseGenerator}\n * @public\n * @memberof Grid\n * @alias module:Grid.gridVertical\n * @example\n *  const grid = gridVertical(xScale)\n        .range([0, chartHeight])\n        .hideEdges('first')\n        .ticks(xTicks);\n\n    grid(svg.select('.grid-lines-group'));\n */\nexport function gridVertical(scale) {\n    return gridBase(DIR.V, scale);\n}\n\n/**\n * Reusable Grid component helper that renders either a vertical, horizontal or full grid, and that\n * will usually be used inside charts. It could also be used as a standalone component to use on custom charts.\n * @module Grid\n * @requires d3-scale\n * @exports gridHorizontal\n * @exports gridVertical\n * @exports grid\n */\nexport default {\n    gridHorizontal,\n    gridVertical,\n    grid,\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","const localeTimeMap = {\n    minute: { minute: 'numeric' },\n    hour: { hour: 'numeric' },\n    day: { day: 'numeric' },\n    daymonth: { day: 'numeric', month: 'short' },\n    month: { month: 'short' },\n    year: { year: 'numeric' },\n};\n\n/**\n * Calculates a new date by summing a given amount of days to a given date\n * @param  {String}  startDate      Date\n * @param  {Number}  days           Number of days to add\n * @return {String}                 Offsetted date\n * @private\n */\nexport const addDays = (startDate, days) => {\n    const result = new Date(startDate);\n\n    result.setDate(result.getDate() + days);\n\n    return String(result);\n};\n\n/**\n * Calculates difference between dates in days\n * @param  {String}  startDate  Date in string form\n * @param  {String}  endDate    Date in string form\n * @return {Number}             Number of days between dates\n * @private\n */\nexport const diffDays = (startDate, endDate) => {\n    const oneDayInMilliseconds = 24 * 60 * 60 * 1000;\n\n    return Math.ceil(\n        Math.abs(\n            (new Date(startDate).getTime() - new Date(endDate).getTime()) /\n                oneDayInMilliseconds\n        )\n    );\n};\n\n/**\n * Takes a number representing milliseconds and convert to days\n * @param  {Number} milliseconds    Any number of days in milliseconds\n * @return {Number}                 Number of days that the input represents\n * @private\n */\nexport const convertMillisecondsToDays = (milliseconds) =>\n    Math.ceil(milliseconds / (24 * 60 * 60 * 1000));\n\n/**\n * Takes a locale (string) and the format to return and returns a function to format dates\n * @param  {String} locale              Locale tag eg. en-US, fr-FR, ru-RU\n * @param  {String} [timeUnit='day']    One of minute, hour, day, daymonth, month, year\n * @return {Function}                   Function that formats dates in the proper locale\n * @private\n */\nexport const getLocaleDateFormatter = (locale, timeUnit = 'day') => {\n    let options = localeTimeMap[timeUnit];\n    let formatter = new Intl.DateTimeFormat(locale, options);\n\n    return (date) => formatter.format(date);\n};\n\nexport default {\n    addDays,\n    convertMillisecondsToDays,\n    diffDays,\n    getLocaleDateFormatter,\n};\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","const filterId = 'highlight-filter';\n\nexport const createFilterContainer = (metadataSelection) => {\n    let highlightFilter = metadataSelection\n        .append('defs')\n        .append('filter')\n        .attr('id', filterId);\n\n    return highlightFilter;\n};\n\nexport const createGausianBlur = (filterSelector) => {\n    filterSelector\n        .append('feGaussianBlur')\n        .attr('stdDeviation', 1)\n        .attr('result', 'coloredBlur');\n\n    return filterId;\n};\n\nexport const createGlow = (filterSelector) => {\n    filterSelector\n        .attr('x', '-30%')\n        .attr('y', '-30%')\n        .attr('width', '160%')\n        .attr('height', '160%');\n\n    filterSelector\n        .append('feGaussianBlur')\n        .attr('stdDeviation', '0.9 0.9')\n        .attr('result', 'glow');\n\n    let merge = filterSelector.append('feMerge');\n\n    merge.append('feMergeNode').attr('in', 'glow');\n\n    merge.append('feMergeNode').attr('in', 'glow');\n\n    merge.append('feMergeNode').attr('in', 'glow');\n\n    return filterId;\n};\n\nexport const createGlowWithMatrix = (filterSelector) => {\n    let colorMatrix = '0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0';\n\n    filterSelector\n        .attr('x', '-500%')\n        .attr('y', '-500%')\n        .attr('width', '1800%')\n        .attr('height', '1800%');\n\n    filterSelector\n        .append('feColorMatrix')\n        .attr('type', 'matrix')\n        .attr('values', colorMatrix);\n\n    filterSelector\n        .append('feGaussianBlur')\n        .attr('stdDeviation', '1')\n        .attr('result', 'coloredBlur')\n        .attr('in', 'SourceGraphic');\n\n    let merge = filterSelector.append('feMerge');\n\n    merge.append('feMergeNode').attr('in', 'coloredBlur');\n\n    merge.append('feMergeNode').attr('in', 'SourceGraphic');\n\n    return filterId;\n};\n\nexport const createWhiteGlow = (filterSelector) => {\n    filterSelector\n        .attr('x', '-5000%')\n        .attr('y', '-5000%')\n        .attr('width', '10000%')\n        .attr('height', '10000%');\n\n    filterSelector\n        .append('feFlood')\n        .attr('result', 'flood')\n        .attr('flood-color', '#ffffff')\n        .attr('flood-opacity', '1');\n\n    filterSelector\n        .append('feComposite')\n        .attr('result', 'mask')\n        .attr('in2', 'SourceGraphic')\n        .attr('operator', 'in')\n        .attr('in', 'flood');\n\n    filterSelector\n        .append('feMorphology')\n        .attr('result', 'dilated')\n        .attr('operator', 'dilate')\n        .attr('radius', '2')\n        .attr('in', 'mask');\n\n    filterSelector\n        .append('feGaussianBlur')\n        .attr('result', 'blurred')\n        .attr('stdDeviation', '5')\n        .attr('in', 'dilated');\n\n    let merge = filterSelector.append('feMerge');\n\n    merge.append('feMergeNode').attr('in', 'blurred');\n\n    merge.append('feMergeNode').attr('in', 'SourceGraphic');\n\n    return filterId;\n};\n\nexport const bounceCircleHighlight = (\n    el,\n    ease,\n    radius,\n    bounceRadius = radius * 2\n) => {\n    const duration = 100;\n    const delay = 50;\n\n    el.transition()\n        .ease(ease)\n        .duration(duration)\n        .attr('r', bounceRadius)\n        .transition()\n        .ease(ease)\n        .delay(delay)\n        .duration(duration)\n        .attr('r', radius);\n};\n\nexport default {\n    bounceCircleHighlight,\n    createFilterContainer,\n    createGausianBlur,\n    createWhiteGlow,\n    createGlow,\n    createGlowWithMatrix,\n};\n","/**\n * Casts the data given to a date or number\n * respecting the value of xAxisValueType\n * @param {string | number} value   Value data\n * @param {string} type             Type to cast to\n * @return {Date | number} value    Casted value\n * @private\n */\nexport const castValueToType = (value, type) => {\n    if (type === 'number') {\n        return Number(value);\n    }\n\n    return new Date(value);\n};\n\n/**\n * Given any type of value, checks\n * if it's strictly defined in JS terms.\n * @param {any} value           Any kind of value\n * @param {Boolean} isDefined   Whether the value is defined\n * @private\n */\nexport const isDefined = (value) => {\n    return value !== null && value !== undefined;\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__39__;","/**\n * Helps process a class array or set of classes\n * @param {*} classArr      Class array or set of classes\n * @returns                 Methods to get the class array as a list of classes or CSS selectors\n * @private\n */\nexport function classArray(classArr) {\n    classArr = Array.isArray(classArr) ? classArr : [...arguments];\n\n    return {\n        asList: () => classArr.join(' '),\n        asSelector: () => '.' + classArr.join('.'),\n    };\n}\n\nexport default {\n    classArray,\n};\n","import { timeHour, timeDay, timeMonth, timeYear } from 'd3-time';\nimport { timeFormat } from 'd3-time-format';\n\nimport { axisTimeCombinations, timeBenchmarks } from './constants';\nimport { convertMillisecondsToDays, getLocaleDateFormatter } from './date';\n\nconst singleTickWidth = 20;\nconst horizontalTickSpacing = 50;\nconst minEntryNumForDayFormat = 5;\n\nconst formatMap = {\n    minute: timeFormat('%M m'),\n    hour: timeFormat('%H %p'),\n    day: timeFormat('%e'),\n    daymonth: timeFormat('%d %b'),\n    month: timeFormat('%b'),\n    year: timeFormat('%Y'),\n};\nconst settingsToMajorTickMap = {\n    [axisTimeCombinations.MINUTE_HOUR]: timeHour.every(1),\n    [axisTimeCombinations.HOUR_DAY]: timeDay.every(1),\n    [axisTimeCombinations.DAY_MONTH]: timeMonth.every(1),\n    [axisTimeCombinations.MONTH_YEAR]: timeYear.every(1),\n};\n\n/**\n * Figures out the proper settings from the current time span\n * @param  {Number} timeSpan    Span of time charted by the graph in milliseconds\n * @return {String}             Type of settings for the given timeSpan\n * @private\n */\nconst getAxisSettingsFromTimeSpan = (timeSpan) => {\n    let { ONE_YEAR, ONE_DAY } = timeBenchmarks;\n    let settings;\n\n    if (timeSpan < ONE_DAY) {\n        settings = axisTimeCombinations.HOUR_DAY;\n    } else if (timeSpan < ONE_YEAR) {\n        settings = axisTimeCombinations.DAY_MONTH;\n    } else {\n        settings = axisTimeCombinations.MONTH_YEAR;\n    }\n\n    return settings;\n};\n\n/**\n * Calculates the maximum number of ticks for the x axis\n * @param  {Number} width               Chart width\n * @param  {Number} dataPointNumber     Number of entries on the data\n * @return {Number}                     Number of ticks to render\n * @private\n */\nconst getMaxNumOfHorizontalTicks = (width, dataPointNumber) => {\n    let ticksForWidth = Math.ceil(\n        width / (singleTickWidth + horizontalTickSpacing)\n    );\n\n    return dataPointNumber < minEntryNumForDayFormat\n        ? timeDay\n        : Math.min(dataPointNumber, ticksForWidth);\n};\n\n/**\n * Calculates the maximum number of ticks for the x axis\n * with respect to number ranges\n * @param  {Number} width               Chart width\n * @param  {Number} dataPointNumber     Number of entries on the data\n * @return {Number}                     Number of ticks to render\n * @private\n */\nconst getMaxNumOfHorizontalTicksForNumberRanges = (width, dataPointNumber) => {\n    let ticksForWidth = Math.ceil(\n        width / (singleTickWidth + horizontalTickSpacing)\n    );\n\n    return Math.min(dataPointNumber, ticksForWidth);\n};\n\n/**\n * Returns tick object to be used when building the x axis\n * @param {dataByDate} dataByDate       Chart data ordered by Date\n * @param {Number} width                Chart width\n * @param {String} [settings=null]      Optional forced settings for axis, a combination of one of minute, hour, day, daymonth, month, year separated by '-'\n * @param {String} [locale=null]        Optional forced locale\n * @return {object}                     Tick settings for major and minr axis\n * @private\n */\nexport const getTimeSeriesAxis = (\n    dataByDate,\n    width,\n    settings = null,\n    locale = null\n) => {\n    const firstDate = new Date(dataByDate[0].date);\n    const lastDate = new Date(dataByDate[dataByDate.length - 1].date);\n    const dateTimeSpan = lastDate - firstDate;\n\n    if (\n        locale &&\n        (typeof Intl === 'undefined' ||\n            (typeof Intl === 'object' && !Intl.DateTimeFormat))\n    ) {\n        locale = null;\n    }\n\n    if (!settings) {\n        settings = getAxisSettingsFromTimeSpan(dateTimeSpan);\n    }\n\n    const [minor, major] = settings.split('-');\n    const majorTickValue = settingsToMajorTickMap[settings];\n    const minorTickValue = getMaxNumOfHorizontalTicks(\n        width,\n        convertMillisecondsToDays(dateTimeSpan)\n    );\n\n    return {\n        minor: {\n            format: locale\n                ? getLocaleDateFormatter(locale, minor)\n                : formatMap[minor],\n            tick: minorTickValue,\n        },\n        major: {\n            format: locale\n                ? getLocaleDateFormatter(locale, major)\n                : formatMap[major],\n            tick: majorTickValue,\n        },\n    };\n};\n\n/**\n * Returns tick object to be used when building the x axis\n * @param {dataSorted} dataSorted       Chart data ordered by Date\n * @param {Number} width                Chart width\n * @param {String} [settings=null]      Optional forced settings for axis\n * @return {object} tick settings for minor axis\n * @private\n */\nexport const getSortedNumberAxis = (dataSorted, width) => {\n    const firstEntry = dataSorted[0].date;\n    const lastEntry = dataSorted[dataSorted.length - 1].date;\n    const timeSpan = lastEntry - firstEntry;\n\n    const minorTickValue = getMaxNumOfHorizontalTicksForNumberRanges(\n        width,\n        timeSpan\n    );\n\n    return {\n        tick: minorTickValue,\n    };\n};\n\nexport default {\n    getTimeSeriesAxis,\n    getSortedNumberAxis,\n};\n","import { min, max, sum, range, extent } from 'd3-array';\nimport { axisRight, axisBottom } from 'd3-axis';\nimport { nest } from 'd3-collection';\nimport { dispatch } from 'd3-dispatch';\nimport { easeQuadInOut } from 'd3-ease';\nimport { scaleLinear, scaleTime, scaleLog } from 'd3-scale';\nimport { line, area, stackOffsetNone, stackOrderNone, stack } from 'd3-shape';\nimport { select, mouse, touch } from 'd3-selection';\nimport { timeFormat } from 'd3-time-format';\nimport 'd3-transition';\n\nimport { exportChart } from '../helpers/export';\nimport { dataKeyDeprecationMessage } from '../helpers/project';\nimport colorHelper from '../helpers/color';\nimport { getTimeSeriesAxis, getSortedNumberAxis } from '../helpers/axis';\nimport { castValueToType } from '../helpers/type';\nimport { axisTimeCombinations, curveMap, motion } from '../helpers/constants';\nimport {\n    formatIntegerValue,\n    formatDecimalValue,\n    isInteger,\n} from '../helpers/number';\nimport {\n    createFilterContainer,\n    createGlowWithMatrix,\n    bounceCircleHighlight,\n} from '../helpers/filter';\nimport { addDays, diffDays } from '../helpers/date';\nimport { stackedAreaLoadingMarkup } from '../helpers/load';\nimport { gridHorizontal, gridVertical } from '../helpers/grid';\n\nconst uniq = (arrArg) =>\n    arrArg.filter((elem, pos, arr) => arr.indexOf(elem) === pos);\n\n/**\n * @typdef D3Layout\n * @type function\n */\n\n/**\n * @typedef AreaChartData\n * @type {Object[]}\n * @property {String} date         Date of the entry in ISO8601 format (required)\n * @property {String} name         Name of the entry (required)\n * @property {Number} value        Value of the entry (required)\n *\n * @example\n * [\n *     {\n *         date: \"2011-01-05T00:00:00Z\",\n *         name: \"Direct\",\n *         value: 0\n *     }\n * ]\n */\n\n/**\n * Stacked Area Chart reusable API module that allows us\n * rendering a multi area and configurable chart.\n *\n * @module Stacked-area\n * @tutorial stacked-area\n * @requires d3-array, d3-axis, d3-collection, d3-dispatch, d3-ease, d3-scale, d3-shape, d3-selection, d3-transition, d3-time-format\n *\n * @example\n * let stackedArea = stackedArea();\n *\n * stackedArea\n *     .width(containerWidth);\n *\n * d3Selection.select('.css-selector')\n *     .datum(dataset.data)\n *     .call(stackedArea);\n *\n */\nexport default function module() {\n    let margin = {\n            top: 70,\n            right: 30,\n            bottom: 60,\n            left: 70,\n        },\n        width = 960,\n        height = 500,\n        isLoading = false,\n        xScale,\n        xAxis,\n        xSubAxis,\n        yScale,\n        yAxis,\n        monthAxisPadding = 30,\n        xAxisValueType = 'date',\n        xAxisScale = 'linear',\n        yTicks = 5,\n        yTickTextYOffset = -8,\n        yAxisBaseline = 0,\n        yAxisLabel,\n        yAxisLabelEl,\n        yAxisLabelOffset = -60,\n        yTickTextXOffset = -20,\n        tickPadding = 5,\n        colorSchema = colorHelper.colorSchemas.britecharts,\n        lineGradient = colorHelper.colorGradients.greenBlue,\n        nameToColorMap = null,\n        highlightFilter = null,\n        highlightFilterId = null,\n        highlightCircleSize = 12,\n        highlightCircleRadius = 5,\n        highlightCircleStroke = 1.2,\n        highlightCircleActiveRadius = highlightCircleRadius + 2,\n        highlightCircleActiveStrokeWidth = 5,\n        highlightCircleActiveStrokeOpacity = 0.6,\n        areaOpacity = 0.24,\n        order,\n        topicsOrder,\n        xAxisFormat = null,\n        xTicks = null,\n        xAxisCustomFormat = null,\n        locale,\n        baseLine,\n        areaCurve = 'monotoneX',\n        layers,\n        series,\n        layersInitial,\n        areaShape,\n        areaOutline,\n        // Area Animation\n        maxAreaNumber = 10,\n        areaAnimationDelayStep = 20,\n        areaAnimationDelays = range(\n            areaAnimationDelayStep,\n            maxAreaNumber * areaAnimationDelayStep,\n            areaAnimationDelayStep\n        ),\n        overlay,\n        overlayColor = 'rgba(0, 0, 0, 0)',\n        verticalMarkerContainer,\n        verticalMarkerLine,\n        epsilon,\n        dataPoints = {},\n        pointsSize = 1.5,\n        pointsColor = '#c0c6cc',\n        pointsBorderColor = '#ffffff',\n        isAnimated = false,\n        ease = easeQuadInOut,\n        areaAnimationDuration = motion.duration,\n        hasOutline = true,\n        svg,\n        chartWidth,\n        chartHeight,\n        data,\n        dataSorted,\n        dataSortedFormatted,\n        dataSortedZeroed,\n        grid = null,\n        tooltipThreshold = 480,\n        xAxisPadding = {\n            top: 0,\n            left: 15,\n            bottom: 0,\n            right: 0,\n        },\n        dateLabel = 'date',\n        valueLabel = 'value',\n        keyLabel = 'name',\n        emptyDataConfig = {\n            minDate: new Date(new Date().setDate(new Date().getDate() - 30)),\n            maxDate: new Date(),\n            minY: 0,\n            maxY: 500,\n        },\n        isUsingFakeData = false,\n        // getters\n        getName = ({ name }) => name,\n        getDate = ({ date }) => date,\n        // events\n        dispatcher = dispatch(\n            'customMouseOver',\n            'customMouseOut',\n            'customMouseMove',\n            'customDataEntryClick',\n            'customTouchMove'\n        );\n\n    /**\n     * This function creates the graph using the selection and data provided\n     * @param {D3Selection} _selection A d3 selection that represents\n     * the container(s) where the chart(s) will be rendered\n     * @param {AreaChartData} _data The data to attach and generate the chart\n     */\n    function exports(_selection) {\n        _selection.each(function (_data) {\n            chartWidth = width - margin.left - margin.right;\n            chartHeight = height - margin.top - margin.bottom;\n            data = cleanData(_data);\n            dataSorted = getSortedData(data);\n\n            buildSVG(this);\n            if (isLoading) {\n                drawLoadingState();\n\n                return;\n            }\n            cleanLoadingState();\n            buildLayers();\n            buildScales();\n            buildAxis();\n            drawAxis();\n            drawStackedAreas();\n\n            addTouchEvents();\n\n            if (shouldShowTooltip()) {\n                drawHoverOverlay();\n                drawVerticalMarker();\n                addMouseEvents();\n            }\n        });\n    }\n\n    /**\n     * Adds a filter to the element\n     * @param {DOMElement} el\n     * @private\n     */\n    function addGlowFilter(el) {\n        if (!highlightFilter) {\n            highlightFilter = createFilterContainer(\n                svg.select('.metadata-group')\n            );\n            highlightFilterId = createGlowWithMatrix(highlightFilter);\n        }\n\n        let glowEl = select(el);\n\n        glowEl\n            .style('stroke-width', highlightCircleActiveStrokeWidth)\n            .style('stroke-opacity', highlightCircleActiveStrokeOpacity)\n            .attr('filter', `url(#${highlightFilterId})`);\n\n        bounceCircleHighlight(glowEl, ease, highlightCircleActiveRadius);\n    }\n\n    /**\n     * Adds events to the container group if the environment is not mobile\n     * Adding: mouseover, mouseout and mousemove\n     * @private\n     */\n    function addMouseEvents() {\n        svg.on('mouseover', function (d) {\n            handleMouseOver(this, d);\n        })\n            .on('mouseout', function (d) {\n                handleMouseOut(this, d);\n            })\n            .on('mousemove', function (d) {\n                handleMouseMove(this, d);\n            });\n    }\n\n    /**\n     * Adds events to the container group for the mobile environment\n     * Adding: touchmove\n     * @private\n     */\n    function addTouchEvents() {\n        svg.on('touchmove', function (d) {\n            handleTouchMove(this, d);\n        });\n    }\n\n    /**\n     * Formats the value depending on its characteristics\n     * @param  {Number} value Value to format\n     * @return {Number}       Formatted value\n     */\n    function getFormattedValue(value) {\n        let format;\n\n        if (isInteger(value)) {\n            format = formatIntegerValue;\n        } else {\n            format = formatDecimalValue;\n        }\n\n        return format(value);\n    }\n\n    /**\n     * Creates the d3 x and y axis, setting orientations\n     * @private\n     */\n    function buildAxis() {\n        let minor, major;\n\n        if (xAxisValueType === 'number') {\n            minor = getSortedNumberAxis(dataSorted, width);\n            major = null;\n\n            if (xAxisScale === 'logarithmic') {\n                xAxis = axisBottom(xScale)\n                    .ticks(minor.tick, 'e')\n                    .tickFormat(function (d) {\n                        const log = Math.log(d) / Math.LN10;\n\n                        return Math.abs(Math.round(log) - log) < 1e-6\n                            ? '10^' + Math.round(log)\n                            : '';\n                    });\n            } else {\n                xAxis = axisBottom(xScale)\n                    .ticks(minor.tick)\n                    .tickFormat(getFormattedValue);\n            }\n        } else {\n            if (\n                xAxisFormat === 'custom' &&\n                typeof xAxisCustomFormat === 'string'\n            ) {\n                minor = {\n                    tick: xTicks,\n                    format: timeFormat(xAxisCustomFormat),\n                };\n                major = null;\n            } else {\n                ({ minor, major } = getTimeSeriesAxis(\n                    dataSorted,\n                    width,\n                    xAxisFormat,\n                    locale\n                ));\n\n                xSubAxis = axisBottom(xScale)\n                    .ticks(major.tick)\n                    .tickSize(0, 0)\n                    .tickFormat(major.format);\n            }\n\n            xAxis = axisBottom(xScale)\n                .ticks(minor.tick)\n                .tickSize(10, 0)\n                .tickPadding(tickPadding)\n                .tickFormat(minor.format);\n        }\n\n        yAxis = axisRight(yScale)\n            .ticks(yTicks)\n            .tickSize([0])\n            .tickPadding(tickPadding)\n            .tickFormat(getFormattedValue);\n\n        drawGridLines(minor.tick, yTicks);\n    }\n\n    /**\n     * Builds containers for the chart, the axis and a wrapper for all of them\n     * NOTE: The order of drawing of this group elements is really important,\n     * as everything else will be drawn on top of them\n     * @private\n     */\n    function buildContainerGroups() {\n        let container = svg\n            .append('g')\n            .classed('container-group', true)\n            .attr('transform', `translate(${margin.left},${margin.top})`);\n\n        svg.append('g').classed('loading-state-group', true);\n\n        container\n            .append('g')\n            .classed('x-axis-group', true)\n            .append('g')\n            .classed('x axis', true);\n        container\n            .selectAll('.x-axis-group')\n            .append('g')\n            .classed('axis sub-x', true);\n        container.append('g').classed('y-axis-group axis', true);\n        container.append('g').classed('grid-lines-group', true);\n        container.append('g').classed('y-axis-label', true);\n        container.append('g').classed('chart-group', true);\n        container.append('g').classed('metadata-group', true);\n    }\n\n    /**\n     * Builds the stacked layers layout\n     * @return {D3Layout} Layout for drawing the chart\n     * @private\n     */\n    function buildLayers() {\n        dataSortedFormatted = dataSorted\n            .map((d) => Object.assign({}, d, d.values))\n            .map((d) => {\n                Object.keys(d).forEach((k) => {\n                    const entry = d[k];\n\n                    if (entry && entry.name) {\n                        d[entry.name] = entry.value;\n                    }\n                });\n\n                return Object.assign({}, d, {\n                    date: castValueToType(d['key'], xAxisValueType),\n                });\n            });\n\n        dataSortedZeroed = dataSorted\n            .map((d) => Object.assign({}, d, d.values))\n            .map((d) => {\n                Object.keys(d).forEach((k) => {\n                    const entry = d[k];\n\n                    if (entry && entry.name) {\n                        d[entry.name] = 0;\n                    }\n                });\n\n                return Object.assign({}, d, {\n                    date: castValueToType(d['key'], xAxisValueType),\n                });\n            });\n\n        let initialTotalsObject = uniq(data.map(getName)).reduce(\n            (memo, key) => Object.assign({}, memo, { [key]: 0 }),\n            {}\n        );\n\n        let totals = data.reduce(\n            (memo, item) =>\n                Object.assign({}, memo, {\n                    [item.name]: (memo[item.name] += item.value),\n                }),\n            initialTotalsObject\n        );\n\n        order = topicsOrder || formatOrder(totals);\n\n        let stack3 = stack()\n            .keys(order)\n            .order(stackOrderNone)\n            .offset(stackOffsetNone);\n\n        layersInitial = stack3(dataSortedZeroed);\n        layers = moveLayersByBaseline(stack3(dataSortedFormatted));\n    }\n\n    /**\n     * Takes the layers and moves them by the yAxisBaseline\n     * Returns the original layers if yAxisBaseline equals zero, because nothing to do then\n     * @param layers\n     * @return Manipulated Layers\n     */\n    function moveLayersByBaseline(layers) {\n        if (yAxisBaseline === 0) {\n            return layers;\n        }\n\n        layers = layers.map((section) => {\n            section.map((entry) => {\n                entry[0] = yAxisBaseline;\n\n                return entry;\n            });\n\n            return section;\n        });\n\n        return layers;\n    }\n\n    /**\n     * Takes an object with all topics as keys and their aggregate totals as values,\n     * sorts them into a list by descending total value and\n     * moves \"Other\" to the end\n     * @param  {Object} totals  Keys of all the topics and their corresponding totals\n     * @return {Array}          List of topic names in aggregate order\n     */\n    function formatOrder(totals) {\n        let order = Object.keys(totals).sort((a, b) => {\n            if (totals[a] > totals[b]) return -1;\n            if (totals[a] === totals[b]) return 0;\n\n            return 1;\n        });\n\n        let otherIndex = order.indexOf('Other');\n\n        if (otherIndex >= 0) {\n            let other = order.splice(otherIndex, 1);\n\n            order = order.concat(other);\n        }\n\n        return order;\n    }\n\n    /**\n     * Creates the x, y and color scales of the chart\n     * @private\n     */\n    function buildScales() {\n        xScale = buildXAxisScale();\n        yScale = buildYAxisScale();\n\n        nameToColorMap =\n            nameToColorMap ||\n            order.reduce(\n                (memo, topic, index) =>\n                    Object.assign({}, memo, { [topic]: colorSchema[index] }),\n                {}\n            );\n    }\n\n    /**\n     * Creates the xScale depending on the settings of\n     * xAxisValueType and xAxisScale\n     * @private\n     */\n    function buildXAxisScale() {\n        if (xAxisValueType === 'number') {\n            if (xAxisScale === 'logarithmic') {\n                return scaleLog()\n                    .domain(extent(dataSorted, ({ date }) => date))\n                    .rangeRound([0, chartWidth]);\n            } else {\n                return scaleLinear()\n                    .domain(extent(dataSorted, ({ date }) => date))\n                    .rangeRound([0, chartWidth]);\n            }\n        } else {\n            return scaleTime()\n                .domain(extent(dataSorted, ({ date }) => date))\n                .rangeRound([0, chartWidth]);\n        }\n    }\n\n    /**\n     * Creates the yScale\n     * @private\n     */\n    function buildYAxisScale() {\n        const minY = getMinYAxisScale();\n        const maxY = getMaxYAxisScale();\n\n        return scaleLinear()\n            .domain([minY, maxY])\n            .rangeRound([chartHeight, 0])\n            .nice();\n    }\n\n    /**\n     * @param  {HTMLElement} container DOM element that will work as the container of the graph\n     * @private\n     */\n    function buildSVG(container) {\n        if (!svg) {\n            svg = select(container)\n                .append('svg')\n                .classed('britechart stacked-area', true);\n\n            buildContainerGroups();\n        }\n\n        svg.attr('viewBox', [0, 0, width, height])\n            .attr('style', 'max-width: 100%; height: auto; height: intrinsic;')\n            .attr('width', width)\n            .attr('height', height);\n    }\n\n    /**\n     * Creates fake data for when data is an empty array\n     * @return {array}      Fake data built from emptyDataConfig settings\n     */\n    function createFakeData() {\n        const numDays = diffDays(\n            emptyDataConfig.minDate,\n            emptyDataConfig.maxDate\n        );\n        const emptyArray = Array.apply(null, Array(numDays));\n\n        isUsingFakeData = true;\n\n        return [\n            ...emptyArray.map((el, i) => ({\n                [dateLabel]: addDays(emptyDataConfig.minDate, i),\n                [valueLabel]: 0,\n                [keyLabel]: '1',\n            })),\n            ...emptyArray.map((el, i) => ({\n                [dateLabel]: addDays(emptyDataConfig.minDate, i),\n                [valueLabel]: 0,\n                [keyLabel]: '2',\n            })),\n        ];\n    }\n\n    /**\n     * Cleaning data casting the values and dates to the proper type while keeping\n     * the rest of properties on the data. It creates fake data is the data is empty.\n     * @param  {AreaChartData} originalData   Raw data from the container\n     * @return {AreaChartData}                Parsed data with values and dates\n     * @private\n     */\n    function cleanData(originalData) {\n        originalData =\n            originalData.length === 0 ? createFakeData() : originalData;\n\n        return originalData.reduce((acc, d) => {\n            (d.date = castValueToType(d[dateLabel], xAxisValueType)),\n                (d.value = +d[valueLabel]);\n\n            return [...acc, d];\n        }, []);\n    }\n\n    /**\n     * Cleans the loading state\n     * @private\n     */\n    function cleanLoadingState() {\n        svg.select('.loading-state-group svg').remove();\n    }\n\n    /**\n     * Draws the x and y axis on the svg object within their\n     * respective groups\n     * @private\n     */\n    function drawAxis() {\n        svg.select('.x-axis-group .axis.x')\n            .attr('transform', `translate( 0, ${chartHeight} )`)\n            .call(xAxis);\n\n        if (xAxisFormat !== 'custom' && xAxisValueType !== 'number') {\n            svg.select('.x-axis-group .axis.sub-x')\n                .attr(\n                    'transform',\n                    `translate(0, ${chartHeight + monthAxisPadding})`\n                )\n                .call(xSubAxis);\n        }\n\n        svg.select('.y-axis-group.axis')\n            .attr('transform', `translate( ${-xAxisPadding.left}, 0)`)\n            .call(yAxis)\n            .call(adjustYTickLabels);\n\n        if (yAxisLabel) {\n            if (yAxisLabelEl) {\n                svg.selectAll('.y-axis-label-text').remove();\n            }\n\n            yAxisLabelEl = svg\n                .select('.y-axis-label')\n                .append('text')\n                .classed('y-axis-label-text', true)\n                .attr('x', -chartHeight / 2)\n                .attr('y', yAxisLabelOffset)\n                .attr('text-anchor', 'middle')\n                .attr('transform', 'rotate(270 0 0)')\n                .text(yAxisLabel);\n        }\n\n        // Moving the YAxis tick labels to the right side\n        // selectAll('.y-axis-group .tick text')\n        //     .attr('transform', `translate( ${-chartWidth - yTickTextXOffset}, ${yTickTextYOffset})` );\n    }\n\n    /**\n     * Adjusts the position of the y axis' ticks\n     * @param  {D3Selection} selection Y axis group\n     * @return void\n     */\n    function adjustYTickLabels(selection) {\n        selection\n            .selectAll('.tick text')\n            .attr(\n                'transform',\n                `translate(${yTickTextXOffset}, ${yTickTextYOffset})`\n            );\n    }\n\n    /**\n     * Creates SVG dot elements for each data entry and draws them\n     * TODO: Plug\n     */\n    function drawDataReferencePoints() {\n        // Creates Dots on Data points\n        var points = svg\n            .select('.chart-group')\n            .selectAll('.dots')\n            .data(layers)\n            .enter()\n            .append('g')\n            .attr('class', 'dots')\n            .attr('d', ({ values }) => areaShape(values))\n            .attr('clip-path', 'url(#clip)');\n\n        // Processes the points\n        // TODO: Optimize this code\n        points\n            .selectAll('.dot')\n            .data(({ values }, index) =>\n                values.map((point) => ({ index, point }))\n            )\n            .enter()\n            .append('circle')\n            .attr('class', 'dot')\n            .attr('r', () => pointsSize)\n            .attr('fill', () => pointsColor)\n            .attr('stroke-width', '0')\n            .attr('stroke', pointsBorderColor)\n            .attr('transform', function (d) {\n                let { point } = d;\n                let key = xScale(point.date);\n\n                dataPoints[key] = dataPoints[key] || [];\n                dataPoints[key].push(d);\n\n                let { date, y, y0 } = point;\n\n                return `translate( ${xScale(date)}, ${yScale(y + y0)} )`;\n            });\n    }\n\n    /**\n     * Draws grid lines on the background of the chart\n     * TODO: Refactor into new grid helper\n     * @return void\n     */\n    function drawGridLines() {\n        svg.select('.grid-lines-group').selectAll('grid').remove();\n\n        let shouldHighlightXAxis = getMinYAxisScale() < 0;\n\n        if (grid === 'horizontal' || grid === 'full') {\n            drawHorizontalGridLines();\n            if (shouldHighlightXAxis) {\n                drawHorizontalHighlightLine();\n            }\n        }\n\n        if (grid === 'vertical' || grid === 'full') {\n            drawVerticalGridLines();\n        }\n    }\n\n    /**\n     * Draws the grid lines for a vertical bar chart\n     * @return {void}\n     */\n    function drawHorizontalGridLines() {\n        const grid = gridHorizontal(yScale)\n            .range([0, chartWidth])\n            .hideEdges('first')\n            .ticks(yTicks);\n\n        grid(svg.select('.grid-lines-group'));\n\n        drawHorizontalExtendedLine();\n    }\n\n    /**\n     * Draws a vertical line to extend x-axis till the edges\n     * @return {void}\n     */\n    function drawHorizontalExtendedLine() {\n        baseLine = svg\n            .select('.grid-lines-group')\n            .selectAll('line.extended-x-line')\n            .data([0])\n            .enter()\n            .append('line')\n            .attr('class', 'extended-x-line')\n            .attr('x1', 0)\n            .attr('x2', chartWidth)\n            .attr('y1', chartHeight)\n            .attr('y2', chartHeight);\n    }\n\n    /**\n     * Adds highlight class to horizontal grid line at data = 0\n     * @return {void}\n     * @private\n     */\n    function drawHorizontalHighlightLine() {\n        const horizontalGrid = svg\n            .select('.horizontal')\n            .selectAll('.grid-line');\n        horizontalGrid.attr('class', (d) =>\n            d === 0\n                ? 'grid-line horizontal-grid-line--highlighted'\n                : 'grid-line'\n        );\n    }\n\n    /**\n     * Draws the grid lines for an horizontal bar chart\n     * @return {void}\n     */\n    function drawVerticalGridLines() {\n        const grid = gridVertical(xScale)\n            .range([0, chartHeight])\n            .hideEdges('first')\n            .ticks(xTicks);\n\n        grid(svg.select('.grid-lines-group'));\n\n        drawVerticalExtendedLine();\n    }\n\n    /**\n     * Draws a vertical line to extend y-axis till the edges\n     * @return {void}\n     */\n    function drawVerticalExtendedLine() {\n        baseLine = svg\n            .select('.grid-lines-group')\n            .selectAll('line.extended-y-line')\n            .data([0])\n            .enter()\n            .append('line')\n            .attr('class', 'extended-y-line')\n            .attr('y1', xAxisPadding.bottom)\n            .attr('y2', chartHeight)\n            .attr('x1', 0)\n            .attr('x2', 0);\n    }\n\n    /**\n     * Draws the loading state\n     * @private\n     */\n    function drawLoadingState() {\n        svg.select('.loading-state-group').html(barLoadingMarkup);\n    }\n\n    /**\n     * Draws an overlay element over the graph\n     * @private\n     */\n    function drawHoverOverlay() {\n        // Not ideal, we need to figure out how to call exit for nested elements\n        if (overlay) {\n            svg.selectAll('.overlay').remove();\n        }\n\n        overlay = svg\n            .select('.metadata-group')\n            .append('rect')\n            .attr('class', 'overlay')\n            .attr('y1', 0)\n            .attr('y2', chartHeight)\n            .attr('height', chartHeight)\n            .attr('width', chartWidth)\n            .attr('fill', overlayColor)\n            .style('display', 'none');\n    }\n\n    /**\n     * Draws an empty line when the data is all zero\n     * @private\n     */\n    function drawEmptyDataLine() {\n        let emptyDataLine = line()\n            .x((d) => xScale(d.date))\n            .y(() => yScale(0) - 1);\n\n        let chartGroup = svg.select('.chart-group');\n\n        chartGroup\n            .append('path')\n            .attr('class', 'empty-data-line')\n            .attr('d', emptyDataLine(dataSortedFormatted))\n            .style('stroke', 'url(#empty-data-line-gradient)');\n\n        chartGroup\n            .append('linearGradient')\n            .attr('id', 'empty-data-line-gradient')\n            .attr('gradientUnits', 'userSpaceOnUse')\n            .attr('x1', 0)\n            .attr('x2', xScale(data[data.length - 1].date))\n            .attr('y1', 0)\n            .attr('y2', 0)\n            .selectAll('stop')\n            .data([\n                { offset: '0%', color: lineGradient[0] },\n                { offset: '100%', color: lineGradient[1] },\n            ])\n            .enter()\n            .append('stop')\n            .attr('offset', ({ offset }) => offset)\n            .attr('stop-color', ({ color }) => color);\n    }\n\n    /**\n     * Draws the loading state\n     * @private\n     */\n    function drawLoadingState() {\n        svg.select('.loading-state-group').html(stackedAreaLoadingMarkup);\n    }\n\n    /**\n     * Draws the different areas into the chart-group element\n     * @private\n     */\n    function drawStackedAreas() {\n        // Not ideal, we need to figure out how to call exit for nested elements\n        if (series) {\n            svg.selectAll('.layer-container').remove();\n            svg.selectAll('.layer').remove();\n            svg.selectAll('.area-outline').remove();\n        }\n\n        if (isUsingFakeData) {\n            drawEmptyDataLine();\n\n            return;\n        }\n\n        areaShape = area()\n            .curve(curveMap[areaCurve])\n            .x(({ data }) => xScale(data.date))\n            .y0((d) => yScale(d[0]))\n            .y1((d) => yScale(d[1]));\n\n        areaOutline = line()\n            .curve(areaShape.curve())\n            .x(({ data }) => xScale(data.date))\n            .y((d) => yScale(d[1]));\n\n        if (isAnimated) {\n            series = svg\n                .select('.chart-group')\n                .selectAll('.layer')\n                .data(layersInitial, getName)\n                .enter()\n                .append('g')\n                .classed('layer-container', true);\n\n            series\n                .append('path')\n                .attr('class', 'layer')\n                .attr('d', areaShape)\n                .style('opacity', areaOpacity)\n                .attr('fill', ({ key }) => nameToColorMap[key]);\n\n            series\n                .append('path')\n                .attr('class', 'area-outline')\n                .attr('d', areaOutline)\n                .style('stroke', ({ key }) => nameToColorMap[key])\n                .attr('fill', 'none');\n\n            // Update\n            svg.select('.chart-group')\n                .selectAll('.layer')\n                .data(layers)\n                .transition()\n                .delay((_, i) => areaAnimationDelays[i])\n                .duration(areaAnimationDuration)\n                .ease(ease)\n                .attr('d', areaShape)\n                .style('opacity', areaOpacity)\n                .attr('fill', ({ key }) => nameToColorMap[key]);\n\n            svg.select('.chart-group')\n                .selectAll('.area-outline')\n                .data(layers)\n                .transition()\n                .delay((_, i) => areaAnimationDelays[i])\n                .duration(areaAnimationDuration)\n                .ease(ease)\n                .attr('d', areaOutline)\n                .attr('fill', 'none');\n        } else {\n            series = svg\n                .select('.chart-group')\n                .selectAll('.layer')\n                .data(layers)\n                .enter()\n                .append('g')\n                .classed('layer-container', true);\n\n            series\n                .append('path')\n                .attr('class', 'layer')\n                .attr('d', areaShape)\n                .style('opacity', areaOpacity)\n                .attr('fill', ({ key }) => nameToColorMap[key]);\n\n            series\n                .append('path')\n                .attr('class', 'area-outline')\n                .attr('d', areaOutline)\n                .style('stroke', ({ key }) => nameToColorMap[key]);\n\n            // Update\n            svg.select('.chart-group')\n                .selectAll('.layer')\n                .attr('d', areaShape)\n                .style('opacity', areaOpacity)\n                .attr('fill', ({ key }) => nameToColorMap[key]);\n\n            svg.select('.chart-group')\n                .selectAll('.area-outline')\n                .attr('class', 'area-outline')\n                .attr('d', areaOutline)\n                .style('stroke', ({ key }) => nameToColorMap[key]);\n        }\n\n        if (!hasOutline) {\n            svg.select('.chart-group')\n                .selectAll('.area-outline')\n                .style('display', 'none');\n        }\n\n        // Exit\n        series.exit().transition().style('opacity', 0).remove();\n    }\n\n    /**\n     * Creates the vertical marker\n     * @return void\n     */\n    function drawVerticalMarker() {\n        // Not ideal, we need to figure out how to call exit for nested elements\n        if (verticalMarkerContainer) {\n            svg.selectAll('.vertical-marker-container').remove();\n        }\n\n        verticalMarkerContainer = svg\n            .select('.metadata-group')\n            .append('g')\n            .attr('class', 'vertical-marker-container')\n            .attr('transform', 'translate(9999, 0)');\n\n        verticalMarkerLine = verticalMarkerContainer\n            .selectAll('path')\n            .data([\n                {\n                    x1: 0,\n                    y1: 0,\n                    x2: 0,\n                    y2: 0,\n                },\n            ])\n            .enter()\n            .append('line')\n            .classed('vertical-marker', true)\n            .attr('x1', 0)\n            .attr('y1', chartHeight)\n            .attr('x2', 0)\n            .attr('y2', 0);\n    }\n\n    /**\n     * Removes all the datapoints highlighter circles added to the marker container\n     * @return void\n     * @private\n     */\n    function cleanDataPointHighlights() {\n        verticalMarkerContainer.selectAll('.circle-container').remove();\n    }\n\n    /**\n     * Orders the data by date for consumption on the chart tooltip\n     * @param  {AreaChartData} data    Chart data\n     * @return {Object[]}               Chart data ordered by date\n     * @private\n     */\n    function getSortedData(data) {\n        return nest()\n            .key(getDate)\n            .entries(data.sort((a, b) => a.date - b.date))\n            .map((d) => {\n                return Object.assign({}, d, {\n                    date: castValueToType(d.key, xAxisValueType),\n                });\n            });\n    }\n\n    /**\n     * Computes the minimum value\n     *\n     * @return {Number} Min value\n     */\n    function getMinValue() {\n        return min(data.map((d) => d.value));\n    }\n\n    /**\n     * Computes the minimal sum of values for any date\n     *\n     * @return {Number} Min value\n     */\n    function getMinValueByDate() {\n        let keys = uniq(data.map((o) => o.name));\n        let minValueByDate = min(dataSortedFormatted, function (d) {\n            let vals = keys.map((key) => d[key]);\n\n            return sum(vals);\n        });\n\n        return minValueByDate;\n    }\n\n    /**\n     * Computes the maximum sum of values for any date\n     *\n     * @return {Number} Max value\n     */\n    function getMaxValueByDate() {\n        let keys = uniq(data.map((o) => o.name));\n        let maxValueByDate = max(dataSortedFormatted, function (d) {\n            let vals = keys.map((key) => d[key]);\n\n            return sum(vals);\n        });\n\n        return maxValueByDate;\n    }\n\n    /**\n     * Computes the mininmal value for the Y-axis scale\n     *\n     * @return {Number} minY value\n     */\n    function getMinYAxisScale() {\n        if (isUsingFakeData) {\n            return emptyDataConfig.minY;\n        }\n\n        return min([getMinValue(), getMinValueByDate(), yAxisBaseline, 0]);\n    }\n\n    /**\n     * Computes the maximal value for the Y-axis scale\n     *\n     * @return {Number} maxY value\n     */\n    function getMaxYAxisScale() {\n        if (isUsingFakeData) {\n            return emptyDataConfig.maxY;\n        }\n\n        return max([getMaxValueByDate(), yAxisBaseline]);\n    }\n\n    /**\n     * Finds out the data entry that is closer to the given position on pixels\n     * @param  {Number} mouseX X position of the mouse\n     * @return {obj}        Data entry that is closer to that x axis position\n     */\n    function getNearestDataPoint(mouseX) {\n        let points = dataSorted.filter(\n            ({ date }) => Math.abs(xScale(date) - mouseX) <= epsilon\n        );\n\n        if (points.length) {\n            return points[0];\n        }\n    }\n\n    /**\n     * Epsilon is the value given to the number representing half of the distance in\n     * pixels between two date data points\n     * @return {Number} half distance between any two points\n     */\n    function setEpsilon() {\n        let dates = dataSorted.map(({ date }) => date);\n\n        epsilon = (xScale(dates[1]) - xScale(dates[0])) / 2;\n    }\n\n    /**\n     * MouseMove handler, calculates the nearest dataPoint to the cursor\n     * and updates metadata related to it\n     * @private\n     */\n    function handleMouseMove(e) {\n        epsilon || setEpsilon();\n\n        let [xPosition, yPosition] = d3Selection.mouse(e),\n            dataPoint = getNearestDataPoint(xPosition - margin.left),\n            dataPointXPosition;\n\n        if (dataPoint) {\n            dataPointXPosition = xScale(castValueToType(dataPoint.key));\n            // Move verticalMarker to that datapoint\n            moveVerticalMarker(dataPointXPosition);\n            // Add data points highlighting\n            highlightDataPoints(dataPoint);\n            // Emit event with xPosition for tooltip or similar feature\n            dispatcher.call(\n                'customMouseMove',\n                e,\n                dataPoint,\n                nameToColorMap,\n                dataPointXPosition,\n                yPosition\n            );\n        }\n    }\n\n    /**\n     * MouseMove handler, calculates the nearest dataPoint to the cursor\n     * and updates metadata related to it\n     * @private\n     */\n    function handleMouseMove(e) {\n        epsilon || setEpsilon();\n\n        let [xPosition, yPosition] = mouse(e),\n            dataPoint = getNearestDataPoint(xPosition - margin.left),\n            dataPointXPosition;\n\n        if (dataPoint) {\n            dataPointXPosition = xScale(new Date(dataPoint.key));\n            // Move verticalMarker to that datapoint\n            moveVerticalMarker(dataPointXPosition);\n            // Add data points highlighting\n            highlightDataPoints(dataPoint);\n            // Emit event with xPosition for tooltip or similar feature\n            dispatcher.call(\n                'customMouseMove',\n                e,\n                dataPoint,\n                nameToColorMap,\n                dataPointXPosition,\n                yPosition\n            );\n        }\n    }\n\n    /**\n     * MouseOut handler, hides overlay and removes active class on verticalMarkerLine\n     * It also resets the container of the vertical marker\n     * @private\n     */\n    function handleMouseOut(e, d) {\n        overlay.style('display', 'none');\n        verticalMarkerLine.classed('bc-is-active', false);\n        verticalMarkerContainer.attr('transform', 'translate(9999, 0)');\n\n        dispatcher.call('customMouseOut', e, d, mouse(e));\n    }\n\n    /**\n     * Mouseover handler, shows overlay and adds active class to verticalMarkerLine\n     * @private\n     */\n    function handleMouseOver(e, d) {\n        overlay.style('display', 'block');\n        verticalMarkerLine.classed('bc-is-active', true);\n\n        dispatcher.call('customMouseOver', e, d, mouse(e));\n    }\n\n    /**\n     * Touchmove highlighted points\n     * It will only pass the information with the event\n     * @private\n     */\n    function handleTouchMove(e, d) {\n        dispatcher.call('customTouchMove', e, d, touch(e));\n    }\n\n    /**\n     * Mouseclick handler over one of the highlight points\n     * It will only pass the information with the event\n     * @private\n     */\n    function handleHighlightClick(e, d) {\n        dispatcher.call('customDataEntryClick', e, d, mouse(e));\n    }\n\n    /**\n     * Creates coloured circles marking where the exact data y value is for a given data point\n     * @param  {obj} dataPoint Data point to extract info from\n     * @private\n     */\n    function highlightDataPoints({ values }) {\n        let accumulator = 0;\n\n        cleanDataPointHighlights();\n\n        // ensure order stays constant\n        let sortedValues = order.reduce((acc, current) => {\n            return [...acc, values.find(({ name }) => name === current)];\n        }, []);\n\n        sortedValues.forEach((d, index) => {\n            let marker = verticalMarkerContainer\n                .append('g')\n                .classed('circle-container', true)\n                .append('circle')\n                .classed('data-point-highlighter', true)\n                .attr('cx', highlightCircleSize)\n                .attr('cy', 0)\n                .attr('r', highlightCircleRadius)\n                .style('stroke-width', highlightCircleStroke)\n                .style('stroke', nameToColorMap[d.name])\n                .style('cursor', 'pointer')\n                .on('click', function () {\n                    addGlowFilter(this);\n                    handleHighlightClick(this, d);\n                })\n                .on('mouseout', function () {\n                    removeFilter(this);\n                });\n\n            accumulator = accumulator + sortedValues[index][valueLabel];\n\n            marker.attr(\n                'transform',\n                `translate( ${-highlightCircleSize}, ${yScale(accumulator)} )`\n            );\n        });\n    }\n\n    /**\n     * Helper method to update the x position of the vertical marker\n     * @param  {obj} dataPoint Data entry to extract info\n     * @return void\n     */\n    function moveVerticalMarker(verticalMarkerXPosition) {\n        verticalMarkerContainer.attr(\n            'transform',\n            `translate(${verticalMarkerXPosition},0)`\n        );\n    }\n\n    /**\n     * Resets a point filter\n     * @param {DOMElement} point  Point to reset\n     */\n    function removeFilter(point) {\n        select(point).attr('filter', 'none');\n    }\n\n    /**\n     * Determines if we should add the tooltip related logic depending on the\n     * size of the chart and the tooltipThreshold variable value\n     * @return {boolean} Should we build the tooltip?\n     * @private\n     */\n    function shouldShowTooltip() {\n        return width > tooltipThreshold && !isUsingFakeData;\n    }\n\n    // API\n    /**\n     * Gets or Sets the duration of the area animation\n     * @param  {Number} _x=1200         Desired animation duration for the graph\n     * @return {duration | module}      Current animation duration or Chart module to chain calls\n     * @public\n     */\n    exports.animationDuration = function (_x) {\n        if (!arguments.length) {\n            return areaAnimationDuration;\n        }\n        areaAnimationDuration = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the area curve of the stacked area.\n     * @param {String} [_x='monotoneX']     Desired curve for the stacked area, default 'monotoneX'. Other options are:\n     * basis, natural, linear, monotoneY, step, stepAfter, stepBefore, cardinal, and\n     * catmullRom. Visit https://github.com/d3/d3-shape#curves for more information.\n     * @return {String | module}            Current area curve setting or Chart module to chain calls\n     * @public\n     * @example stackedArea.areaCurve('step')\n     */\n    exports.areaCurve = function (_x) {\n        if (!arguments.length) {\n            return areaCurve;\n        }\n        areaCurve = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the opacity of the stacked areas in the chart (all of them will have the same opacity)\n     * @param  {Number} _x          Opacity to get/set\n     * @return {Number | module}    Current opacity or Area Chart module to chain calls\n     * @public\n     */\n    exports.areaOpacity = function (_x) {\n        if (!arguments.length) {\n            return areaOpacity;\n        }\n        areaOpacity = _x;\n\n        return this;\n    };\n\n    /**\n     * Exposes the constants to be used to force the x axis to respect a certain granularity\n     * current options: MINUTE_HOUR, HOUR_DAY, DAY_MONTH, MONTH_YEAR\n     * @example\n     *     area.xAxisCustomFormat(area.axisTimeCombinations.HOUR_DAY)\n     */\n    exports.axisTimeCombinations = axisTimeCombinations;\n\n    /**\n     * Gets or Sets the colorMap of the chart\n     * @param  {object} [_x=null]    Color map\n     * @return {object | module}     Current colorMap or Chart module to chain calls\n     * @example stackedArea.colorMap({name: 'colorHex', name2: 'colorString'})\n     * @public\n     */\n    exports.colorMap = function (_x) {\n        if (!arguments.length) {\n            return nameToColorMap;\n        }\n        nameToColorMap = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the colorSchema of the chart\n     * @param  {String[]} _x        Desired colorSchema for the graph\n     * @return {String[] | module}  Current colorSchema or Chart module to chain calls\n     * @public\n     */\n    exports.colorSchema = function (_x) {\n        if (!arguments.length) {\n            return colorSchema;\n        }\n        colorSchema = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the dateLabel of the chart\n     * @param  {String} _x          Desired dateLabel for the graph\n     * @return {String | module}    Current dateLabel or Chart module to chain calls\n     * @public\n     * @deprecated\n     */\n    exports.dateLabel = function (_x) {\n        if (!arguments.length) {\n            return dateLabel;\n        }\n        dateLabel = _x;\n        dataKeyDeprecationMessage('date');\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the emptyDataConfig of the chart\n     * @param  {Object} _x          emptyDataConfig object to get/set\n     * @return {Object | module}    Current config for when chart data is an empty array\n     * @public\n     */\n    exports.emptyDataConfig = function (_x) {\n        if (!arguments.length) {\n            return emptyDataConfig;\n        }\n        emptyDataConfig = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the grid mode\n     * @param  {String} _x          Desired mode for the grid ('vertical'|'horizontal'|'full')\n     * @return {String | module}    Current mode of the grid or Area Chart module to chain calls\n     * @public\n     */\n    exports.grid = function (_x) {\n        if (!arguments.length) {\n            return grid;\n        }\n        grid = _x;\n\n        return this;\n    };\n\n    /**\n     * Enables or disables the outline at the top of the areas\n     * @param {Boolean} _x = true   Whether if the areas in the chart have an outline at the top\n     * @return {Boolean | module}   Current state of the flag\n     * @public\n     */\n    exports.hasOutline = function (_x) {\n        if (!arguments.length) {\n            return hasOutline;\n        }\n        hasOutline = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the height of the chart\n     * @param  {Number} _x          Desired width for the graph\n     * @return {Number | module}    Current height or Area Chart module to chain calls\n     * @public\n     */\n    exports.height = function (_x) {\n        if (!arguments.length) {\n            return height;\n        }\n        height = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n     * @param  {Boolean} _x = false     Desired animation flag\n     * @return {Boolean | module}       Current isAnimated flag or Chart module\n     * @public\n     */\n    exports.isAnimated = function (_x) {\n        if (!arguments.length) {\n            return isAnimated;\n        }\n        isAnimated = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the keyLabel of the chart\n     * @param  {Number} _x Desired keyLabel for the graph\n     * @return {Number | module} Current keyLabel or Chart module to chain calls\n     * @public\n     * @deprecated\n     */\n    exports.keyLabel = function (_x) {\n        if (!arguments.length) {\n            return keyLabel;\n        }\n        keyLabel = _x;\n        dataKeyDeprecationMessage('name');\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the margin of the chart\n     * @param  {Object} _x          Margin object to get/set\n     * @return {Object | module}    Current margin or Area Chart module to chain calls\n     * @public\n     */\n    exports.margin = function (_x) {\n        if (!arguments.length) {\n            return margin;\n        }\n        margin = {\n            ...margin,\n            ..._x,\n        };\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the minimum width of the graph in order to show the tooltip\n     * NOTE: This could also depend on the aspect ratio\n     * @param  {Number} _x          Minimum width of the graph\n     * @return {Number | module}    Current tooltipThreshold or Area Chart module to chain calls\n     * @public\n     */\n    exports.tooltipThreshold = function (_x) {\n        if (!arguments.length) {\n            return tooltipThreshold;\n        }\n        tooltipThreshold = _x;\n\n        return this;\n    };\n\n    /**\n     * Pass an override for the ordering of the topics\n     * @param  {String[]} _x          Array of the names of your tooltip items\n     * @return {String[] | module}    Current override order or Chart module to chain calls\n     * @public\n     */\n    exports.topicsOrder = function (_x) {\n        if (!arguments.length) {\n            return topicsOrder;\n        }\n        topicsOrder = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the loading state of the chart\n     * @param  {boolean} flag       Desired value for the loading state\n     * @return {boolean | module}   Current loading state flag or Chart module to chain calls\n     * @public\n     */\n    exports.isLoading = function (_flag) {\n        if (!arguments.length) {\n            return isLoading;\n        }\n        isLoading = _flag;\n\n        return this;\n    };\n\n    /**\n     * Pass language tag for the tooltip to localize the date.\n     * Feature uses Intl.DateTimeFormat, for compatability and support, refer to\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n     * @param  {String} _x          A language tag (BCP 47) like 'en-US' or 'fr-FR'\n     * @return {String | Module}    Current locale or module to chain calls\n     * @public\n     */\n    exports.locale = function (_x) {\n        if (!arguments.length) {\n            return locale;\n        }\n        locale = _x;\n\n        return this;\n    };\n\n    /**\n     * Chart exported to png and a download action is fired\n     * @param {String} filename     File title for the resulting picture\n     * @param {String} title        Title to add at the top of the exported picture\n     * @return {Promise}            Promise that resolves if the chart image was loaded and downloaded successfully\n     * @public\n     */\n    exports.exportChart = function (filename, title) {\n        return exportChart.call(exports, svg, filename, title);\n    };\n\n    /**\n     * Exposes an 'on' method that acts as a bridge with the event dispatcher\n     * We are going to expose this events:\n     * customMouseOver, customMouseMove, customMouseOut,\n     * customDataEntryClick and customTouchMove\n     * @return {module}     Stacked Area\n     * @public\n     */\n    exports.on = function () {\n        let value = dispatcher.on.apply(dispatcher, arguments);\n\n        return value === dispatcher ? exports : value;\n    };\n\n    /**\n     * Gets or Sets the valueLabel of the chart\n     * @param  {Number} _x          Desired valueLabel for the graph\n     * @return {Number | module}    Current valueLabel or Chart module to chain calls\n     * @public\n     * @deprecated\n     */\n    exports.valueLabel = function (_x) {\n        if (!arguments.length) {\n            return valueLabel;\n        }\n        valueLabel = _x;\n        dataKeyDeprecationMessage('value');\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the width of the chart\n     * @param  {Number} _x          Desired width for the graph\n     * @return {Number | module}    Current width or Area Chart module to chain calls\n     * @public\n     */\n    exports.width = function (_x) {\n        if (!arguments.length) {\n            return width;\n        }\n        width = _x;\n\n        return this;\n    };\n\n    /**\n     * Exposes the ability to force the chart to show a certain x format\n     * It requires a `xAxisFormat` of 'custom' in order to work.\n     * NOTE: localization not supported\n     * @param  {String} _x            Desired format for x axis, one of the d3.js date formats [here]{@link https://github.com/d3/d3-time-format#locale_format}\n     * @return {String | Module}      Current format or module to chain calls\n     * @public\n     * @example\n     *     stackedArea.xAxisCustomFormat(stackedArea.axisTimeCombinations.HOUR_DAY)\n     */\n    exports.xAxisCustomFormat = function (_x) {\n        if (!arguments.length) {\n            return xAxisCustomFormat;\n        }\n        xAxisCustomFormat = _x;\n\n        return this;\n    };\n\n    /**\n     * Exposes the ability to force the chart to show a certain x axis grouping\n     * @param  {String} _x          Desired format, a combination of axisTimeCombinations (MINUTE_HOUR, HOUR_DAY, DAY_MONTH, MONTH_YEAR)\n     * Set it to 'custom' to make use of specific formats with xAxisCustomFormat\n     * @return { String|Module }      Current format or module to chain calls\n     * @public\n     * @example\n     *     stackedArea.xAxisCustomFormat(stackedArea.axisTimeCombinations.HOUR_DAY)\n     */\n    exports.xAxisFormat = function (_x) {\n        if (!arguments.length) {\n            return xAxisFormat;\n        }\n        xAxisFormat = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the `xAxisValueType`.\n     * Choose between 'date' and 'number'. When set to `number` the values of the x-axis must not\n     * be dates anymore, but can be arbitrary numbers.\n     * @param  {string} [_x='date']     Desired value type of the x-axis\n     * @return {string | module}        Current value type of the x-axis or Chart module to chain calls\n     * @public\n     * @example stackedArea.xAxisValueType('numeric')\n     */\n    exports.xAxisValueType = function (_x) {\n        if (!arguments.length) {\n            return xAxisValueType;\n        }\n        xAxisValueType = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the `xAxisScale`.\n     * Choose between 'linear' and 'logarithmic'. The setting will only work if `xAxisValueType` is set to\n     * 'number' as well, otherwise it won't influence the visualization.\n     * @param  {string} [_x='linear']   Desired value type of the x-axis\n     * @return {string | module}        Current value type of the x-axis or Chart module to chain calls\n     * @public\n     * @example stackedArea.xAxisValueType('numeric').xAxisScale('logarithmic')\n     */\n    exports.xAxisScale = function (_x) {\n        if (!arguments.length) {\n            return xAxisScale;\n        }\n        xAxisScale = _x;\n\n        return this;\n    };\n\n    /**\n     * Exposes the ability to force the chart to show a certain x ticks. It requires a `xAxisFormat` of 'custom' in order to work.\n     * NOTE: This value needs to be a multiple of 2, 5 or 10. They won't always work as expected, as D3 decides at the end\n     * how many and where the ticks will appear.\n     * @param  {Number} _x            Desired number of x axis ticks (multiple of 2, 5 or 10)\n     * @return {Number | Module}      Current number or ticks or module to chain calls\n     * @public\n     */\n    exports.xTicks = function (_x) {\n        if (!arguments.length) {\n            return xTicks;\n        }\n        xTicks = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the y-axis label of the chart\n     * @param  {String} _x Desired label string\n     * @return {String | module} Current yAxisLabel or Chart module to chain calls\n     * @public\n     * @example stackedArea.yAxisLabel('Ticket Sales')\n     */\n    exports.yAxisLabel = function (_x) {\n        if (!arguments.length) {\n            return yAxisLabel;\n        }\n        yAxisLabel = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the offset of the yAxisLabel of the chart.\n     * The method accepts both positive and negative values.\n     * @param  {Number} [_x=-60]    Desired offset for the label\n     * @return {Number | module}    Current yAxisLabelOffset or Chart module to chain calls\n     * @public\n     * @example stackedArea.yAxisLabelOffset(-55)\n     */\n    exports.yAxisLabelOffset = function (_x) {\n        if (!arguments.length) {\n            return yAxisLabelOffset;\n        }\n        yAxisLabelOffset = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the number of ticks of the y axis on the chart\n     * @param  {Number} [_x=5]      Desired vertical ticks\n     * @return {Number | module}    Current vertical ticks or Chart module to chain calls\n     * @public\n     */\n    exports.yTicks = function (_x) {\n        if (!arguments.length) {\n            return yTicks;\n        }\n        yTicks = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the yAxisBaseline - this is the y-value where the area starts from in y-direction\n     * (default is 0). Change this value if you don't want to start your area from y=0.\n     * @param  {Number} [_x=0]      Desired baseline of the y axis\n     * @return {Number | module}    Current baseline or Chart module to chain calls\n     * @public\n     * @example stackedArea.yAxisBaseline(20)\n     */\n    exports.yAxisBaseline = function (_x) {\n        if (!arguments.length) {\n            return yAxisBaseline;\n        }\n        yAxisBaseline = _x;\n\n        return this;\n    };\n\n    return exports;\n}\n"],"sourceRoot":""}