{"version":3,"sources":["webpack://core.[name]/webpack/universalModuleDefinition","webpack://core.[name]/webpack/bootstrap","webpack://core.[name]/external \"d3-time\"","webpack://core.[name]/external \"d3-shape\"","webpack://core.[name]/external \"d3-selection\"","webpack://core.[name]/external \"d3-format\"","webpack://core.[name]/external \"d3-array\"","webpack://core.[name]/./src/charts/helpers/constants.js","webpack://core.[name]/external \"d3-scale\"","webpack://core.[name]/./src/charts/helpers/color.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/defineProperty.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/typeof.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://core.[name]/external \"d3-ease\"","webpack://core.[name]/./src/charts/helpers/export.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/base-64/base64.js","webpack://core.[name]/./src/charts/helpers/style.js","webpack://core.[name]/./src/charts/helpers/number.js","webpack://core.[name]/external \"d3-transition\"","webpack://core.[name]/external \"d3-dispatch\"","webpack://core.[name]/./src/charts/helpers/load.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://core.[name]/(webpack)/buildin/module.js","webpack://core.[name]/(webpack)/buildin/global.js","webpack://core.[name]/external \"d3-interpolate\"","webpack://core.[name]/./src/charts/helpers/text.js","webpack://core.[name]/./src/charts/donut/donut.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__16__","__WEBPACK_EXTERNAL_MODULE__22__","__WEBPACK_EXTERNAL_MODULE__23__","__WEBPACK_EXTERNAL_MODULE__31__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","axisTimeCombinations","MINUTE_HOUR","HOUR_DAY","DAY_MONTH","MONTH_YEAR","CUSTOM","timeBenchmarks","ONE_AND_A_HALF_YEARS","ONE_YEAR","ONE_DAY","hoursHuman","motion","duration","curveMap","linear","curveLinear","basis","curveBasis","cardinal","curveCardinal","catmullRom","curveCatmullRom","monotoneX","curveMonotoneX","monotoneY","curveMonotoneY","natural","curveNatural","step","curveStep","stepAfter","curveStepAfter","stepBefore","curveStepBefore","emptyDonutData","quantity","percentage","timeIntervals","timeMillisecond","utcMillisecond","timeSecond","utcSecond","timeMinute","utcMinute","timeHour","utcHour","timeDay","utcDay","timeWeek","utcWeek","timeSunday","utcSunday","timeMonday","utcMonday","timeTuesday","utcTuesday","timeWednesday","utcWednesday","timeThursday","utcThursday","timeFriday","utcFriday","timeSaturday","utcSaturday","timeMonth","utcMonth","timeYear","utcYear","colorGradients","greenBlue","orangePink","bluePurple","colorGradientsHuman","britecharts","grey","orange","blueGreen","teal","green","yellow","pink","purple","red","colorSchemas","colorSchemasHuman","aloeGreen","greenColor","blueColor","yellowColor","orangeColor","singleColors","pinkColor","purpleColor","singleColorsHuman","obj","configurable","writable","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arr","_typeof","iterator","constructor","len","length","arr2","Array","arrayLikeToArray","minLen","toString","slice","from","test","isBrowser","isIE","navigator","msSaveOrOpenBlob","encoder","btoa","base64","encode","config","styleClass","defaultFilename","chartBackground","imageSourceBase","titleFontSize","titleFontFamily","titleTopOffset","this","exportChart","d3svg","filename","title","console","error","loadImage","convertSvgToHtml","then","img","canvas","createCanvas","width","height","handleImageLoad","attr","html","serializeWithStyles","initializeSerializer","serializer","node","userAgent","search","replace","formatHtmlByBrowser","styleBackgroundString","addBackground","prependTitle","parseInt","document","createElement","createImage","svgHtml","callback","Image","Error","src","encodeURIComponent","match","p1","String","fromCharCode","drawImageOnCanvas","image","getContext","drawImage","extensionType","url","toDataURL","link","href","download","body","appendChild","click","removeChild","downloadCanvas","Promise","res","rej","addEventListener","err","svgWidth","margin","left","freeExports","freeGlobal","global","InvalidCharacterError","message","TABLE","REGEX_SPACE_CHARACTERS","input","a","b","buffer","padding","output","position","charCodeAt","charAt","bitStorage","bitCounter","indexOf","noStyleTags","BASE","HEAD","HTML","META","NOFRAME","NOSCRIPT","PARAM","SCRIPT","STYLE","TITLE","tagNames","computeDefaultStyleByTagName","tagName","defaultStyle","element","computedStyle","getComputedStyle","forEach","style","defaultStylesByTagName","elem","elements","result","cssTexts","nodeType","Node","ELEMENT_NODE","querySelectorAll","el","toUpperCase","cssText","cssPropName","outerHTML","map","idCounter","integerValueFormats","small","limit","format","medium","large","decimalValueFormats","getValueSize","limits","size","calcLinearRegression","dataPoints","x","y","xy","x2","denominator","intercept","slope","minX","min","maxX","max","x1","y1","y2","calculatePercent","total","decimals","percent","isInteger","formatDecimalValue","formatIntegerValue","uniqueId","prefix","id","linearGradient","barLoadingMarkup","donutLoadingMarkup","lineLoadingMarkup","stackedAreaLoadingMarkup","sparkLineLoadingMarkup","brushLoadingMarkup","isArray","iter","TypeError","webpackPolyfill","deprecate","paths","children","g","Function","e","wrapConfig","wrapText","xOffset","fontSize","availableWidth","word","text","select","words","split","reverse","line","lineNumber","smallLineHeight","dy","parseFloat","smallFontSize","tspan","append","classed","pop","push","join","getComputedTextLength","wrapTextWithEllipses","xpos","each","getTextWidth","fontFace","font","measureText","getApproximateNumberOfLines","maxLength","approximateLineNumber","data","chartWidth","chartHeight","layout","shape","slices","svg","highlightedSliceId","highlightedSlice","numberFormat","colorScale","top","right","bottom","isLoading","ease","easeCubicInOut","pieDrawingTransitionDuration","radiusHoverOffset","externalRadius","internalRadius","legendWidth","isAnimated","isEmpty","hasFixedHighlightedSlice","hasHoverAnimation","hasLastHoverSliceHighlighted","lastHighlightedSlice","emptyDataConfig","emptySliceColor","showEmptySlice","percentageFormat","hasCenterLegend","nameToColorMap","colorSchema","colorHelper","centeredTextFunction","storeAngle","_current","reduceOuterRadius","outerRadius","orderingFunction","getQuantity","getName","getSliceFill","dispatcher","dispatch","_selection","_data","cleanData","reduce","acc","undefined","totalQuantity","sumValues","container","buildContainerGroups","buildSVG","remove","pie","padAngle","sort","scaleOrdinal","range","domain","memo","item","arc","innerRadius","padRadius","selectAll","newSlices","enter","merge","on","handleMouseOver","handleMouseMove","handleMouseOut","handleClick","transition","attrTween","tweenLoading","exit","drawSlices","filterHighlightedSlice","drawLegend","__data__","tweenGrowth","drawEmptySlice","mouse","delay","interpolate","startAngle","endAngle","textHelper","animationDuration","_x","arguments","colorMap","highlightSliceById","_flag","apply"],"mappings":"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TC,KAAMC,YACNC,UAAWC,iBACXC,WAAYC,mBAGHC,EAAiB,CAC1B,CACIC,SAAU,EACVC,WAAY,MAIPC,EAAgB,CACzBC,gBAAiBA,kBACjBC,eAAgBA,iBAChBC,WAAYA,aACZC,UAAWA,YACXC,WAAYA,aACZC,UAAWA,YACXC,SAAUA,WACVC,QAASA,UACTC,QAASA,UACTC,OAAQA,SACRC,SAAUA,WACVC,QAASA,UACTC,WAAYA,aACZC,UAAWA,YACXC,WAAYA,aACZC,UAAWA,YACXC,YAAaA,cACbC,WAAYA,aACZC,cAAeA,gBACfC,aAAcA,eACdC,aAAcA,eACdC,YAAaA,cACbC,WAAYA,aACZC,UAAWA,YACXC,aAAcA,eACdC,YAAaA,cACbC,UAAWA,YACXC,SAAUA,WACVC,SAAUA,WACVC,QAASA,Y,cC5IbrH,EAAOD,QAAUW,G,6BCAjB,oyBACO,IAAM4G,EAAiB,CAC1BC,UAAW,CAAC,UAAW,WACvBC,WAAY,CAAC,UAAW,WACxBC,WAAY,CAAC,UAAW,YAEfC,EAAsB,CAC/BH,UAAW,gBACXC,WAAY,iBACZC,WAAY,kBAKHE,EAAc,CACvB,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAO,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAS,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAY,CACrB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAO,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAQ,CACjB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAS,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAO,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAS,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAM,CACf,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAe,CACxBV,cACAC,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vBJ,EAAMU,OAAQL,GAAU,EAAK,IAC7BL,EAAMU,OAAQL,GAAU,EAAK,IAC7B,KAEoB,GAAXC,IACVD,EAASH,EAAMO,WAAWD,GAC1BD,GACCP,EAAMU,OAAOL,GAAU,GACvBL,EAAMU,OAAQL,GAAU,EAAK,IAC7B,MAIKE,GAKP,OAnGY,SAASL,GAGrB,IAAIlG,GAFJkG,EAAQhC,OAAOgC,GACbjD,QAAQgD,EAAwB,KACfjG,OACfA,EAAS,GAAK,IAEjBA,GADAkG,EAAQA,EAAMjD,QAAQ,OAAQ,KACfjD,SAGfA,EAAS,GAAK,GAEd,iBAAiBQ,KAAK0F,KAEtBnE,EACC,yEAQF,IALA,IACI4E,EACAN,EAFAO,EAAa,EAGbL,EAAS,GACTC,GAAY,IACPA,EAAWxG,GACnBqG,EAASL,EAAMa,QAAQX,EAAMQ,OAAOF,IACpCG,EAAaC,EAAa,EAAiB,GAAbD,EAAkBN,EAASA,EAErDO,IAAe,IAElBL,GAAUrC,OAAOC,aAChB,IAAOwC,KAAgB,EAAIC,EAAa,KAI3C,OAAOL,GAmEP,QAAW,cAYV,KAFD,aACC,OAAOxF,GACP,8BAtJF,K,yCCDD3K,EAAOD,QAAW,WACd,aAGA,IAAM2Q,EAAc,CAChBC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,SAAS,EACTC,UAAU,EACVC,OAAO,EACPC,QAAQ,EACRC,OAAO,EACPC,OAAO,GAKLC,EAAW,CACb,IACA,OACA,UACA,OACA,UACA,QACA,QACA,IACA,OACA,MACA,MACA,aACA,OACA,KACA,SACA,SACA,UACA,SACA,OACA,OACA,MACA,WACA,UACA,WACA,KACA,MACA,UACA,MACA,MACA,KACA,KACA,KACA,QACA,WACA,aACA,SACA,OACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,SACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,MACA,OACA,OACA,OACA,OACA,QACA,MACA,OACA,WACA,SACA,KACA,SACA,WACA,SACA,IACA,QACA,MACA,WACA,IACA,KACA,KACA,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","file":"donut.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3-time\"), require(\"d3-shape\"), require(\"d3-selection\"), require(\"d3-format\"), require(\"d3-array\"), require(\"d3-scale\"), require(\"d3-ease\"), require(\"d3-transition\"), require(\"d3-dispatch\"), require(\"d3-interpolate\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3-time\", \"d3-shape\", \"d3-selection\", \"d3-format\", \"d3-array\", \"d3-scale\", \"d3-ease\", \"d3-transition\", \"d3-dispatch\", \"d3-interpolate\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"donut\"] = factory(require(\"d3-time\"), require(\"d3-shape\"), require(\"d3-selection\"), require(\"d3-format\"), require(\"d3-array\"), require(\"d3-scale\"), require(\"d3-ease\"), require(\"d3-transition\"), require(\"d3-dispatch\"), require(\"d3-interpolate\"));\n\telse\n\t\troot[\"core\"] = root[\"core\"] || {}, root[\"core\"][\"donut\"] = factory(root[\"d3-time\"], root[\"d3-shape\"], root[\"d3-selection\"], root[\"d3-format\"], root[\"d3-array\"], root[\"d3-scale\"], root[\"d3-ease\"], root[\"d3-transition\"], root[\"d3-dispatch\"], root[\"d3-interpolate\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__16__, __WEBPACK_EXTERNAL_MODULE__22__, __WEBPACK_EXTERNAL_MODULE__23__, __WEBPACK_EXTERNAL_MODULE__31__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 51);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","import {\n    curveLinear,\n    curveBasis,\n    curveCardinal,\n    curveCatmullRom,\n    curveMonotoneX,\n    curveMonotoneY,\n    curveNatural,\n    curveStep,\n    curveStepAfter,\n    curveStepBefore,\n} from 'd3-shape';\nimport {\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeDay,\n    utcDay,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n} from 'd3-time';\n\nexport const axisTimeCombinations = {\n    MINUTE_HOUR: 'minute-hour',\n    HOUR_DAY: 'hour-daymonth',\n    DAY_MONTH: 'day-month',\n    MONTH_YEAR: 'month-year',\n    CUSTOM: 'custom',\n};\n\nexport const timeBenchmarks = {\n    ONE_AND_A_HALF_YEARS: 47304000000,\n    ONE_YEAR: 31536000365,\n    ONE_DAY: 86400001,\n};\n\nexport const hoursHuman = [\n    '00h',\n    '01h',\n    '02h',\n    '03h',\n    '04h',\n    '05h',\n    '06h',\n    '07h',\n    '08h',\n    '09h',\n    '10h',\n    '11h',\n    '12h',\n    '13h',\n    '14h',\n    '15h',\n    '16h',\n    '17h',\n    '18h',\n    '19h',\n    '20h',\n    '21h',\n    '22h',\n    '23h',\n];\n\nexport const motion = {\n    duration: 1200,\n};\n\nexport const curveMap = {\n    linear: curveLinear,\n    basis: curveBasis,\n    cardinal: curveCardinal,\n    catmullRom: curveCatmullRom,\n    monotoneX: curveMonotoneX,\n    monotoneY: curveMonotoneY,\n    natural: curveNatural,\n    step: curveStep,\n    stepAfter: curveStepAfter,\n    stepBefore: curveStepBefore,\n};\n\nexport const emptyDonutData = [\n    {\n        quantity: 1,\n        percentage: 100,\n    },\n];\n\nexport const timeIntervals = {\n    timeMillisecond: timeMillisecond,\n    utcMillisecond: utcMillisecond,\n    timeSecond: timeSecond,\n    utcSecond: utcSecond,\n    timeMinute: timeMinute,\n    utcMinute: utcMinute,\n    timeHour: timeHour,\n    utcHour: utcHour,\n    timeDay: timeDay,\n    utcDay: utcDay,\n    timeWeek: timeWeek,\n    utcWeek: utcWeek,\n    timeSunday: timeSunday,\n    utcSunday: utcSunday,\n    timeMonday: timeMonday,\n    utcMonday: utcMonday,\n    timeTuesday: timeTuesday,\n    utcTuesday: utcTuesday,\n    timeWednesday: timeWednesday,\n    utcWednesday: utcWednesday,\n    timeThursday: timeThursday,\n    utcThursday: utcThursday,\n    timeFriday: timeFriday,\n    utcFriday: utcFriday,\n    timeSaturday: timeSaturday,\n    utcSaturday: utcSaturday,\n    timeMonth: timeMonth,\n    utcMonth: utcMonth,\n    timeYear: timeYear,\n    utcYear: utcYear,\n};\n\nexport default {\n    axisTimeCombinations,\n    curveMap,\n    emptyDonutData,\n    timeBenchmarks,\n    lineGradientId: 'lineGradientId',\n    timeIntervals,\n    hoursHuman,\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","// Color Gradients\nexport const colorGradients = {\n    greenBlue: ['#39C7EA', '#4CDCBA'],\n    orangePink: ['#FBC670', '#F766B8'],\n    bluePurple: ['#3DC3C9', '#824a9e'],\n};\nexport const colorGradientsHuman = {\n    greenBlue: 'Green to Blue',\n    orangePink: 'Orange to Pink',\n    bluePurple: 'Blue to Purple',\n};\n\n// Color Schemas\n// Standard Color Schema for Britecharts\nexport const britecharts = [\n    '#6aedc7', //green\n    '#39c2c9', //blue\n    '#ffce00', //yellow\n    '#ffa71a', //orange\n    '#f866b9', //pink\n    '#998ce3', //purple\n];\n// Grey Palette\nexport const grey = [\n    '#F8F8FA',\n    '#EFF2F5',\n    '#D2D6DF',\n    '#C3C6CF',\n    '#ADB0B6',\n    '#666A73',\n    '#45494E',\n    '#363A43',\n    '#282C35',\n];\n// Orange Palette\nexport const orange = [\n    '#fcc870',\n    '#ffa71a',\n    '#fb8825',\n    '#f6682f',\n    '#db5a2c',\n    '#bf4c28',\n    '#a43b1c',\n    '#892a10',\n    '#f9e9c5',\n];\n// Blue Palette\nexport const blueGreen = [\n    '#ccf7f6',\n    '#70e4e0',\n    '#00d8d2',\n    '#00acaf',\n    '#007f8c',\n    '#005e66',\n    '#003c3f',\n    '#002d2f',\n    '#0d2223',\n];\n// LightBlue Palette\nexport const teal = [\n    '#ccfffe',\n    '#94f7f4',\n    '#00fff8',\n    '#1de1e1',\n    '#39c2c9',\n    '#2e9a9d',\n    '#227270',\n    '#1a5957',\n    '#133f3e',\n];\n// Green Palette\nexport const green = [\n    '#edfff7',\n    '#d7ffef',\n    '#c0ffe7',\n    '#95f5d7',\n    '#6aedc7',\n    '#59c3a3',\n    '#479980',\n    '#34816a',\n    '#206953',\n];\n// Yellow Palette\nexport const yellow = [\n    '#f9f2b3',\n    '#fbe986',\n    '#fce05a',\n    '#fed72d',\n    '#ffce00',\n    '#fcc11c',\n    '#f9b438',\n    '#eda629',\n    '#e09819',\n];\n// Pink Palette\nexport const pink = [\n    '#fdd1ea',\n    '#fb9cd2',\n    '#f866b9',\n    '#fc40b6',\n    '#ff1ab3',\n    '#e3239d',\n    '#c62c86',\n    '#a62073',\n    '#85135f',\n];\n// Purple Palette\nexport const purple = [\n    '#ddd6fc',\n    '#bbb1f0',\n    '#998ce3',\n    '#8e6bc1',\n    '#824a9e',\n    '#77337f',\n    '#6b1c60',\n    '#591650',\n    '#470f3f',\n];\n// Red Palette\nexport const red = [\n    '#ffd8d4',\n    '#ffb5b0',\n    '#ff938c',\n    '#ff766c',\n    '#ff584c',\n    '#f04b42',\n    '#e03d38',\n    '#be2e29',\n    '#9c1e19',\n];\n\nexport const colorSchemas = {\n    britecharts,\n    grey,\n    orange,\n    blueGreen,\n    teal,\n    green,\n    yellow,\n    pink,\n    purple,\n    red,\n};\nexport const colorSchemasHuman = {\n    britecharts: 'Britecharts Default',\n    grey: 'Britecharts Grey',\n    orange: 'Orange',\n    blueGreen: 'Blue',\n    teal: 'Light Blue',\n    green: 'Green',\n    yellow: 'Yellow',\n    pink: 'Pink',\n    purple: 'Purple',\n    red: 'Red',\n};\n\n// Single Colors\nexport const aloeGreen = ['#7bdcc0']; // To Deprecate\nexport const greenColor = ['#6aedc7'];\nexport const blueColor = ['#39c2c9'];\nexport const yellowColor = ['#ffce00'];\nexport const orangeColor = ['#ffa71a'];\nconst pinkColor = ['#f866b9'];\nconst purpleColor = ['#998ce3'];\n\nconst singleColors = {\n    aloeGreen,\n    greenColor,\n    blueColor,\n    yellowColor,\n    orangeColor,\n    pinkColor,\n    purpleColor,\n};\nconst singleColorsHuman = {\n    aloeGreen: 'Aloe Green',\n    greenColor: 'Green',\n    blueColor: 'Blue',\n    yellowColor: 'Yellow',\n    orangeColor: 'Orange',\n    pinkColor: 'Pink',\n    purpleColor: 'Purple',\n};\n\nexport default {\n    colorSchemas,\n    colorSchemasHuman,\n    colorGradients,\n    colorGradientsHuman,\n    singleColors,\n    singleColorsHuman,\n};\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","module.exports = __WEBPACK_EXTERNAL_MODULE__16__;","import base64 from 'base-64';\n\nimport { colorSchemas } from './color';\nimport serializeWithStyles from './style';\n\nconst isBrowser = typeof window !== 'undefined';\nconst isIE = navigator.msSaveOrOpenBlob;\nconst IE_ERROR_MSG =\n    'Sorry, this feature is not available for IE. If you require this to work, check this issue https://github.com/eventbrite/britecharts/pull/652';\nconst DEFAULT_FONT_STACK = '‘Helvetica Neue’, Helvetica, Arial, sans-serif';\n\nlet encoder = isBrowser && window.btoa;\n\nif (!encoder) {\n    encoder = base64.encode;\n}\n\n// Base64 doesn't work really well with Unicode strings, so we need to use this function\n// Ref: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\nconst b64EncodeUnicode = (str) => {\n    return encoder(\n        encodeURIComponent(str).replace(\n            /%([0-9A-F]{2})/g,\n            function (match, p1) {\n                return String.fromCharCode('0x' + p1);\n            }\n        )\n    );\n};\n\nconst config = {\n    styleClass: 'britechartStyle',\n    defaultFilename: 'britechart.png',\n    chartBackground: 'white',\n    imageSourceBase: 'data:image/svg+xml;base64,',\n    titleFontSize: '15px',\n    // eslint-disable-next-line quotes\n    titleFontFamily: DEFAULT_FONT_STACK,\n    titleTopOffset: 15,\n    get styleBackgroundString() {\n        return `<style>svg{background:${this.chartBackground};}</style>`;\n    },\n};\n\n/**\n * Main function to be used as a method by chart instances to export charts to png\n * @param  {array} svgs         (or an svg element) pass in both chart & legend as array or just chart as svg or in array\n * @param  {string} filename    [download to be called <filename>.png]\n * @param  {string} title       Title for the image\n * @private\n */\nexport function exportChart(d3svg, filename, title) {\n    if (isIE) {\n        // eslint-disable-next-line no-console\n        console.error(IE_ERROR_MSG);\n\n        return false;\n    }\n\n    return loadImage(convertSvgToHtml.call(this, d3svg, title))\n        .then((img) => {\n            return {\n                canvas: createCanvas(this.width(), this.height()),\n                img,\n            };\n        })\n        .then(({ canvas, img }) => handleImageLoad.call(img, canvas, filename));\n}\n\n/**\n * adds background styles to raw html\n * @param {string} html raw html\n * @private\n */\nfunction addBackground(html) {\n    return html.replace('>', `>${config.styleBackgroundString}`);\n}\n\n/**\n * Takes the D3 SVG element, adds proper SVG tags, adds inline styles\n * from stylesheets, adds white background and returns string\n * @param  {SVGElement} d3svg   TYPE d3 svg element\n * @return {String}             String of passed d3\n * @private\n */\nexport function convertSvgToHtml(d3svg, title) {\n    if (!d3svg) {\n        return;\n    }\n\n    d3svg.attr('version', 1.1).attr('xmlns', 'http://www.w3.org/2000/svg');\n    let serializer = serializeWithStyles.initializeSerializer();\n    let html = serializer(d3svg.node());\n\n    html = formatHtmlByBrowser(html);\n    html = prependTitle.call(\n        this,\n        html,\n        title,\n        parseInt(d3svg.attr('width'), 10)\n    );\n    html = addBackground(html);\n\n    return html;\n}\n\n/**\n * Create Canvas\n * @param  {number} width\n * @param  {number} height\n * @return {object} TYPE canvas element\n * @private\n */\nfunction createCanvas(width, height) {\n    let canvas = document.createElement('canvas');\n\n    canvas.height = height;\n    canvas.width = width;\n\n    return canvas;\n}\n\n/**\n * Create Image\n * @param  {string} svgHtml string representation of svg el\n * @param  {Function} callback function to prepare image for loading\n * @return {object}  TYPE element <img>, src points at svg\n * @private\n */\nfunction createImage(svgHtml, callback) {\n    let img = new Image();\n\n    if (callback) {\n        if (typeof callback !== 'function') {\n            throw new Error(\n                `The callback provided should be a function, we got a ${typeof callback} instead.`\n            );\n        }\n        callback(img);\n    }\n    img.src = `${config.imageSourceBase}${b64EncodeUnicode(svgHtml)}`;\n\n    return img;\n}\n\n/**\n * Draws image on canvas\n * @param  {object} image TYPE:el <img>, to be drawn\n * @param  {object} canvas TYPE: el <canvas>, to draw on\n * @private\n */\nexport function drawImageOnCanvas(image, canvas) {\n    canvas.getContext('2d').drawImage(image, 0, 0);\n\n    return canvas;\n}\n\n/**\n * Triggers browser to download image, convert canvas to url,\n * we need to append the link el to the dom before clicking it for Firefox to register\n * point <a> at it and trigger click\n * @param  {object} canvas TYPE: el <canvas>\n * @param  {string} filename\n * @param  {string} extensionType\n * @private\n */\nfunction downloadCanvas(\n    canvas,\n    filename = config.defaultFilename,\n    extensionType = 'image/png'\n) {\n    let url = canvas.toDataURL(extensionType);\n    let link = document.createElement('a');\n\n    link.href = url;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n}\n\n/**\n * Some browsers need special formatting, we handle that here\n * @param  {string} html string of svg html\n * @return {string} string of svg html\n * @private\n */\nfunction formatHtmlByBrowser(html) {\n    if (navigator.userAgent.search('FireFox') > -1) {\n        return html.replace(\n            /url.*&quot;\\)/,\n            'url(&quot;linearGradient[id*=\"-gradient-\"]&quot;);'\n        );\n    }\n\n    return html;\n}\n\n/**\n * Handles on load event fired by img.onload, this=img\n * @param  {object} canvas TYPE: el <canvas>\n * @param  {string} filename\n * @private\n */\nfunction handleImageLoad(canvas, filename) {\n    downloadCanvas(drawImageOnCanvas(this, canvas), filename);\n}\n\n/**\n * Create Image instance and attach event listeners for future promise\n * @param  {string} svgHtml string representation of svg el\n * @returns {Promise} promise that exposes loaded image instance\n * @private\n */\nfunction loadImage(svgHtml) {\n    return new Promise((res, rej) => {\n        createImage(svgHtml, (img) => {\n            img.addEventListener('load', () => res(img));\n            img.addEventListener('error', (err) => rej(err));\n        });\n    });\n}\n\n/**\n * if passed, append title to the raw html to appear on graph\n * @param  {string} html     raw html string\n * @param  {string} title    title of the graph\n * @param  {number} svgWidth width of graph container\n * @return {string}         raw html with title prepended\n * @private\n */\nfunction prependTitle(html, title, svgWidth) {\n    if (!title || !svgWidth) {\n        return html;\n    }\n    let { grey } = colorSchemas;\n\n    html = html.replace(\n        /<g/,\n        `<text x=\"${this.margin().left}\" y=\"${\n            config.titleTopOffset\n        }\" font-family=\"${config.titleFontFamily}\" font-size=\"${\n            config.titleFontSize\n        }\" fill=\"${grey[6]}\"> ${title} </text><g `\n    );\n\n    return html;\n}\n\nexport default {\n    exportChart,\n    convertSvgToHtml,\n    createImage,\n    drawImageOnCanvas,\n    loadImage,\n};\n","/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '0.1.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n","module.exports = (function () {\n    'use strict';\n\n    // Styles inherited from style sheets will not be rendered for elements with these tag names\n    const noStyleTags = {\n        BASE: true,\n        HEAD: true,\n        HTML: true,\n        META: true,\n        NOFRAME: true,\n        NOSCRIPT: true,\n        PARAM: true,\n        SCRIPT: true,\n        STYLE: true,\n        TITLE: true,\n    };\n\n    // This list determines which css default values lookup tables are precomputed at load time\n    // Lookup tables for other tag names will be automatically built at runtime if needed\n    const tagNames = [\n        'A',\n        'ABBR',\n        'ADDRESS',\n        'AREA',\n        'ARTICLE',\n        'ASIDE',\n        'AUDIO',\n        'B',\n        'BASE',\n        'BDI',\n        'BDO',\n        'BLOCKQUOTE',\n        'BODY',\n        'BR',\n        'BUTTON',\n        'CANVAS',\n        'CAPTION',\n        'CENTER',\n        'CITE',\n        'CODE',\n        'COL',\n        'COLGROUP',\n        'COMMAND',\n        'DATALIST',\n        'DD',\n        'DEL',\n        'DETAILS',\n        'DFN',\n        'DIV',\n        'DL',\n        'DT',\n        'EM',\n        'EMBED',\n        'FIELDSET',\n        'FIGCAPTION',\n        'FIGURE',\n        'FONT',\n        'FOOTER',\n        'FORM',\n        'H1',\n        'H2',\n        'H3',\n        'H4',\n        'H5',\n        'H6',\n        'HEAD',\n        'HEADER',\n        'HGROUP',\n        'HR',\n        'HTML',\n        'I',\n        'IFRAME',\n        'IMG',\n        'INPUT',\n        'INS',\n        'KBD',\n        'LABEL',\n        'LEGEND',\n        'LI',\n        'LINK',\n        'MAP',\n        'MARK',\n        'MATH',\n        'MENU',\n        'META',\n        'METER',\n        'NAV',\n        'NOBR',\n        'NOSCRIPT',\n        'OBJECT',\n        'OL',\n        'OPTION',\n        'OPTGROUP',\n        'OUTPUT',\n        'P',\n        'PARAM',\n        'PRE',\n        'PROGRESS',\n        'Q',\n        'RP',\n        'RT',\n        'RUBY',\n        'S',\n        'SAMP',\n        'SCRIPT',\n        'SECTION',\n        'SELECT',\n        'SMALL',\n        'SOURCE',\n        'SPAN',\n        'STRONG',\n        'STYLE',\n        'SUB',\n        'SUMMARY',\n        'SUP',\n        'SVG',\n        'TABLE',\n        'TBODY',\n        'TD',\n        'TEXTAREA',\n        'TFOOT',\n        'TH',\n        'THEAD',\n        'TIME',\n        'TITLE',\n        'TR',\n        'TRACK',\n        'U',\n        'UL',\n        'VAR',\n        'VIDEO',\n        'WBR',\n    ];\n\n    /**\n     * Extracts the styles of elements of the given tag name\n     * @param {String} tagName  Tag name that we will check for styles\n     * @return {Object}         Values of the styles applied to the given element\n     * @private\n     */\n    const computeDefaultStyleByTagName = (tagName) => {\n        let defaultStyle = {},\n            element = document.body.appendChild(\n                document.createElement(tagName)\n            ),\n            computedStyle = window.getComputedStyle(element);\n\n        [].forEach.call(computedStyle, (style) => {\n            defaultStyle[style] = computedStyle[style];\n        });\n        document.body.removeChild(element);\n\n        return defaultStyle;\n    };\n\n    /**\n     * Returns a serializer function, only run it when you know you want to serialize your chart\n     * @return {func} serializer to add styles in line to dom string\n     * @private\n     */\n    const initializeSerializer = () => {\n        // Mapping between tag names and css default values lookup tables. This allows to exclude default values in the result.\n        const defaultStylesByTagName = {};\n\n        // Precompute the lookup tables.\n        [].forEach.call(tagNames, (name) => {\n            if (!noStyleTags[name]) {\n                defaultStylesByTagName[name] =\n                    computeDefaultStyleByTagName(name);\n            }\n        });\n\n        function getDefaultStyleByTagName(tagName) {\n            tagName = tagName.toUpperCase();\n\n            if (!defaultStylesByTagName[tagName]) {\n                defaultStylesByTagName[tagName] =\n                    computeDefaultStyleByTagName(tagName);\n            }\n\n            return defaultStylesByTagName[tagName];\n        }\n\n        function serializeWithStyles(elem) {\n            let cssTexts = [],\n                elements,\n                computedStyle,\n                defaultStyle,\n                result;\n\n            if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n                // 'Error: Object passed in to serializeWithSyles not of nodeType Node.ELEMENT_NODE'\n\n                return;\n            }\n\n            cssTexts = [];\n            elements = elem.querySelectorAll('*');\n\n            [].forEach.call(elements, (el, i) => {\n                if (!noStyleTags[el.tagName]) {\n                    computedStyle = window.getComputedStyle(el);\n                    defaultStyle = getDefaultStyleByTagName(el.tagName);\n                    cssTexts[i] = el.style.cssText;\n                    [].forEach.call(computedStyle, (cssPropName) => {\n                        if (\n                            computedStyle[cssPropName] !==\n                            defaultStyle[cssPropName]\n                        ) {\n                            el.style[cssPropName] = computedStyle[cssPropName];\n                        }\n                    });\n                }\n            });\n\n            result = elem.outerHTML;\n            elements = [].map.call(elements, (el, i) => {\n                el.style.cssText = cssTexts[i];\n\n                return el;\n            });\n\n            return result;\n        }\n\n        return serializeWithStyles;\n    };\n\n    return {\n        initializeSerializer,\n    };\n})();\n","import { format } from 'd3-format';\nimport { max, min } from 'd3-array';\n\nlet idCounter = 0;\n\nconst integerValueFormats = {\n    small: {\n        limit: 10,\n        format: format(''),\n    },\n    medium: {\n        limit: 1000,\n        format: format(''),\n    },\n    large: {\n        limit: null,\n        format: format('.2s'),\n    },\n};\n\nconst decimalValueFormats = {\n    small: {\n        limit: 10,\n        format: format('.3f'),\n    },\n    medium: {\n        limit: 100,\n        format: format('.1f'),\n    },\n    large: {\n        limit: null,\n        format: format('.2s'),\n    },\n};\n\n/**\n * Return a relative size for the value given, based in our decimal or integer tables\n * @param {Number} value    Value to assess its relative size\n * @param {Object} limits   Object stablishing the limits and formats\n * to consider the value of a given size\n * @private\n */\nconst getValueSize = (value, limits) => {\n    let size = 'large';\n\n    if (value < limits.small.limit) {\n        size = 'small';\n    } else if (value < limits.medium.limit) {\n        size = 'medium';\n    }\n\n    return size;\n};\n\n/**\n * Returns an object that contains necessary coordinates for drawing the trendline. The\n * calculation of slope and y-intercept uses basic accumulative linear regression formula.\n * @param  {Object[]} dataPoints    Array of circle data points\n * @return {Object}\n * @private\n */\nexport const calcLinearRegression = (dataPoints) => {\n    let n = dataPoints.length,\n        x = 0,\n        y = 0,\n        xy = 0,\n        x2 = 0;\n\n    dataPoints.forEach((d) => {\n        x += d.x;\n        y += d.y;\n        xy += d.x * d.y;\n        x2 += d.x * d.x;\n    });\n\n    const denominator = n * x2 - x * x;\n    const intercept = (y * x2 - x * xy) / denominator;\n    const slope = (n * xy - x * y) / denominator;\n    const minX = min(dataPoints, ({ x }) => x);\n    const maxX = max(dataPoints, ({ x }) => x);\n\n    return {\n        x1: minX,\n        y1: slope * n + intercept,\n        x2: maxX,\n        y2: slope * maxX + intercept,\n    };\n};\n\n/**\n * Calculates percentage of value from total\n * @param  {Number}  value    Value to check\n * @param  {Number}  total    Sum of values\n * @param  {String}  decimals Specifies number of decimals https://github.com/d3/d3-format\n * @return {String}           Percentage\n * @private\n */\nexport const calculatePercent = (value, total, decimals) => {\n    const percent = total ? (value / total) * 100 : 0;\n\n    return format(decimals)(percent);\n};\n\n/**\n * Checks if a number is an integer or a decimal value\n * @param  {Number}  value Value to check\n * @return {Boolean}       If it is an iteger\n * @private\n */\nexport const isInteger = (value) => {\n    return value % 1 === 0;\n};\n\n/**\n * Formats a floating point value depending on its value range\n * @param  {Number} value Decimal point value to format\n * @return {Number}       Formatted value to show\n * @private\n */\nexport const formatDecimalValue = (value) => {\n    let size = getValueSize(value, decimalValueFormats);\n    let format = decimalValueFormats[size].format;\n\n    return format(value);\n};\n\n/**\n * Formats an integer value depending on its value range\n * @param  {Number} value Decimal point value to format\n * @return {Number}       Formatted value to show\n * @private\n */\nexport const formatIntegerValue = (value) => {\n    let size = getValueSize(value, integerValueFormats);\n    let format = integerValueFormats[size].format;\n\n    return format(value);\n};\n\n/**\n * Generates a unique id with a prefix\n * @param  {String} prefix   Prefix to add before the id\n * @return {String}          Unique id\n * @private\n */\nexport const uniqueId = (prefix) => {\n    const id = ++idCounter;\n\n    return `${prefix.toString()}-${id}`;\n};\n\nexport default {\n    calculatePercent,\n    isInteger,\n    formatDecimalValue,\n    formatIntegerValue,\n    uniqueId,\n    calcLinearRegression,\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__22__;","module.exports = __WEBPACK_EXTERNAL_MODULE__23__;","export const linearGradient = `\n        <defs>\n            <linearGradient id=\"lgrad\" x1=\"0%\" y1=\"50%\" x2=\"100%\" y2=\"50%\" >\n                <stop offset=\"0\" stop-color=\"#ffffff\" stop-opacity=\"0.8\" />\n                <stop offset=\"33.33%\" stop-color=\"#ffffff\" stop-opacity=\"0.8\" />\n                <stop offset=\"50%\" stop-color=\"#ffffff\" stop-opacity=\"0\" />\n                <stop offset=\"66.66%\" stop-color=\"#ffffff\" stop-opacity=\"0.8\" />\n                <stop offset=\"100%\" stop-color=\"#ffffff\" stop-opacity=\"0.8\" />\n            </linearGradient>\n        </defs>\n    `;\n\nexport const barLoadingMarkup = `\n        <svg class=\"load-state bar-load-state\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 711 325\">\n            ${linearGradient}\n            <g fill=\"none\" fill-rule=\"evenodd\">\n                <g transform=\"translate(-15 29)\">\n                    <g stroke=\"#EFF2F5\" stroke-dasharray=\"4 4\">\n                        <path d=\"M.400592911 200.302477L710.674315 200.302477M.400592884 131.172748L710.674315 131.172748M.324410282 64.2071321L710.621499 64.2071321M.291004517.563888874L709.82431.563888889\"/>\n                    </g>\n                    <g fill=\"#D2D6DF\" transform=\"translate(63.08 11)\">\n                        <polygon points=\"-.08 176 23.92 176 23.92 255 -.08 255\"/>\n                        <polygon points=\"50.829 147 74.829 147 74.829 255 50.829 255\"/>\n                        <polygon points=\"254.465 0 278.465 0 278.465 255 254.465 255\"/>\n                        <polygon points=\"458.102 169 482.102 169 482.102 255 458.102 255\"/>\n                        <polygon points=\"152.647 82 176.647 82 176.647 255 152.647 255\"/>\n                        <polygon points=\"356.283 66 380.283 66 380.283 255 356.283 255\"/>\n                        <polygon points=\"559.92 229 583.92 229 583.92 255 559.92 255\"/>\n                        <polygon points=\"101.738 115 125.738 115 125.738 255 101.738 255\"/>\n                        <polygon points=\"305.374 42 329.374 42 329.374 255 305.374 255\"/>\n                        <polygon points=\"509.011 201 533.011 201 533.011 255 509.011 255\"/>\n                        <polygon points=\"203.556 19 227.556 19 227.556 255 203.556 255\"/>\n                        <polygon points=\"407.192 115 431.192 115 431.192 255 407.192 255\"/>\n                    </g>\n                </g>\n                <polygon fill=\"#D2D6DF\" fill-rule=\"nonzero\" points=\"0 295 711 295 711 294 0 294\"/>\n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport const donutLoadingMarkup = `\n        <svg class=\"load-state donut-load-state\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 376 331\">\n            ${linearGradient}\n            <g fill=\"none\" fill-rule=\"evenodd\">\n                <g transform=\"translate(116 107)\">\n                    <circle cx=\"72\" cy=\"72\" r=\"72\" stroke=\"#EFF2F5\" stroke-linecap=\"round\" stroke-width=\"9.6\"/>\n                    <path stroke=\"#D2D6DF\" stroke-width=\"19.2\" d=\"M126.153559,119.524055 C137.264629,106.845712 144,90.2321371 144,72.0444604 C144,32.2554036 111.764502,0 72,0\"/>\n                    <circle cx=\"72\" cy=\"72\" r=\"67.2\" fill=\"#FFF\"/>\n                </g>\n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport const lineLoadingMarkup = `\n        <svg\n            class=\"load-state line-load-state\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 711 325\"\n        >\n            ${linearGradient}\n            <g transform=\"translate(-10 -10)\">\n                <path\n                    id=\"chart-bg\"\n                    class=\"chart-bg\"\n                    style=\"stroke:#C3C6CF;\"\n                    d=\"M3.4,216.5h707.3 M3.4,160.5h707.3 M3.3,103.5h707.3 M3.3,48.5h707.6 M0.4,276.6H710H0.4z\"\n                />\n                <polyline\n                    id=\"chart-line\"\n                    class=\"chart-line\"\n                    style=\"stroke:#C3C6CF;stroke-width:4;fill:none;\"\n                    points=\"8.8,175.8 62.4,237.7 116.1,184.7 169.7,175.8 223.3,57 277,176.8 330.6,176.8 384.3,122.5 437.9,176.8 491.6,176.8 545.2,218.4 598.8,122.5 652.5,184.7 706.1,135.1 \"\n                />\n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport const stackedAreaLoadingMarkup = `\n        <svg\n            class=\"load-state stacked-area-load-state\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 711 325\"\n        >\n            ${linearGradient}\n            <path\n                id=\"chart-bg\"\n                class=\"chart-bg\"\n                style=\"stroke:#C3C6CF;\"\n                d=\"M3.4,216.5h707.3 M3.4,160.5h707.3 M3.3,103.5h707.3 M3.3,48.5h707.6 M0.4,276.6H710H0.4z\"\n            />\n            <g transform=\"translate(20 53)\">\n                <path\n                    id=\"chart-area\"\n                    strokeLinecap=\"square\"\n                    d=\"M0.34233103,0.593688165 L709.977885,0.593688189\"\n                    transform=\"translate(.01 227.976)\"\n                />\n                <path fill=\"#C3C6CF\" d=\"M0.528124801,224.014648 L0.528124801,177.734375 L53.3834796,177.734375 C71.5390789,177.734375 86.8277373,168.972754 101.240241,151.662202 C112.578335,138.044258 121.139826,123.110227 136.974507,91.596773 C137.343842,90.8617404 139.300293,86.9654028 139.856735,85.8583549 C155.041692,55.6476711 163.354313,41.0906306 174.319873,27.7179171 C188.951312,9.87459412 204.885845,0.5 223.830634,0.5 C242.123071,0.5 257.291724,8.27027858 270.907992,23.1359289 C281.228683,34.4036118 289.135925,47.1272372 302.542017,72.085092 C303.275893,73.4513345 306.289669,79.0766612 307.063369,80.5168656 C321.41025,107.222876 330.088083,120.97663 341.470704,132.92446 C355.88994,148.05969 371.908861,155.792969 391.654853,155.792969 C412.142049,155.792969 428.763593,152.325614 442.880698,145.765582 C454.197328,140.506893 463.373931,133.679865 473.786035,123.626931 C476.528659,120.978915 486.44777,110.911455 488.791866,108.6483 C502.907223,95.0203436 514.194325,88.9355469 530.135322,88.9355469 C546.532652,88.9355469 559.505909,97.338499 575.973261,115.41103 C579.723508,119.526837 593.103621,135.086814 592.915496,134.871799 C605.09738,148.794859 614.368835,157.635549 625.072091,164.58539 C638.386599,173.230769 652.701021,177.734375 669.279853,177.734375 L673.779853,177.734375 L673.779853,224.014648 L0.528124801,224.014648 Z\" />\n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport const sparkLineLoadingMarkup = `\n        <svg\n            class=\"load-state sparkline-load-state\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 711 325\"\n        >\n            ${linearGradient}\n            <g transform=\"translate(0 50)\">\n                <path fill=\"#C3C6CF\" d=\"M0.528124801,224.014648 L0.528124801,177.734375 L53.3834796,177.734375 C71.5390789,177.734375 86.8277373,168.972754 101.240241,151.662202 C112.578335,138.044258 121.139826,123.110227 136.974507,91.596773 C137.343842,90.8617404 139.300293,86.9654028 139.856735,85.8583549 C155.041692,55.6476711 163.354313,41.0906306 174.319873,27.7179171 C188.951312,9.87459412 204.885845,0.5 223.830634,0.5 C242.123071,0.5 257.291724,8.27027858 270.907992,23.1359289 C281.228683,34.4036118 289.135925,47.1272372 302.542017,72.085092 C303.275893,73.4513345 306.289669,79.0766612 307.063369,80.5168656 C321.41025,107.222876 330.088083,120.97663 341.470704,132.92446 C355.88994,148.05969 371.908861,155.792969 391.654853,155.792969 C412.142049,155.792969 428.763593,152.325614 442.880698,145.765582 C454.197328,140.506893 463.373931,133.679865 473.786035,123.626931 C476.528659,120.978915 486.44777,110.911455 488.791866,108.6483 C502.907223,95.0203436 514.194325,88.9355469 530.135322,88.9355469 C546.532652,88.9355469 559.505909,97.338499 575.973261,115.41103 C579.723508,119.526837 593.103621,135.086814 592.915496,134.871799 C605.09738,148.794859 614.368835,157.635549 625.072091,164.58539 C638.386599,173.230769 652.701021,177.734375 669.279853,177.734375 L773.779853,177.734375 L773.77853,204.014648 L0.528124801,204.014648 Z\"/>    \n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport const brushLoadingMarkup = `\n        <svg\n            class=\"load-state brush-load-state\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 711 325\"\n        >\n            ${linearGradient}\n            <g transform=\"translate(0 50)\">\n                <path\n                    id=\"chart-area\"\n                    strokeLinecap=\"square\"\n                    d=\"M0.34233103,0.593688165 L709.977885,0.593688189\"\n                    transform=\"translate(.01 227.976)\"\n                />\n                <path fill=\"#C3C6CF\" d=\"M0.528124801,224.014648 L0.528124801,177.734375 L53.3834796,177.734375 C71.5390789,177.734375 86.8277373,168.972754 101.240241,151.662202 C112.578335,138.044258 121.139826,123.110227 136.974507,91.596773 C137.343842,90.8617404 139.300293,86.9654028 139.856735,85.8583549 C155.041692,55.6476711 163.354313,41.0906306 174.319873,27.7179171 C188.951312,9.87459412 204.885845,0.5 223.830634,0.5 C242.123071,0.5 257.291724,8.27027858 270.907992,23.1359289 C281.228683,34.4036118 289.135925,47.1272372 302.542017,72.085092 C303.275893,73.4513345 306.289669,79.0766612 307.063369,80.5168656 C321.41025,107.222876 330.088083,120.97663 341.470704,132.92446 C355.88994,148.05969 371.908861,155.792969 391.654853,155.792969 C412.142049,155.792969 428.763593,152.325614 442.880698,145.765582 C454.197328,140.506893 463.373931,133.679865 473.786035,123.626931 C476.528659,120.978915 486.44777,110.911455 488.791866,108.6483 C502.907223,95.0203436 514.194325,88.9355469 530.135322,88.9355469 C546.532652,88.9355469 559.505909,97.338499 575.973261,115.41103 C579.723508,119.526837 593.103621,135.086814 592.915496,134.871799 C605.09738,148.794859 614.368835,157.635549 625.072091,164.58539 C638.386599,173.230769 652.701021,177.734375 669.279853,177.734375 L673.779853,177.734375 L673.779853,224.014648 L0.528124801,224.014648 Z\" />\n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport default {\n    linearGradient,\n    barLoadingMarkup,\n    donutLoadingMarkup,\n    lineLoadingMarkup,\n    brushLoadingMarkup,\n    sparkLineLoadingMarkup,\n    stackedAreaLoadingMarkup,\n};\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__31__;","import { select } from 'd3-selection';\n\nconst wrapConfig = {\n    lineHeight: 1.2,\n    smallTextOffset: 10,\n    smallTextLineHeightRatio: 0.9,\n    smallTextRatio: 0.6,\n    valueClassName: 'value',\n    labelClassName: 'label',\n};\n\nconst defaultTextSize = 12;\nconst defaultFontFace = 'Arial';\n\n/**\n * Wraps a selection of text within the available width\n * @param  {Number} xOffset        X axis offset for the text\n * @param  {Number} fontSize       Size of the base font\n * @param  {Number} availableWidth Width of the container where the text needs to wrap on\n * @param  {D3Selection} node      SVG text element that contains the text to wrap\n *\n * REF: http://bl.ocks.org/mbostock/7555321\n * More discussions on https://github.com/mbostock/d3/issues/1642\n * @return {void}\n * @private\n */\nexport const wrapText = function (xOffset, fontSize, availableWidth, node) {\n    let text = select(node),\n        words = text.text().split(/\\s+/).reverse(),\n        word,\n        line = [],\n        lineNumber = 0,\n        smallLineHeight =\n            wrapConfig.lineHeight * wrapConfig.smallTextLineHeightRatio,\n        y = text.attr('y'),\n        dy = parseFloat(text.attr('dy')),\n        smallFontSize = fontSize * wrapConfig.smallTextRatio,\n        tspan = text\n            .text(null)\n            .append('tspan')\n            .attr('x', xOffset)\n            .attr('y', y - 5)\n            .attr('dy', dy + 'em')\n            .classed(wrapConfig.valueClassName, true)\n            .style('font-size', fontSize + 'px');\n\n    tspan.text(words.pop());\n    tspan = text\n        .append('tspan')\n        .classed(wrapConfig.labelClassName, true)\n        .attr('x', xOffset)\n        .attr('y', y + wrapConfig.smallTextOffset)\n        .attr('dy', ++lineNumber * smallLineHeight + dy + 'em')\n        .style('font-size', smallFontSize + 'px');\n\n    while ((word = words.pop())) {\n        line.push(word);\n        tspan.text(line.join(' '));\n        if (\n            tspan.node() &&\n            tspan.node().getComputedTextLength() > availableWidth - 50\n        ) {\n            line.pop();\n            tspan.text(line.join(' '));\n            line = [word];\n            tspan = text\n                .append('tspan')\n                .classed(wrapConfig.labelClassName, true)\n                .attr('x', xOffset)\n                .attr('y', y + wrapConfig.smallTextOffset)\n                .attr('dy', ++lineNumber * smallLineHeight + dy + 'em')\n                .text(word)\n                .style('font-size', smallFontSize + 'px');\n        }\n    }\n};\n\n/**\n * Wraps a selection of text within the available width, also adds class .adjust-upwards\n * to configure a y offset for entries with multiple rows\n * @param  {D3Selection} text       D3 text element\n * @param  {Number} width           Width of the container where the text needs to wrap on\n * @param  {Number} [xpos=0]        Number passed to determine the x offset\n * @param  {Number} [limit=2]       Number of lines before an ellipses is added and the rest of the text is cut off\n *\n * REF: http://bl.ocks.org/mbostock/7555321\n * More discussions on https://github.com/mbostock/d3/issues/1642\n * @return {void}\n * @private\n */\nexport const wrapTextWithEllipses = function (\n    text,\n    width,\n    xpos = 0,\n    limit = 2\n) {\n    text.each(function () {\n        let words, word, line, lineNumber, lineHeight, y, dy, tspan;\n\n        text = select(this);\n\n        words = text.text().split(/\\s+/).reverse();\n        line = [];\n        lineNumber = 0;\n        lineHeight = 1.2;\n        y = text.attr('y');\n        dy = parseFloat(text.attr('dy'));\n        tspan = text\n            .text(null)\n            .append('tspan')\n            .attr('x', xpos)\n            .attr('y', y)\n            .attr('dy', dy + 'em');\n\n        while ((word = words.pop())) {\n            line.push(word);\n            tspan.text(line.join(' '));\n\n            if (tspan.node() && tspan.node().getComputedTextLength() > width) {\n                line.pop();\n                tspan.text(line.join(' '));\n\n                if (lineNumber < limit - 1) {\n                    line = [word];\n                    tspan = text\n                        .append('tspan')\n                        .attr('x', xpos)\n                        .attr('y', y)\n                        .attr('dy', ++lineNumber * lineHeight + dy + 'em')\n                        .text(word);\n                    // if we need two lines for the text, move them both up to center them\n                    text.classed('adjust-upwards', true);\n                } else {\n                    line.push('...');\n                    tspan.text(line.join(' '));\n                    break;\n                }\n            }\n        }\n    });\n};\n\n/**\n * Figures out an approximate of the text width by using a canvas element\n * This avoids having to actually render the text to measure it from the DOM itself\n * @param  {String} text                Text to measure\n * @param  {Number} [fontSize=12]       Font size (or default)\n * @param  {String} [fontFace='Arial']  Font family to use in the calculation (or default)\n * @return {String}                     Approximated width of the text\n * @private\n */\nexport const getTextWidth = function (\n    text,\n    fontSize = defaultTextSize,\n    fontFace = defaultFontFace\n) {\n    const a = document.createElement('canvas');\n    const b = a.getContext('2d');\n\n    b.font = fontSize + 'px ' + fontFace;\n\n    return b.measureText(text).width;\n};\n\n/**\n * Gets the font size of the passed node using getComputedStyle\n * or falls back to the default font size\n * @param {HTMLElement} node The node to get the computed font size for\n * @return {number}\n * @private\n */\nexport const getFontSize = function (node) {\n    if (typeof window.getComputedStyle === 'function') {\n        return parseFloat(window.getComputedStyle(node).fontSize);\n    }\n\n    return defaultTextSize;\n};\n\n/**\n * Heuristic which gets the number of lines needed to display the title of the tooltip\n * If shouldShowDateInTitle is set to true, it takes the formatted Date.now() as additional influencer\n * for the approximation of the needed number of lines.\n * @param  {String}  text  Text which shall be tested for the necessary number of lines\n * @param  {Number}  fontSize  Fontsize to use for the heuristic\n * @param  {Number}  maxLength  Maximal length per line\n * @return  {Number}  approximateLineNumber  Approximative number of lines needed to display the title\n * @private\n */\nexport const getApproximateNumberOfLines = function (\n    title,\n    fontSize,\n    maxLength\n) {\n    const words = title.split(/\\s+/).reverse();\n    let line = [],\n        approximateLineNumber = 1;\n\n    for (let word of words) {\n        line.push(word);\n\n        const textWidth = getTextWidth(\n            line.join(' '),\n            fontSize,\n            'Karla, sans-serif'\n        );\n\n        if (textWidth > maxLength) {\n            line.pop();\n            line = [word];\n            ++approximateLineNumber;\n        }\n    }\n\n    return approximateLineNumber;\n};\n\nexport default {\n    getApproximateNumberOfLines,\n    getFontSize,\n    getTextWidth,\n    wrapText,\n    wrapTextWithEllipses,\n};\n","import { dispatch } from 'd3-dispatch';\nimport { easeCubicInOut } from 'd3-ease';\nimport { interpolate } from 'd3-interpolate';\nimport { scaleOrdinal } from 'd3-scale';\nimport { pie, arc } from 'd3-shape';\nimport { select, mouse } from 'd3-selection';\nimport 'd3-transition';\n\nimport { exportChart } from '../helpers/export';\nimport * as textHelper from '../helpers/text';\nimport colorHelper from '../helpers/color';\nimport { calculatePercent } from '../helpers/number';\nimport { emptyDonutData } from '../helpers/constants';\nimport { donutLoadingMarkup } from '../helpers/load';\nimport { motion } from '../helpers/constants';\n\n/**\n * Reusable Donut Chart API class that renders a\n * simple and configurable donut chart.\n *\n * @module Donut\n * @tutorial donut\n * @requires d3-dispatch, d3-ease, d3-interpolate, d3-scale, d3-shape, d3-selection, d3-transition\n *\n * @example\n * const donutChart = donut();\n *\n * donutChart\n *     .externalRadius(500)\n *     .internalRadius(200);\n *\n * d3Selection.select('.css-selector')\n *     .datum(dataset)\n *     .call(donutChart);\n *\n */\n\n/**\n * @typedef DonutChartData\n * @type {Object[]}\n * @property {Number} quantity     Quantity of the group (required)\n * @property {Number} percentage   Percentage of the total (optional)\n * @property {String} name         Name of the group (required)\n * @property {Number} id           Identifier for the group required for legend feature (optional)\n *\n * @example\n * [\n *     {\n *         quantity: 1,\n *         percentage: 50,\n *         name: 'glittering',\n *         id: 1\n *     },\n *     {\n *         quantity: 1,\n *         percentage: 50,\n *         name: 'luminous',\n *         id: 2\n *     }\n * ]\n */\nexport default function module() {\n    let margin = {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n        },\n        width = 300,\n        height = 300,\n        isLoading = false,\n        ease = easeCubicInOut,\n        pieDrawingTransitionDuration = motion.duration,\n        pieHoverTransitionDuration = 150,\n        radiusHoverOffset = 12,\n        paddingAngle = 0,\n        data,\n        chartWidth,\n        chartHeight,\n        externalRadius = 140,\n        internalRadius = 45.5,\n        legendWidth = externalRadius + internalRadius,\n        layout,\n        shape,\n        slices,\n        svg,\n        isAnimated = false,\n        isEmpty = false,\n        highlightedSliceId,\n        highlightedSlice,\n        hasFixedHighlightedSlice = false,\n        hasHoverAnimation = true,\n        hasLastHoverSliceHighlighted = false,\n        lastHighlightedSlice = null,\n        emptyDataConfig = {\n            emptySliceColor: '#EFF2F5',\n            showEmptySlice: false,\n        },\n        quantityLabel = 'quantity',\n        nameLabel = 'name',\n        percentageLabel = 'percentage',\n        percentageFormat = '.1f',\n        numberFormat,\n        hasCenterLegend = true,\n        // colors\n        colorScale,\n        nameToColorMap = null,\n        colorSchema = colorHelper.colorSchemas.britecharts,\n        centeredTextFunction = (d) => `${d.percentage}% ${d.name}`,\n        // utils\n        storeAngle = function (d) {\n            this._current = d;\n        },\n        reduceOuterRadius = (d) => {\n            d.outerRadius = externalRadius - radiusHoverOffset;\n        },\n        orderingFunction = (a, b) => b.quantity - a.quantity,\n        sumValues = (data) => data.reduce((total, d) => d.quantity + total, 0),\n        // extractors\n        getQuantity = ({ quantity }) => quantity,\n        getName = ({ name }) => name,\n        getSliceFill = ({ data }) => nameToColorMap[data.name],\n        // events\n        dispatcher = dispatch(\n            'customMouseOver',\n            'customMouseOut',\n            'customMouseMove',\n            'customClick'\n        );\n\n    /**\n     * This function creates the graph using the selection as container\n     *\n     * @param {D3Selection} _selection A d3 selection that represents\n     *                                  the container(s) where the chart(s) will be rendered\n     * @param {DonutChartData} _data The data to attach and generate the chart\n     */\n    function exports(_selection) {\n        _selection.each(function (_data) {\n            chartWidth = width - margin.left - margin.right;\n            chartHeight = height - margin.top - margin.bottom;\n            data = cleanData(_data);\n\n            buildSVG(this);\n            if (isLoading) {\n                drawLoadingState();\n\n                return;\n            }\n            cleanLoadingState();\n            buildLayout();\n            buildColorScale();\n            buildShape();\n            drawSlices();\n            initTooltip();\n\n            if (highlightedSliceId) {\n                initHighlightSlice();\n            }\n            if (isEmpty && emptyDataConfig.showEmptySlice) {\n                drawEmptySlice();\n            }\n        });\n    }\n\n    /**\n     * Builds color scale for chart, if any colorSchema was defined\n     * @private\n     */\n    function buildColorScale() {\n        if (colorSchema) {\n            colorScale = scaleOrdinal().range(colorSchema);\n\n            nameToColorMap =\n                nameToColorMap ||\n                colorScale\n                    .domain(data.map(getName))\n                    .domain()\n                    .reduce((memo, item) => {\n                        memo[item] = colorScale(item);\n\n                        return memo;\n                    }, {});\n        }\n    }\n\n    /**\n     * Builds containers for the chart, the legend and a wrapper for all of them\n     * @private\n     */\n    function buildContainerGroups() {\n        let container = svg\n            .append('g')\n            .classed('container-group', true)\n            .attr('transform', `translate(${width / 2}, ${height / 2})`);\n\n        svg.append('g').classed('loading-state-group', true);\n\n        container.append('g').classed('chart-group', true);\n        container.append('g').classed('legend-group', true);\n    }\n\n    /**\n     * Builds the pie layout that will produce data ready to draw\n     * @private\n     */\n    function buildLayout() {\n        layout = pie()\n            .padAngle(paddingAngle)\n            .value(getQuantity)\n            .sort(orderingFunction);\n    }\n\n    /**\n     * Builds the shape function\n     * @private\n     */\n    function buildShape() {\n        shape = arc().innerRadius(internalRadius).padRadius(externalRadius);\n    }\n\n    /**\n     * Builds the SVG element that will contain the chart\n     *\n     * @param  {HTMLElement} container DOM element that will work as the container of the graph\n     * @private\n     */\n    function buildSVG(container) {\n        if (!svg) {\n            svg = select(container)\n                .append('svg')\n                .classed('britechart donut-chart', true);\n\n            buildContainerGroups();\n        }\n\n        svg.attr('viewBox', [0, 0, width, height])\n            .attr('style', 'max-width: 100%; height: auto; height: intrinsic;')\n            .attr('width', width)\n            .attr('height', height);\n    }\n\n    /**\n     * Cleaning data casting the quantities, names and percentages to the proper type while keeping\n     * the rest of properties on the data. It also calculates the percentages if not present.\n     * @param  {DonutChartData} data    Data as passed to the container\n     * @return {DonutChartData}         Clean data with percentages\n     * @private\n     */\n    function cleanData(data) {\n        let dataWithPercentages;\n        let cleanData = data.reduce((acc, d) => {\n            // Skip data without quantity\n            if (d[quantityLabel] === undefined || d[quantityLabel] === null) {\n                return acc;\n            }\n\n            d.quantity = +d[quantityLabel];\n            d.name = String(d[nameLabel]);\n            d.percentage = d[percentageLabel] || null;\n\n            return [...acc, d];\n        }, []);\n\n        let totalQuantity = sumValues(cleanData);\n\n        if (totalQuantity === 0 && emptyDataConfig.showEmptySlice) {\n            isEmpty = true;\n        }\n\n        dataWithPercentages = cleanData.map((d) => {\n            d.percentage = String(\n                d.percentage ||\n                    calculatePercent(\n                        d[quantityLabel],\n                        totalQuantity,\n                        percentageFormat\n                    )\n            );\n\n            return d;\n        });\n\n        return dataWithPercentages;\n    }\n\n    /**\n     * Cleans any value that could be on the legend text element\n     * @private\n     */\n    function cleanLegend() {\n        svg.select('.donut-text').text('');\n    }\n\n    /**\n     * Cleans the loading state\n     * @private\n     */\n    function cleanLoadingState() {\n        svg.select('.loading-state-group svg').remove();\n    }\n\n    /**\n     * Draw an empty slice\n     * @private\n     */\n    function drawEmptySlice() {\n        if (slices) {\n            svg.selectAll('g.arc').remove();\n        }\n        slices = svg\n            .select('.chart-group')\n            .selectAll('g.arc')\n            .data(layout(emptyDonutData));\n\n        let newSlices = slices\n            .enter()\n            .append('g')\n            .each(storeAngle)\n            .each(reduceOuterRadius)\n            .classed('arc', true)\n            .append('path');\n\n        newSlices\n            .merge(slices)\n            .attr('fill', emptyDataConfig.emptySliceColor)\n            .attr('d', shape)\n            .transition()\n            .ease(ease)\n            .duration(pieDrawingTransitionDuration)\n            .attrTween('d', tweenLoading);\n\n        slices.exit().remove();\n    }\n\n    /**\n     * Draws the values on the donut slice inside the text element\n     *\n     * @param  {Object} obj Data object\n     * @private\n     */\n    function drawLegend(obj) {\n        if (obj.data && hasCenterLegend) {\n            svg.select('.donut-text')\n                .text(() => centeredTextFunction(obj.data))\n                .attr('dy', '.2em')\n                .attr('text-anchor', 'middle');\n\n            svg.select('.donut-text').call(wrapText, legendWidth);\n        }\n    }\n\n    /**\n     * Draws the loading state\n     * @private\n     */\n    function drawLoadingState() {\n        svg.select('.loading-state-group').html(donutLoadingMarkup);\n    }\n\n    /**\n     * Draws the slices of the donut\n     * @private\n     */\n    function drawSlices() {\n        // Not ideal, we need to figure out how to call exit for nested elements\n        if (slices) {\n            svg.selectAll('g.arc').remove();\n        }\n\n        slices = svg\n            .select('.chart-group')\n            .selectAll('g.arc')\n            .data(layout(data));\n\n        let newSlices = slices\n            .enter()\n            .append('g')\n            .each(storeAngle)\n            .each(reduceOuterRadius)\n            .classed('arc', true)\n            .append('path');\n\n        if (isAnimated) {\n            newSlices\n                .merge(slices)\n                .attr('fill', getSliceFill)\n                .on('mouseover', function (d) {\n                    handleMouseOver(this, d, chartWidth, chartHeight);\n                })\n                .on('mousemove', function (d) {\n                    handleMouseMove(this, d, chartWidth, chartHeight);\n                })\n                .on('mouseout', function (d) {\n                    handleMouseOut(this, d, chartWidth, chartHeight);\n                })\n                .on('click', function (d) {\n                    handleClick(this, d, chartWidth, chartHeight);\n                })\n                .transition()\n                .ease(ease)\n                .duration(pieDrawingTransitionDuration)\n                .attrTween('d', tweenLoading);\n        } else {\n            newSlices\n                .merge(slices)\n                .attr('fill', getSliceFill)\n                .attr('d', shape)\n                .on('mouseover', function (d) {\n                    handleMouseOver(this, d, chartWidth, chartHeight);\n                })\n                .on('mousemove', function (d) {\n                    handleMouseMove(this, d, chartWidth, chartHeight);\n                })\n                .on('mouseout', function (d) {\n                    handleMouseOut(this, d, chartWidth, chartHeight);\n                })\n                .on('click', function (d) {\n                    handleClick(this, d, chartWidth, chartHeight);\n                });\n        }\n\n        slices.exit().remove();\n    }\n\n    /**\n     * Checks if the given element id is the same as the highlightedSliceId and returns the\n     * element if that's the case\n     * @param  {DOMElement} options.data Dom element to check\n     * @return {DOMElement}              Dom element if it has the same id\n     */\n    function filterHighlightedSlice({ data }) {\n        if (data.id === highlightedSliceId) {\n            return this;\n        }\n    }\n\n    /**\n     * Handles a path mouse over\n     * @return {void}\n     * @private\n     */\n    function handleMouseOver(el, d, chartWidth, chartHeight) {\n        drawLegend(d);\n        dispatcher.call('customMouseOver', el, d, mouse(el), [\n            chartWidth,\n            chartHeight,\n        ]);\n\n        if (hasHoverAnimation) {\n            // if the hovered slice is not the same as the last slice hovered\n            // after mouseout event, then shrink the last slice that was highlighted\n            if (lastHighlightedSlice && el !== lastHighlightedSlice) {\n                tweenGrowth(\n                    lastHighlightedSlice,\n                    externalRadius - radiusHoverOffset,\n                    pieHoverTransitionDuration\n                );\n            }\n            if (highlightedSlice && el !== highlightedSlice) {\n                tweenGrowth(\n                    highlightedSlice,\n                    externalRadius - radiusHoverOffset\n                );\n            }\n            tweenGrowth(el, externalRadius);\n        }\n    }\n\n    /**\n     * Handles a path mouse move\n     * @return {void}\n     * @private\n     */\n    function handleMouseMove(el, d, chartWidth, chartHeight) {\n        dispatcher.call('customMouseMove', el, d, mouse(el), [\n            chartWidth,\n            chartHeight,\n        ]);\n    }\n\n    /**\n     * Handles a path mouse out\n     * @return {void}\n     * @private\n     */\n    function handleMouseOut(el, d, chartWidth, chartHeight) {\n        cleanLegend();\n\n        // When there is a fixed highlighted slice,\n        // we will always highlight it and render legend\n        if (\n            highlightedSlice &&\n            hasFixedHighlightedSlice &&\n            !hasLastHoverSliceHighlighted\n        ) {\n            drawLegend(highlightedSlice.__data__);\n            tweenGrowth(highlightedSlice, externalRadius);\n        }\n\n        // When the current slice is not the highlighted, or there isn't a fixed highlighted slice and it is the highlighted\n        // we will shrink the slice\n        if (\n            el !== highlightedSlice ||\n            (!hasFixedHighlightedSlice && el === highlightedSlice)\n        ) {\n            tweenGrowth(\n                el,\n                externalRadius - radiusHoverOffset,\n                pieHoverTransitionDuration\n            );\n        }\n\n        if (hasLastHoverSliceHighlighted) {\n            drawLegend(el.__data__);\n            tweenGrowth(el, externalRadius);\n            lastHighlightedSlice = el;\n        }\n\n        dispatcher.call('customMouseOut', el, d, mouse(el), [\n            chartWidth,\n            chartHeight,\n        ]);\n    }\n\n    /**\n     * Handles a path click\n     * @return {void}\n     * @private\n     */\n    function handleClick(el, d, chartWidth, chartHeight) {\n        dispatcher.call('customClick', el, d, mouse(el), [\n            chartWidth,\n            chartHeight,\n        ]);\n    }\n\n    /**\n     * Find the slice by id and growth it if needed\n     * @private\n     */\n    function initHighlightSlice() {\n        highlightedSlice = svg\n            .selectAll('.chart-group .arc path')\n            .select(filterHighlightedSlice)\n            .node();\n\n        if (highlightedSlice) {\n            drawLegend(highlightedSlice.__data__);\n            tweenGrowth(\n                highlightedSlice,\n                externalRadius,\n                pieDrawingTransitionDuration\n            );\n        }\n    }\n\n    /**\n     * Creates the text element that will hold the legend of the chart\n     */\n    function initTooltip() {\n        svg.select('.legend-group').append('text').attr('class', 'donut-text');\n    }\n\n    /**\n     * Stores current angles and interpolates with new angles\n     * Check out {@link http://bl.ocks.org/mbostock/1346410| this example}\n     *\n     * @param  {Object}     a   New data for slice\n     * @return {Function}       Tweening function for the donut shape\n     * @private\n     */\n    function tweenArc(a) {\n        let i = interpolate(this._current, a);\n\n        this._current = i(0);\n\n        return function (t) {\n            return shape(i(t));\n        };\n    }\n\n    /**\n     * Animate slice with tweens depending on the attributes given\n     *\n     * @param  {DOMElement} slice   Slice to growth\n     * @param  {Number} outerRadius Final outer radius value\n     * @param  {Number} delay       Delay of animation\n     * @private\n     */\n    function tweenGrowth(slice, outerRadius, delay = 0) {\n        select(slice)\n            .transition()\n            .delay(delay)\n            .attrTween('d', function (d) {\n                let i = interpolate(d.outerRadius, outerRadius);\n\n                return (t) => {\n                    d.outerRadius = i(t);\n\n                    return shape(d);\n                };\n            });\n    }\n\n    /**\n     * Animation for chart loading\n     * Check out {@link http://bl.ocks.org/mbostock/4341574| this example}\n     *\n     * @param  {Object} b   Data point\n     * @return {Function}   Tween function\n     * @private\n     */\n    function tweenLoading(b) {\n        let i;\n\n        b.innerRadius = 0;\n        i = interpolate({ startAngle: 0, endAngle: 0 }, b);\n\n        return function (t) {\n            return shape(i(t));\n        };\n    }\n\n    /**\n     * Utility function that wraps a text into the given width\n     *\n     * @param  {D3Selection} text       Text to write\n     * @param  {Number} legendWidth     Width of the container\n     * @private\n     */\n    function wrapText(text, legendWidth) {\n        let fontSize = externalRadius / 5;\n\n        textHelper.wrapText.call(null, 0, fontSize, legendWidth, text.node());\n    }\n\n    // API\n    /**\n     * Gets or Sets the duration of the animation\n     * @param  {Number} _x=1200         Desired animation duration for the graph\n     * @return {duration | module}      Current animation duration or Chart module to chain calls\n     * @public\n     */\n    exports.animationDuration = function (_x) {\n        if (!arguments.length) {\n            return pieDrawingTransitionDuration;\n        }\n        pieDrawingTransitionDuration = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the centeredTextFunction of the chart. If function is provided\n     * the format will be changed by the custom function's value format.\n     * The default format function value is \"${d.percentage}% ${d.name}\".\n     * The callback will provide the data object with id, name, percentage, and quantity.\n     * Also provides the component added by the user in each data entry.\n     * @param  {Function} _x        Custom function that returns a formatted string\n     * @return {Function | module}  Current centeredTextFunction or Chart module to chain calls\n     * @public\n     * @example donutChart.centeredTextFunction(d => `${d.id} ${d.quantity}`)\n     */\n    exports.centeredTextFunction = function (_x) {\n        if (!arguments.length) {\n            return centeredTextFunction;\n        }\n        centeredTextFunction = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the colorMap of the chart\n     * @param  {object} [_x=null]    Color map\n     * @return {number | module}     Current colorMap or Chart module to chain calls\n     * @example stackedBar.colorMap({groupName: 'colorHex', groupName2: 'colorString'})\n     * @public\n     */\n    exports.colorMap = function (_x) {\n        if (!arguments.length) {\n            return nameToColorMap;\n        }\n        nameToColorMap = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the colorSchema of the chart\n     * @param  {String[]} _x        Desired colorSchema for the graph\n     * @return { String | module}   Current colorSchema or Chart module to chain calls\n     * @public\n     */\n    exports.colorSchema = function (_x) {\n        if (!arguments.length) {\n            return colorSchema;\n        }\n        colorSchema = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the emptyDataConfig of the chart. If set and data is empty (quantity\n     * adds up to zero or there are no entries), the chart will render an empty slice\n     * with a given color (light gray by default)\n     * @param  {Object} _x          EmptyDataConfig object to get/set\n     * @return { Object | module}   Current config for when chart data is an empty array\n     * @public\n     * @example donutChart.emptyDataConfig({showEmptySlice: true, emptySliceColor: '#000000'})\n     */\n    exports.emptyDataConfig = function (_x) {\n        if (!arguments.length) {\n            return emptyDataConfig;\n        }\n        emptyDataConfig = _x;\n\n        return this;\n    };\n\n    /**\n     * Chart exported to png and a download action is fired\n     * @param {String} filename     File title for the resulting picture\n     * @param {String} title        Title to add at the top of the exported picture\n     * @return {Promise}            Promise that resolves if the chart image was loaded and downloaded successfully\n     * @public\n     */\n    exports.exportChart = function (filename, title) {\n        return exportChart.call(exports, svg, filename, title);\n    };\n\n    /**\n     * Gets or Sets the externalRadius of the chart\n     * @param  {Number} _x              ExternalRadius number to get/set\n     * @return { (Number | Module) }    Current externalRadius or Donut Chart module to chain calls\n     * @public\n     */\n    exports.externalRadius = function (_x) {\n        if (!arguments.length) {\n            return externalRadius;\n        }\n        externalRadius = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the hasCenterLegend property of the chart, making it display\n     * legend at the center of the donut.\n     *\n     * @param  {boolean} _x         If we want to show legent at the center of the donut\n     * @return {boolean | Module}   Current hasCenterLegend flag or Chart module\n     * @public\n     */\n    exports.hasCenterLegend = function (_x) {\n        if (!arguments.length) {\n            return hasCenterLegend;\n        }\n        hasCenterLegend = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the hasHoverAnimation property of the chart. By default,\n     * donut chart highlights the hovered slice. This property explicitly\n     * disables this hover behavior.\n     * @param  {boolean} _x         Decide whether hover slice animation should be enabled\n     * @return {boolean | module}   Current hasHoverAnimation flag or Chart module\n     * @public\n     */\n    exports.hasHoverAnimation = function (_x) {\n        if (!arguments.length) {\n            return hasHoverAnimation;\n        }\n        hasHoverAnimation = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the hasFixedHighlightedSlice property of the chart, making it to\n     * highlight the selected slice id set with `highlightSliceById` all the time.\n     *\n     * @param  {boolean} _x         If we want to make the highlighted slice permanently highlighted\n     * @return {boolean | module}   Current hasFixedHighlightedSlice flag or Chart module\n     * @public\n     */\n    exports.hasFixedHighlightedSlice = function (_x) {\n        if (!arguments.length) {\n            return hasFixedHighlightedSlice;\n        }\n        hasFixedHighlightedSlice = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or sets the hasLastHoverSliceHighlighted property.\n     * If property is true, the last hovered slice will be highlighted\n     * after 'mouseout` event is triggered. The last hovered slice will remain\n     * in highlight state.\n     * Note: if both hasFixedHighlightedSlice and hasLastHoverSliceHighlighted\n     * are true, the latter property will override the former.\n     * @param {boolean} _x          Decide whether the last hovered slice should be highlighted\n     * @return {boolean | module}   Current hasLastHoverSliceHighlighted value or Chart module\n     * @public\n     */\n    exports.hasLastHoverSliceHighlighted = function (_x) {\n        if (!arguments.length) {\n            return hasLastHoverSliceHighlighted;\n        }\n        hasLastHoverSliceHighlighted = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the height of the chart\n     * @param  {Number} _x              Desired width for the graph\n     * @return { (Number | Module) }    Current height or Donut Chart module to chain calls\n     * @public\n     */\n    exports.height = function (_x) {\n        if (!arguments.length) {\n            return height;\n        }\n        height = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the id of the slice to highlight\n     * @param  {Number} _x              Slice id\n     * @return { (Number | Module) }    Current highlighted slice id or Donut Chart module to chain calls\n     * @public\n     */\n    exports.highlightSliceById = function (_x) {\n        if (!arguments.length) {\n            return highlightedSliceId;\n        }\n        highlightedSliceId = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the internalRadius of the chart\n     * @param  {Number} _x              InternalRadius number to get/set\n     * @return { (Number | Module) }    Current internalRadius or Donut Chart module to chain calls\n     * @public\n     */\n    exports.internalRadius = function (_x) {\n        if (!arguments.length) {\n            return internalRadius;\n        }\n        internalRadius = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n     * By default this is 'false'\n     *\n     * @param  {Boolean} _x             Desired animation flag\n     * @return { Boolean | module}      Current isAnimated flag or Chart module\n     * @public\n     */\n    exports.isAnimated = function (_x) {\n        if (!arguments.length) {\n            return isAnimated;\n        }\n        isAnimated = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the loading state of the chart\n     * @param  {boolean} flag       Desired value for the loading state\n     * @return {boolean | module}   Current loading state flag or Chart module to chain calls\n     * @public\n     */\n    exports.isLoading = function (_flag) {\n        if (!arguments.length) {\n            return isLoading;\n        }\n        isLoading = _flag;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the margin of the chart\n     * @param  {Object} _x              Margin object to get/set\n     * @return { (Object | Module) }    Current margin or Donut Chart module to chain calls\n     * @public\n     */\n    exports.margin = function (_x) {\n        if (!arguments.length) {\n            return margin;\n        }\n        margin = {\n            ...margin,\n            ..._x,\n        };\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the number format of the donut chart\n     * @param  {string} _x          Desired numberFormat for the chart. See examples [here]{@link https://observablehq.com/@d3/d3-format}\n     * @return {string | module}    Current numberFormat or Chart module to chain calls\n     * @public\n     */\n    exports.numberFormat = function (_x) {\n        if (!arguments.length) {\n            return numberFormat;\n        }\n        numberFormat = _x;\n\n        return this;\n    };\n\n    /**\n     * Exposes an 'on' method that acts as a bridge with the event dispatcher\n     * We are going to expose this events:\n     * customMouseOver, customMouseMove, customMouseOut and customClick\n     *\n     * @return {module} Bar Chart\n     * @public\n     */\n    exports.on = function () {\n        let value = dispatcher.on.apply(dispatcher, arguments);\n\n        return value === dispatcher ? exports : value;\n    };\n\n    /**\n     * Changes the order of items given custom function\n     * @param  {Function} _x              A custom function that sets logic for ordering\n     * @return { (Function | Module) }    Void function with no return\n     * @public\n     */\n    exports.orderingFunction = function (_x) {\n        if (!arguments.length) {\n            return orderingFunction;\n        }\n        orderingFunction = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the percentage format for the percentage label\n     * @param  {String} _x              Format for the percentage label (e.g. '.1f')\n     * @return { (Number | Module) }    Current format or Donut Chart module to chain calls\n     * @public\n     */\n    exports.percentageFormat = function (_x) {\n        if (!arguments.length) {\n            return percentageFormat;\n        }\n        percentageFormat = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the radiusHoverOffset of the chart\n     * @param  {Number} _x              Desired offset for the hovered slice\n     * @return { (Number | Module) }    Current offset or Donut Chart module to chain calls\n     * @public\n     */\n    exports.radiusHoverOffset = function (_x) {\n        if (!arguments.length) {\n            return radiusHoverOffset;\n        }\n        radiusHoverOffset = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the width of the chart\n     * @param  {Number} _x              Desired width for the graph\n     * @return { (Number | Module) }    Current width or Donut Chart module to chain calls\n     * @public\n     */\n    exports.width = function (_x) {\n        if (!arguments.length) {\n            return width;\n        }\n        width = _x;\n\n        return this;\n    };\n\n    return exports;\n}\n"],"sourceRoot":""}