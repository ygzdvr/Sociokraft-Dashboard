{"version":3,"sources":["webpack://core.[name]/webpack/universalModuleDefinition","webpack://core.[name]/webpack/bootstrap","webpack://core.[name]/external \"d3-time\"","webpack://core.[name]/external \"d3-shape\"","webpack://core.[name]/external \"d3-selection\"","webpack://core.[name]/external \"d3-format\"","webpack://core.[name]/external \"d3-array\"","webpack://core.[name]/./src/charts/helpers/constants.js","webpack://core.[name]/external \"d3-scale\"","webpack://core.[name]/./src/charts/helpers/color.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/defineProperty.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/typeof.js","webpack://core.[name]/external \"d3-axis\"","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://core.[name]/external \"d3-time-format\"","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://core.[name]/./src/charts/helpers/number.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://core.[name]/external \"d3-transition\"","webpack://core.[name]/external \"d3-dispatch\"","webpack://core.[name]/./src/charts/helpers/load.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://core.[name]/./src/charts/helpers/date.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://core.[name]/./src/charts/helpers/axis.js","webpack://core.[name]/external \"d3-brush\"","webpack://core.[name]/./src/charts/brush/brush.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__11__","__WEBPACK_EXTERNAL_MODULE__14__","__WEBPACK_EXTERNAL_MODULE__22__","__WEBPACK_EXTERNAL_MODULE__23__","__WEBPACK_EXTERNAL_MODULE__45__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","axisTimeCombinations","MINUTE_HOUR","HOUR_DAY","DAY_MONTH","MONTH_YEAR","CUSTOM","timeBenchmarks","ONE_AND_A_HALF_YEARS","ONE_YEAR","ONE_DAY","hoursHuman","motion","duration","curveMap","linear","curveLinear","basis","curveBasis","cardinal","curveCardinal","catmullRom","curveCatmullRom","monotoneX","curveMonotoneX","monotoneY","curveMonotoneY","natural","curveNatural","step","curveStep","stepAfter","curveStepAfter","stepBefore","curveStepBefore","emptyDonutData","quantity","percentage","timeIntervals","timeMillisecond","utcMillisecond","timeSecond","utcSecond","timeMinute","utcMinute","timeHour","utcHour","timeDay","utcDay","timeWeek","utcWeek","timeSunday","utcSunday","timeMonday","utcMonday","timeTuesday","utcTuesday","timeWednesday","utcWednesday","timeThursday","utcThursday","timeFriday","utcFriday","timeSaturday","utcSaturday","timeMonth","utcMonth","timeYear","utcYear","colorGradients","greenBlue","orangePink","bluePurple","colorGradientsHuman","britecharts","grey","orange","blueGreen","teal","green","yellow","pink","purple","red","colorSchemas","colorSchemasHuman","aloeGreen","greenColor","blueColor","yellowColor","orangeColor","singleColors","pinkColor","purpleColor","singleColorsHuman","obj","configurable","writable","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arr","_typeof","iterator","constructor","len","length","arr2","Array","arrayLikeToArray","minLen","toString","slice","from","test","idCounter","integerValueFormats","small","limit","format","medium","large","decimalValueFormats","getValueSize","limits","size","calcLinearRegression","dataPoints","x","y","xy","x2","forEach","denominator","intercept","slope","minX","min","maxX","max","x1","y1","y2","calculatePercent","total","decimals","percent","isInteger","formatDecimalValue","formatIntegerValue","uniqueId","prefix","id","arrayWithHoles","iterableToArrayLimit","nonIterableRest","linearGradient","barLoadingMarkup","donutLoadingMarkup","lineLoadingMarkup","stackedAreaLoadingMarkup","sparkLineLoadingMarkup","brushLoadingMarkup","isArray","iter","TypeError","localeTimeMap","minute","hour","day","daymonth","month","year","addDays","startDate","days","result","Date","setDate","getDate","String","diffDays","endDate","Math","ceil","abs","getTime","convertMillisecondsToDays","milliseconds","getLocaleDateFormatter","locale","timeUnit","options","formatter","Intl","DateTimeFormat","date","_i","_s","_e","_arr","_n","_d","next","done","push","err","formatMap","timeFormat","settingsToMajorTickMap","every","getAxisSettingsFromTimeSpan","timeSpan","getMaxNumOfHorizontalTicks","width","dataPointNumber","ticksForWidth","getTimeSeriesAxis","dataByDate","settings","firstDate","lastDate","dateTimeSpan","split","minor","major","majorTickValue","minorTickValue","tick","getSortedNumberAxis","dataSorted","firstEntry","getMaxNumOfHorizontalTicksForNumberRanges","data","dataZeroed","svg","chartWidth","chartHeight","xScale","yScale","xAxis","xSubAxis","brush","chartBrush","brushArea","chartGradientEl","margin","top","right","bottom","left","height","isLoading","isAnimated","animationDuration","dateRange","isLocked","xAxisFormat","xTicks","xAxisCustomFormat","areaCurve","gradient","colorHelper","gradientId","roundingTimeInterval","dispatcher","dispatch","getValue","_selection","each","_data","dataToClone","handleFillColor","originalData","cleanData","reduce","acc","map","JSON","parse","stringify","container","select","append","classed","attr","selectAll","buildContainerGroups","buildSVG","this","html","scaleTime","domain","extent","range","scaleLinear","timeAxisHelper","axisBottom","ticks","tickSize","tickFormat","tickPadding","enter","buildAxis","remove","offset","color","brushX","on","handleBrushStart","handleBrushEnd","area","defined","isNaN","parseInt","y0","curve","filter","datum","transition","drawArea","style","setTimeout","drawBrush","newSelection","selection","event","lockedSelectionSize","floor","selectedRange","move","invert","sourceEvent","dateExtentRounded","dateExtent","round","target","setBrushByDates","dateA","dateB","console","error","_x","arguments","_flag","apply"],"mappings":"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,WAAYC,kBACZC,UAAWC,iBACXC,UAAWC,iBACXC,QAASC,eACTC,KAAMC,YACNC,UAAWC,iBACXC,WAAYC,mBAGHC,EAAiB,CAC1B,CACIC,SAAU,EACVC,WAAY,MAIPC,EAAgB,CACzBC,gBAAiBA,kBACjBC,eAAgBA,iBAChBC,WAAYA,aACZC,UAAWA,YACXC,WAAYA,aACZC,UAAWA,YACXC,SAAUA,WACVC,QAASA,UACTC,QAASA,UACTC,OAAQA,SACRC,SAAUA,WACVC,QAASA,UACTC,WAAYA,aACZC,UAAWA,YACXC,WAAYA,aACZC,UAAWA,YACXC,YAAaA,cACbC,WAAYA,aACZC,cAAeA,gBACfC,aAAcA,eACdC,aAAcA,eACdC,YAAaA,cACbC,WAAYA,aACZC,UAAWA,YACXC,aAAcA,eACdC,YAAaA,cACbC,UAAWA,YACXC,SAAUA,WACVC,SAAUA,WACVC,QAASA,Y,cC5IbtH,EAAOD,QAAUW,G,6BCAjB,oyBACO,IAAM6G,EAAiB,CAC1BC,UAAW,CAAC,UAAW,WACvBC,WAAY,CAAC,UAAW,WACxBC,WAAY,CAAC,UAAW,YAEfC,EAAsB,CAC/BH,UAAW,gBACXC,WAAY,iBACZC,WAAY,kBAKHE,EAAc,CACvB,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAO,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAS,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAY,CACrB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAO,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAQ,CACjB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAS,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAO,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAS,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAM,CACf,UACA,UACA,UACA,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","file":"brush.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3-time\"), require(\"d3-shape\"), require(\"d3-selection\"), require(\"d3-format\"), require(\"d3-array\"), require(\"d3-scale\"), require(\"d3-axis\"), require(\"d3-time-format\"), require(\"d3-transition\"), require(\"d3-dispatch\"), require(\"d3-brush\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3-time\", \"d3-shape\", \"d3-selection\", \"d3-format\", \"d3-array\", \"d3-scale\", \"d3-axis\", \"d3-time-format\", \"d3-transition\", \"d3-dispatch\", \"d3-brush\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"brush\"] = factory(require(\"d3-time\"), require(\"d3-shape\"), require(\"d3-selection\"), require(\"d3-format\"), require(\"d3-array\"), require(\"d3-scale\"), require(\"d3-axis\"), require(\"d3-time-format\"), require(\"d3-transition\"), require(\"d3-dispatch\"), require(\"d3-brush\"));\n\telse\n\t\troot[\"core\"] = root[\"core\"] || {}, root[\"core\"][\"brush\"] = factory(root[\"d3-time\"], root[\"d3-shape\"], root[\"d3-selection\"], root[\"d3-format\"], root[\"d3-array\"], root[\"d3-scale\"], root[\"d3-axis\"], root[\"d3-time-format\"], root[\"d3-transition\"], root[\"d3-dispatch\"], root[\"d3-brush\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__11__, __WEBPACK_EXTERNAL_MODULE__14__, __WEBPACK_EXTERNAL_MODULE__22__, __WEBPACK_EXTERNAL_MODULE__23__, __WEBPACK_EXTERNAL_MODULE__45__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 49);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","import {\n    curveLinear,\n    curveBasis,\n    curveCardinal,\n    curveCatmullRom,\n    curveMonotoneX,\n    curveMonotoneY,\n    curveNatural,\n    curveStep,\n    curveStepAfter,\n    curveStepBefore,\n} from 'd3-shape';\nimport {\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeDay,\n    utcDay,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n} from 'd3-time';\n\nexport const axisTimeCombinations = {\n    MINUTE_HOUR: 'minute-hour',\n    HOUR_DAY: 'hour-daymonth',\n    DAY_MONTH: 'day-month',\n    MONTH_YEAR: 'month-year',\n    CUSTOM: 'custom',\n};\n\nexport const timeBenchmarks = {\n    ONE_AND_A_HALF_YEARS: 47304000000,\n    ONE_YEAR: 31536000365,\n    ONE_DAY: 86400001,\n};\n\nexport const hoursHuman = [\n    '00h',\n    '01h',\n    '02h',\n    '03h',\n    '04h',\n    '05h',\n    '06h',\n    '07h',\n    '08h',\n    '09h',\n    '10h',\n    '11h',\n    '12h',\n    '13h',\n    '14h',\n    '15h',\n    '16h',\n    '17h',\n    '18h',\n    '19h',\n    '20h',\n    '21h',\n    '22h',\n    '23h',\n];\n\nexport const motion = {\n    duration: 1200,\n};\n\nexport const curveMap = {\n    linear: curveLinear,\n    basis: curveBasis,\n    cardinal: curveCardinal,\n    catmullRom: curveCatmullRom,\n    monotoneX: curveMonotoneX,\n    monotoneY: curveMonotoneY,\n    natural: curveNatural,\n    step: curveStep,\n    stepAfter: curveStepAfter,\n    stepBefore: curveStepBefore,\n};\n\nexport const emptyDonutData = [\n    {\n        quantity: 1,\n        percentage: 100,\n    },\n];\n\nexport const timeIntervals = {\n    timeMillisecond: timeMillisecond,\n    utcMillisecond: utcMillisecond,\n    timeSecond: timeSecond,\n    utcSecond: utcSecond,\n    timeMinute: timeMinute,\n    utcMinute: utcMinute,\n    timeHour: timeHour,\n    utcHour: utcHour,\n    timeDay: timeDay,\n    utcDay: utcDay,\n    timeWeek: timeWeek,\n    utcWeek: utcWeek,\n    timeSunday: timeSunday,\n    utcSunday: utcSunday,\n    timeMonday: timeMonday,\n    utcMonday: utcMonday,\n    timeTuesday: timeTuesday,\n    utcTuesday: utcTuesday,\n    timeWednesday: timeWednesday,\n    utcWednesday: utcWednesday,\n    timeThursday: timeThursday,\n    utcThursday: utcThursday,\n    timeFriday: timeFriday,\n    utcFriday: utcFriday,\n    timeSaturday: timeSaturday,\n    utcSaturday: utcSaturday,\n    timeMonth: timeMonth,\n    utcMonth: utcMonth,\n    timeYear: timeYear,\n    utcYear: utcYear,\n};\n\nexport default {\n    axisTimeCombinations,\n    curveMap,\n    emptyDonutData,\n    timeBenchmarks,\n    lineGradientId: 'lineGradientId',\n    timeIntervals,\n    hoursHuman,\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","// Color Gradients\nexport const colorGradients = {\n    greenBlue: ['#39C7EA', '#4CDCBA'],\n    orangePink: ['#FBC670', '#F766B8'],\n    bluePurple: ['#3DC3C9', '#824a9e'],\n};\nexport const colorGradientsHuman = {\n    greenBlue: 'Green to Blue',\n    orangePink: 'Orange to Pink',\n    bluePurple: 'Blue to Purple',\n};\n\n// Color Schemas\n// Standard Color Schema for Britecharts\nexport const britecharts = [\n    '#6aedc7', //green\n    '#39c2c9', //blue\n    '#ffce00', //yellow\n    '#ffa71a', //orange\n    '#f866b9', //pink\n    '#998ce3', //purple\n];\n// Grey Palette\nexport const grey = [\n    '#F8F8FA',\n    '#EFF2F5',\n    '#D2D6DF',\n    '#C3C6CF',\n    '#ADB0B6',\n    '#666A73',\n    '#45494E',\n    '#363A43',\n    '#282C35',\n];\n// Orange Palette\nexport const orange = [\n    '#fcc870',\n    '#ffa71a',\n    '#fb8825',\n    '#f6682f',\n    '#db5a2c',\n    '#bf4c28',\n    '#a43b1c',\n    '#892a10',\n    '#f9e9c5',\n];\n// Blue Palette\nexport const blueGreen = [\n    '#ccf7f6',\n    '#70e4e0',\n    '#00d8d2',\n    '#00acaf',\n    '#007f8c',\n    '#005e66',\n    '#003c3f',\n    '#002d2f',\n    '#0d2223',\n];\n// LightBlue Palette\nexport const teal = [\n    '#ccfffe',\n    '#94f7f4',\n    '#00fff8',\n    '#1de1e1',\n    '#39c2c9',\n    '#2e9a9d',\n    '#227270',\n    '#1a5957',\n    '#133f3e',\n];\n// Green Palette\nexport const green = [\n    '#edfff7',\n    '#d7ffef',\n    '#c0ffe7',\n    '#95f5d7',\n    '#6aedc7',\n    '#59c3a3',\n    '#479980',\n    '#34816a',\n    '#206953',\n];\n// Yellow Palette\nexport const yellow = [\n    '#f9f2b3',\n    '#fbe986',\n    '#fce05a',\n    '#fed72d',\n    '#ffce00',\n    '#fcc11c',\n    '#f9b438',\n    '#eda629',\n    '#e09819',\n];\n// Pink Palette\nexport const pink = [\n    '#fdd1ea',\n    '#fb9cd2',\n    '#f866b9',\n    '#fc40b6',\n    '#ff1ab3',\n    '#e3239d',\n    '#c62c86',\n    '#a62073',\n    '#85135f',\n];\n// Purple Palette\nexport const purple = [\n    '#ddd6fc',\n    '#bbb1f0',\n    '#998ce3',\n    '#8e6bc1',\n    '#824a9e',\n    '#77337f',\n    '#6b1c60',\n    '#591650',\n    '#470f3f',\n];\n// Red Palette\nexport const red = [\n    '#ffd8d4',\n    '#ffb5b0',\n    '#ff938c',\n    '#ff766c',\n    '#ff584c',\n    '#f04b42',\n    '#e03d38',\n    '#be2e29',\n    '#9c1e19',\n];\n\nexport const colorSchemas = {\n    britecharts,\n    grey,\n    orange,\n    blueGreen,\n    teal,\n    green,\n    yellow,\n    pink,\n    purple,\n    red,\n};\nexport const colorSchemasHuman = {\n    britecharts: 'Britecharts Default',\n    grey: 'Britecharts Grey',\n    orange: 'Orange',\n    blueGreen: 'Blue',\n    teal: 'Light Blue',\n    green: 'Green',\n    yellow: 'Yellow',\n    pink: 'Pink',\n    purple: 'Purple',\n    red: 'Red',\n};\n\n// Single Colors\nexport const aloeGreen = ['#7bdcc0']; // To Deprecate\nexport const greenColor = ['#6aedc7'];\nexport const blueColor = ['#39c2c9'];\nexport const yellowColor = ['#ffce00'];\nexport const orangeColor = ['#ffa71a'];\nconst pinkColor = ['#f866b9'];\nconst purpleColor = ['#998ce3'];\n\nconst singleColors = {\n    aloeGreen,\n    greenColor,\n    blueColor,\n    yellowColor,\n    orangeColor,\n    pinkColor,\n    purpleColor,\n};\nconst singleColorsHuman = {\n    aloeGreen: 'Aloe Green',\n    greenColor: 'Green',\n    blueColor: 'Blue',\n    yellowColor: 'Yellow',\n    orangeColor: 'Orange',\n    pinkColor: 'Pink',\n    purpleColor: 'Purple',\n};\n\nexport default {\n    colorSchemas,\n    colorSchemasHuman,\n    colorGradients,\n    colorGradientsHuman,\n    singleColors,\n    singleColorsHuman,\n};\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","module.exports = __WEBPACK_EXTERNAL_MODULE__14__;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import { format } from 'd3-format';\nimport { max, min } from 'd3-array';\n\nlet idCounter = 0;\n\nconst integerValueFormats = {\n    small: {\n        limit: 10,\n        format: format(''),\n    },\n    medium: {\n        limit: 1000,\n        format: format(''),\n    },\n    large: {\n        limit: null,\n        format: format('.2s'),\n    },\n};\n\nconst decimalValueFormats = {\n    small: {\n        limit: 10,\n        format: format('.3f'),\n    },\n    medium: {\n        limit: 100,\n        format: format('.1f'),\n    },\n    large: {\n        limit: null,\n        format: format('.2s'),\n    },\n};\n\n/**\n * Return a relative size for the value given, based in our decimal or integer tables\n * @param {Number} value    Value to assess its relative size\n * @param {Object} limits   Object stablishing the limits and formats\n * to consider the value of a given size\n * @private\n */\nconst getValueSize = (value, limits) => {\n    let size = 'large';\n\n    if (value < limits.small.limit) {\n        size = 'small';\n    } else if (value < limits.medium.limit) {\n        size = 'medium';\n    }\n\n    return size;\n};\n\n/**\n * Returns an object that contains necessary coordinates for drawing the trendline. The\n * calculation of slope and y-intercept uses basic accumulative linear regression formula.\n * @param  {Object[]} dataPoints    Array of circle data points\n * @return {Object}\n * @private\n */\nexport const calcLinearRegression = (dataPoints) => {\n    let n = dataPoints.length,\n        x = 0,\n        y = 0,\n        xy = 0,\n        x2 = 0;\n\n    dataPoints.forEach((d) => {\n        x += d.x;\n        y += d.y;\n        xy += d.x * d.y;\n        x2 += d.x * d.x;\n    });\n\n    const denominator = n * x2 - x * x;\n    const intercept = (y * x2 - x * xy) / denominator;\n    const slope = (n * xy - x * y) / denominator;\n    const minX = min(dataPoints, ({ x }) => x);\n    const maxX = max(dataPoints, ({ x }) => x);\n\n    return {\n        x1: minX,\n        y1: slope * n + intercept,\n        x2: maxX,\n        y2: slope * maxX + intercept,\n    };\n};\n\n/**\n * Calculates percentage of value from total\n * @param  {Number}  value    Value to check\n * @param  {Number}  total    Sum of values\n * @param  {String}  decimals Specifies number of decimals https://github.com/d3/d3-format\n * @return {String}           Percentage\n * @private\n */\nexport const calculatePercent = (value, total, decimals) => {\n    const percent = total ? (value / total) * 100 : 0;\n\n    return format(decimals)(percent);\n};\n\n/**\n * Checks if a number is an integer or a decimal value\n * @param  {Number}  value Value to check\n * @return {Boolean}       If it is an iteger\n * @private\n */\nexport const isInteger = (value) => {\n    return value % 1 === 0;\n};\n\n/**\n * Formats a floating point value depending on its value range\n * @param  {Number} value Decimal point value to format\n * @return {Number}       Formatted value to show\n * @private\n */\nexport const formatDecimalValue = (value) => {\n    let size = getValueSize(value, decimalValueFormats);\n    let format = decimalValueFormats[size].format;\n\n    return format(value);\n};\n\n/**\n * Formats an integer value depending on its value range\n * @param  {Number} value Decimal point value to format\n * @return {Number}       Formatted value to show\n * @private\n */\nexport const formatIntegerValue = (value) => {\n    let size = getValueSize(value, integerValueFormats);\n    let format = integerValueFormats[size].format;\n\n    return format(value);\n};\n\n/**\n * Generates a unique id with a prefix\n * @param  {String} prefix   Prefix to add before the id\n * @return {String}          Unique id\n * @private\n */\nexport const uniqueId = (prefix) => {\n    const id = ++idCounter;\n\n    return `${prefix.toString()}-${id}`;\n};\n\nexport default {\n    calculatePercent,\n    isInteger,\n    formatDecimalValue,\n    formatIntegerValue,\n    uniqueId,\n    calcLinearRegression,\n};\n","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","module.exports = __WEBPACK_EXTERNAL_MODULE__22__;","module.exports = __WEBPACK_EXTERNAL_MODULE__23__;","export const linearGradient = `\n        <defs>\n            <linearGradient id=\"lgrad\" x1=\"0%\" y1=\"50%\" x2=\"100%\" y2=\"50%\" >\n                <stop offset=\"0\" stop-color=\"#ffffff\" stop-opacity=\"0.8\" />\n                <stop offset=\"33.33%\" stop-color=\"#ffffff\" stop-opacity=\"0.8\" />\n                <stop offset=\"50%\" stop-color=\"#ffffff\" stop-opacity=\"0\" />\n                <stop offset=\"66.66%\" stop-color=\"#ffffff\" stop-opacity=\"0.8\" />\n                <stop offset=\"100%\" stop-color=\"#ffffff\" stop-opacity=\"0.8\" />\n            </linearGradient>\n        </defs>\n    `;\n\nexport const barLoadingMarkup = `\n        <svg class=\"load-state bar-load-state\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 711 325\">\n            ${linearGradient}\n            <g fill=\"none\" fill-rule=\"evenodd\">\n                <g transform=\"translate(-15 29)\">\n                    <g stroke=\"#EFF2F5\" stroke-dasharray=\"4 4\">\n                        <path d=\"M.400592911 200.302477L710.674315 200.302477M.400592884 131.172748L710.674315 131.172748M.324410282 64.2071321L710.621499 64.2071321M.291004517.563888874L709.82431.563888889\"/>\n                    </g>\n                    <g fill=\"#D2D6DF\" transform=\"translate(63.08 11)\">\n                        <polygon points=\"-.08 176 23.92 176 23.92 255 -.08 255\"/>\n                        <polygon points=\"50.829 147 74.829 147 74.829 255 50.829 255\"/>\n                        <polygon points=\"254.465 0 278.465 0 278.465 255 254.465 255\"/>\n                        <polygon points=\"458.102 169 482.102 169 482.102 255 458.102 255\"/>\n                        <polygon points=\"152.647 82 176.647 82 176.647 255 152.647 255\"/>\n                        <polygon points=\"356.283 66 380.283 66 380.283 255 356.283 255\"/>\n                        <polygon points=\"559.92 229 583.92 229 583.92 255 559.92 255\"/>\n                        <polygon points=\"101.738 115 125.738 115 125.738 255 101.738 255\"/>\n                        <polygon points=\"305.374 42 329.374 42 329.374 255 305.374 255\"/>\n                        <polygon points=\"509.011 201 533.011 201 533.011 255 509.011 255\"/>\n                        <polygon points=\"203.556 19 227.556 19 227.556 255 203.556 255\"/>\n                        <polygon points=\"407.192 115 431.192 115 431.192 255 407.192 255\"/>\n                    </g>\n                </g>\n                <polygon fill=\"#D2D6DF\" fill-rule=\"nonzero\" points=\"0 295 711 295 711 294 0 294\"/>\n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport const donutLoadingMarkup = `\n        <svg class=\"load-state donut-load-state\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 376 331\">\n            ${linearGradient}\n            <g fill=\"none\" fill-rule=\"evenodd\">\n                <g transform=\"translate(116 107)\">\n                    <circle cx=\"72\" cy=\"72\" r=\"72\" stroke=\"#EFF2F5\" stroke-linecap=\"round\" stroke-width=\"9.6\"/>\n                    <path stroke=\"#D2D6DF\" stroke-width=\"19.2\" d=\"M126.153559,119.524055 C137.264629,106.845712 144,90.2321371 144,72.0444604 C144,32.2554036 111.764502,0 72,0\"/>\n                    <circle cx=\"72\" cy=\"72\" r=\"67.2\" fill=\"#FFF\"/>\n                </g>\n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport const lineLoadingMarkup = `\n        <svg\n            class=\"load-state line-load-state\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 711 325\"\n        >\n            ${linearGradient}\n            <g transform=\"translate(-10 -10)\">\n                <path\n                    id=\"chart-bg\"\n                    class=\"chart-bg\"\n                    style=\"stroke:#C3C6CF;\"\n                    d=\"M3.4,216.5h707.3 M3.4,160.5h707.3 M3.3,103.5h707.3 M3.3,48.5h707.6 M0.4,276.6H710H0.4z\"\n                />\n                <polyline\n                    id=\"chart-line\"\n                    class=\"chart-line\"\n                    style=\"stroke:#C3C6CF;stroke-width:4;fill:none;\"\n                    points=\"8.8,175.8 62.4,237.7 116.1,184.7 169.7,175.8 223.3,57 277,176.8 330.6,176.8 384.3,122.5 437.9,176.8 491.6,176.8 545.2,218.4 598.8,122.5 652.5,184.7 706.1,135.1 \"\n                />\n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport const stackedAreaLoadingMarkup = `\n        <svg\n            class=\"load-state stacked-area-load-state\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 711 325\"\n        >\n            ${linearGradient}\n            <path\n                id=\"chart-bg\"\n                class=\"chart-bg\"\n                style=\"stroke:#C3C6CF;\"\n                d=\"M3.4,216.5h707.3 M3.4,160.5h707.3 M3.3,103.5h707.3 M3.3,48.5h707.6 M0.4,276.6H710H0.4z\"\n            />\n            <g transform=\"translate(20 53)\">\n                <path\n                    id=\"chart-area\"\n                    strokeLinecap=\"square\"\n                    d=\"M0.34233103,0.593688165 L709.977885,0.593688189\"\n                    transform=\"translate(.01 227.976)\"\n                />\n                <path fill=\"#C3C6CF\" d=\"M0.528124801,224.014648 L0.528124801,177.734375 L53.3834796,177.734375 C71.5390789,177.734375 86.8277373,168.972754 101.240241,151.662202 C112.578335,138.044258 121.139826,123.110227 136.974507,91.596773 C137.343842,90.8617404 139.300293,86.9654028 139.856735,85.8583549 C155.041692,55.6476711 163.354313,41.0906306 174.319873,27.7179171 C188.951312,9.87459412 204.885845,0.5 223.830634,0.5 C242.123071,0.5 257.291724,8.27027858 270.907992,23.1359289 C281.228683,34.4036118 289.135925,47.1272372 302.542017,72.085092 C303.275893,73.4513345 306.289669,79.0766612 307.063369,80.5168656 C321.41025,107.222876 330.088083,120.97663 341.470704,132.92446 C355.88994,148.05969 371.908861,155.792969 391.654853,155.792969 C412.142049,155.792969 428.763593,152.325614 442.880698,145.765582 C454.197328,140.506893 463.373931,133.679865 473.786035,123.626931 C476.528659,120.978915 486.44777,110.911455 488.791866,108.6483 C502.907223,95.0203436 514.194325,88.9355469 530.135322,88.9355469 C546.532652,88.9355469 559.505909,97.338499 575.973261,115.41103 C579.723508,119.526837 593.103621,135.086814 592.915496,134.871799 C605.09738,148.794859 614.368835,157.635549 625.072091,164.58539 C638.386599,173.230769 652.701021,177.734375 669.279853,177.734375 L673.779853,177.734375 L673.779853,224.014648 L0.528124801,224.014648 Z\" />\n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport const sparkLineLoadingMarkup = `\n        <svg\n            class=\"load-state sparkline-load-state\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 711 325\"\n        >\n            ${linearGradient}\n            <g transform=\"translate(0 50)\">\n                <path fill=\"#C3C6CF\" d=\"M0.528124801,224.014648 L0.528124801,177.734375 L53.3834796,177.734375 C71.5390789,177.734375 86.8277373,168.972754 101.240241,151.662202 C112.578335,138.044258 121.139826,123.110227 136.974507,91.596773 C137.343842,90.8617404 139.300293,86.9654028 139.856735,85.8583549 C155.041692,55.6476711 163.354313,41.0906306 174.319873,27.7179171 C188.951312,9.87459412 204.885845,0.5 223.830634,0.5 C242.123071,0.5 257.291724,8.27027858 270.907992,23.1359289 C281.228683,34.4036118 289.135925,47.1272372 302.542017,72.085092 C303.275893,73.4513345 306.289669,79.0766612 307.063369,80.5168656 C321.41025,107.222876 330.088083,120.97663 341.470704,132.92446 C355.88994,148.05969 371.908861,155.792969 391.654853,155.792969 C412.142049,155.792969 428.763593,152.325614 442.880698,145.765582 C454.197328,140.506893 463.373931,133.679865 473.786035,123.626931 C476.528659,120.978915 486.44777,110.911455 488.791866,108.6483 C502.907223,95.0203436 514.194325,88.9355469 530.135322,88.9355469 C546.532652,88.9355469 559.505909,97.338499 575.973261,115.41103 C579.723508,119.526837 593.103621,135.086814 592.915496,134.871799 C605.09738,148.794859 614.368835,157.635549 625.072091,164.58539 C638.386599,173.230769 652.701021,177.734375 669.279853,177.734375 L773.779853,177.734375 L773.77853,204.014648 L0.528124801,204.014648 Z\"/>    \n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport const brushLoadingMarkup = `\n        <svg\n            class=\"load-state brush-load-state\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 711 325\"\n        >\n            ${linearGradient}\n            <g transform=\"translate(0 50)\">\n                <path\n                    id=\"chart-area\"\n                    strokeLinecap=\"square\"\n                    d=\"M0.34233103,0.593688165 L709.977885,0.593688189\"\n                    transform=\"translate(.01 227.976)\"\n                />\n                <path fill=\"#C3C6CF\" d=\"M0.528124801,224.014648 L0.528124801,177.734375 L53.3834796,177.734375 C71.5390789,177.734375 86.8277373,168.972754 101.240241,151.662202 C112.578335,138.044258 121.139826,123.110227 136.974507,91.596773 C137.343842,90.8617404 139.300293,86.9654028 139.856735,85.8583549 C155.041692,55.6476711 163.354313,41.0906306 174.319873,27.7179171 C188.951312,9.87459412 204.885845,0.5 223.830634,0.5 C242.123071,0.5 257.291724,8.27027858 270.907992,23.1359289 C281.228683,34.4036118 289.135925,47.1272372 302.542017,72.085092 C303.275893,73.4513345 306.289669,79.0766612 307.063369,80.5168656 C321.41025,107.222876 330.088083,120.97663 341.470704,132.92446 C355.88994,148.05969 371.908861,155.792969 391.654853,155.792969 C412.142049,155.792969 428.763593,152.325614 442.880698,145.765582 C454.197328,140.506893 463.373931,133.679865 473.786035,123.626931 C476.528659,120.978915 486.44777,110.911455 488.791866,108.6483 C502.907223,95.0203436 514.194325,88.9355469 530.135322,88.9355469 C546.532652,88.9355469 559.505909,97.338499 575.973261,115.41103 C579.723508,119.526837 593.103621,135.086814 592.915496,134.871799 C605.09738,148.794859 614.368835,157.635549 625.072091,164.58539 C638.386599,173.230769 652.701021,177.734375 669.279853,177.734375 L673.779853,177.734375 L673.779853,224.014648 L0.528124801,224.014648 Z\" />\n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport default {\n    linearGradient,\n    barLoadingMarkup,\n    donutLoadingMarkup,\n    lineLoadingMarkup,\n    brushLoadingMarkup,\n    sparkLineLoadingMarkup,\n    stackedAreaLoadingMarkup,\n};\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","const localeTimeMap = {\n    minute: { minute: 'numeric' },\n    hour: { hour: 'numeric' },\n    day: { day: 'numeric' },\n    daymonth: { day: 'numeric', month: 'short' },\n    month: { month: 'short' },\n    year: { year: 'numeric' },\n};\n\n/**\n * Calculates a new date by summing a given amount of days to a given date\n * @param  {String}  startDate      Date\n * @param  {Number}  days           Number of days to add\n * @return {String}                 Offsetted date\n * @private\n */\nexport const addDays = (startDate, days) => {\n    const result = new Date(startDate);\n\n    result.setDate(result.getDate() + days);\n\n    return String(result);\n};\n\n/**\n * Calculates difference between dates in days\n * @param  {String}  startDate  Date in string form\n * @param  {String}  endDate    Date in string form\n * @return {Number}             Number of days between dates\n * @private\n */\nexport const diffDays = (startDate, endDate) => {\n    const oneDayInMilliseconds = 24 * 60 * 60 * 1000;\n\n    return Math.ceil(\n        Math.abs(\n            (new Date(startDate).getTime() - new Date(endDate).getTime()) /\n                oneDayInMilliseconds\n        )\n    );\n};\n\n/**\n * Takes a number representing milliseconds and convert to days\n * @param  {Number} milliseconds    Any number of days in milliseconds\n * @return {Number}                 Number of days that the input represents\n * @private\n */\nexport const convertMillisecondsToDays = (milliseconds) =>\n    Math.ceil(milliseconds / (24 * 60 * 60 * 1000));\n\n/**\n * Takes a locale (string) and the format to return and returns a function to format dates\n * @param  {String} locale              Locale tag eg. en-US, fr-FR, ru-RU\n * @param  {String} [timeUnit='day']    One of minute, hour, day, daymonth, month, year\n * @return {Function}                   Function that formats dates in the proper locale\n * @private\n */\nexport const getLocaleDateFormatter = (locale, timeUnit = 'day') => {\n    let options = localeTimeMap[timeUnit];\n    let formatter = new Intl.DateTimeFormat(locale, options);\n\n    return (date) => formatter.format(date);\n};\n\nexport default {\n    addDays,\n    convertMillisecondsToDays,\n    diffDays,\n    getLocaleDateFormatter,\n};\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import { timeHour, timeDay, timeMonth, timeYear } from 'd3-time';\nimport { timeFormat } from 'd3-time-format';\n\nimport { axisTimeCombinations, timeBenchmarks } from './constants';\nimport { convertMillisecondsToDays, getLocaleDateFormatter } from './date';\n\nconst singleTickWidth = 20;\nconst horizontalTickSpacing = 50;\nconst minEntryNumForDayFormat = 5;\n\nconst formatMap = {\n    minute: timeFormat('%M m'),\n    hour: timeFormat('%H %p'),\n    day: timeFormat('%e'),\n    daymonth: timeFormat('%d %b'),\n    month: timeFormat('%b'),\n    year: timeFormat('%Y'),\n};\nconst settingsToMajorTickMap = {\n    [axisTimeCombinations.MINUTE_HOUR]: timeHour.every(1),\n    [axisTimeCombinations.HOUR_DAY]: timeDay.every(1),\n    [axisTimeCombinations.DAY_MONTH]: timeMonth.every(1),\n    [axisTimeCombinations.MONTH_YEAR]: timeYear.every(1),\n};\n\n/**\n * Figures out the proper settings from the current time span\n * @param  {Number} timeSpan    Span of time charted by the graph in milliseconds\n * @return {String}             Type of settings for the given timeSpan\n * @private\n */\nconst getAxisSettingsFromTimeSpan = (timeSpan) => {\n    let { ONE_YEAR, ONE_DAY } = timeBenchmarks;\n    let settings;\n\n    if (timeSpan < ONE_DAY) {\n        settings = axisTimeCombinations.HOUR_DAY;\n    } else if (timeSpan < ONE_YEAR) {\n        settings = axisTimeCombinations.DAY_MONTH;\n    } else {\n        settings = axisTimeCombinations.MONTH_YEAR;\n    }\n\n    return settings;\n};\n\n/**\n * Calculates the maximum number of ticks for the x axis\n * @param  {Number} width               Chart width\n * @param  {Number} dataPointNumber     Number of entries on the data\n * @return {Number}                     Number of ticks to render\n * @private\n */\nconst getMaxNumOfHorizontalTicks = (width, dataPointNumber) => {\n    let ticksForWidth = Math.ceil(\n        width / (singleTickWidth + horizontalTickSpacing)\n    );\n\n    return dataPointNumber < minEntryNumForDayFormat\n        ? timeDay\n        : Math.min(dataPointNumber, ticksForWidth);\n};\n\n/**\n * Calculates the maximum number of ticks for the x axis\n * with respect to number ranges\n * @param  {Number} width               Chart width\n * @param  {Number} dataPointNumber     Number of entries on the data\n * @return {Number}                     Number of ticks to render\n * @private\n */\nconst getMaxNumOfHorizontalTicksForNumberRanges = (width, dataPointNumber) => {\n    let ticksForWidth = Math.ceil(\n        width / (singleTickWidth + horizontalTickSpacing)\n    );\n\n    return Math.min(dataPointNumber, ticksForWidth);\n};\n\n/**\n * Returns tick object to be used when building the x axis\n * @param {dataByDate} dataByDate       Chart data ordered by Date\n * @param {Number} width                Chart width\n * @param {String} [settings=null]      Optional forced settings for axis, a combination of one of minute, hour, day, daymonth, month, year separated by '-'\n * @param {String} [locale=null]        Optional forced locale\n * @return {object}                     Tick settings for major and minr axis\n * @private\n */\nexport const getTimeSeriesAxis = (\n    dataByDate,\n    width,\n    settings = null,\n    locale = null\n) => {\n    const firstDate = new Date(dataByDate[0].date);\n    const lastDate = new Date(dataByDate[dataByDate.length - 1].date);\n    const dateTimeSpan = lastDate - firstDate;\n\n    if (\n        locale &&\n        (typeof Intl === 'undefined' ||\n            (typeof Intl === 'object' && !Intl.DateTimeFormat))\n    ) {\n        locale = null;\n    }\n\n    if (!settings) {\n        settings = getAxisSettingsFromTimeSpan(dateTimeSpan);\n    }\n\n    const [minor, major] = settings.split('-');\n    const majorTickValue = settingsToMajorTickMap[settings];\n    const minorTickValue = getMaxNumOfHorizontalTicks(\n        width,\n        convertMillisecondsToDays(dateTimeSpan)\n    );\n\n    return {\n        minor: {\n            format: locale\n                ? getLocaleDateFormatter(locale, minor)\n                : formatMap[minor],\n            tick: minorTickValue,\n        },\n        major: {\n            format: locale\n                ? getLocaleDateFormatter(locale, major)\n                : formatMap[major],\n            tick: majorTickValue,\n        },\n    };\n};\n\n/**\n * Returns tick object to be used when building the x axis\n * @param {dataSorted} dataSorted       Chart data ordered by Date\n * @param {Number} width                Chart width\n * @param {String} [settings=null]      Optional forced settings for axis\n * @return {object} tick settings for minor axis\n * @private\n */\nexport const getSortedNumberAxis = (dataSorted, width) => {\n    const firstEntry = dataSorted[0].date;\n    const lastEntry = dataSorted[dataSorted.length - 1].date;\n    const timeSpan = lastEntry - firstEntry;\n\n    const minorTickValue = getMaxNumOfHorizontalTicksForNumberRanges(\n        width,\n        timeSpan\n    );\n\n    return {\n        tick: minorTickValue,\n    };\n};\n\nexport default {\n    getTimeSeriesAxis,\n    getSortedNumberAxis,\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__45__;","import { extent, max } from 'd3-array';\nimport { axisBottom } from 'd3-axis';\nimport { brushX } from 'd3-brush';\nimport { scaleLinear, scaleTime } from 'd3-scale';\nimport { area } from 'd3-shape';\nimport { dispatch } from 'd3-dispatch';\nimport { select, event } from 'd3-selection';\nimport { timeFormat } from 'd3-time-format';\nimport 'd3-transition';\n\nimport colorHelper from '../helpers/color';\nimport timeAxisHelper from '../helpers/axis';\nimport {\n    axisTimeCombinations,\n    timeIntervals,\n    motion,\n    curveMap,\n} from '../helpers/constants';\nimport { uniqueId } from '../helpers/number';\nimport { brushLoadingMarkup } from '../helpers/load';\n\n/**\n * Brush Chart reusable API class that renders a\n * simple and configurable brush chart.\n *\n * @module Brush\n * @tutorial brush\n * @requires d3-array\n * @requires d3-axis\n * @requires d3-brush\n * @requires d3-ease\n * @requires d3-scale\n * @requires d3-shape\n * @requires d3-dispatch\n * @requires d3-selection\n * @requires d3-time\n * @requires d3-transition\n * @requires d3-time-format\n *\n * @example\n * let brushChart = brush();\n *\n * brushChart\n *     .height(500)\n *     .width(800);\n *\n * d3Selection.select('.css-selector')\n *     .datum(dataset)\n *     .call(brushChart);\n */\n\n/**\n * @typedef BrushChartData\n * @type {Object[]}\n * @property {Number} value        Value to chart (required)\n * @property {Date} date           Date of the value in ISO8601 format (required)\n *\n * @example\n * [\n *     {\n *         value: 1,\n *         date: '2011-01-06T00:00:00Z'\n *     },\n *     {\n *         value: 2,\n *         date: '2011-01-07T00:00:00Z'\n *     }\n * ]\n */\n\nexport default function module() {\n    let margin = {\n            top: 20,\n            right: 20,\n            bottom: 30,\n            left: 20,\n        },\n        width = 960,\n        height = 500,\n        isLoading = false,\n        data,\n        dataZeroed,\n        svg,\n        isAnimated = false,\n        animationDuration = motion.duration,\n        dateLabel = 'date',\n        valueLabel = 'value',\n        dateRange = [null, null],\n        isLocked = false,\n        chartWidth,\n        chartHeight,\n        xScale,\n        yScale,\n        xAxis,\n        xSubAxis,\n        xAxisFormat = null,\n        xTicks = null,\n        monthAxisPadding = 30,\n        xAxisCustomFormat = null,\n        locale,\n        brush,\n        chartBrush,\n        brushArea,\n        areaCurve = 'monotoneX',\n        handle,\n        tickPadding = 5,\n        chartGradientEl,\n        gradient = colorHelper.colorGradients.greenBlue,\n        gradientId = uniqueId('brush-area-gradient'),\n        roundingTimeInterval = 'timeDay',\n        // Dispatcher object to broadcast the mouse events\n        // @see {@link https://github.com/d3/d3/blob/master/API.md#dispatches-d3-dispatch}\n        dispatcher = dispatch('customBrushStart', 'customBrushEnd'),\n        // extractors\n        getValue = ({ value }) => value,\n        getDate = ({ date }) => date;\n\n    const acceptNullValue = (value) => (value === null ? null : +value);\n\n    /**\n     * This function creates the graph using the selection as container\n     * @param  {D3Selection} _selection A d3 selection that represents\n     *                                  the container(s) where the chart(s) will be rendered\n     * @param {BrushChartData} _data The data to attach and generate the chart\n     */\n    function exports(_selection) {\n        _selection.each(function (_data) {\n            chartWidth = width - margin.left - margin.right;\n            chartHeight = height - margin.top - margin.bottom;\n            data = cleanData(cloneData(_data));\n\n            buildSVG(this);\n            if (isLoading) {\n                drawLoadingState();\n\n                return;\n            }\n            buildScales();\n            buildAxis();\n            cleanLoadingState();\n            buildGradient();\n            buildBrush();\n            drawArea();\n            drawAxis();\n            drawBrush();\n            drawHandles();\n        });\n    }\n\n    /**\n     * Creates the d3 x axis, setting orientation\n     * @private\n     */\n    function buildAxis() {\n        let minor, major;\n\n        if (xAxisFormat === 'custom' && typeof xAxisCustomFormat === 'string') {\n            minor = {\n                tick: xTicks,\n                format: timeFormat(xAxisCustomFormat),\n            };\n            major = null;\n        } else {\n            ({ minor, major } = timeAxisHelper.getTimeSeriesAxis(\n                data,\n                width,\n                xAxisFormat\n            ));\n\n            xSubAxis = axisBottom(xScale)\n                .ticks(major.tick)\n                .tickSize(0, 0)\n                .tickFormat(major.format);\n        }\n\n        xAxis = axisBottom(xScale)\n            .ticks(minor.tick)\n            .tickSize(10, 0)\n            .tickPadding([tickPadding])\n            .tickFormat(minor.format);\n\n        drawHorizontalExtendedLine();\n    }\n\n    /**\n     * Creates the brush element and attaches a listener\n     * @return {void}\n     */\n    function buildBrush() {\n        brush = brushX()\n            .extent([\n                [0, 0],\n                [chartWidth, chartHeight],\n            ])\n            .on('brush', handleBrushStart)\n            .on('end', handleBrushEnd);\n    }\n\n    /**\n     * Builds containers for the chart, the axis and a wrapper for all of them\n     * Also applies the Margin convention\n     * @private\n     */\n    function buildContainerGroups() {\n        const container = svg\n            .append('g')\n            .classed('container-group', true)\n            .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n        svg.append('g').classed('loading-state-group', true);\n\n        container.append('g').classed('chart-group', true);\n        container\n            .append('g')\n            .classed('x-axis-group', true)\n            .append('g')\n            .classed('x axis', true);\n        container\n            .selectAll('.x-axis-group')\n            .append('g')\n            .classed('axis sub-x', true);\n        container.append('g').classed('brush-group', true);\n        container.append('g').classed('metadata-group', true);\n    }\n\n    /**\n     * Creates the gradient on the area\n     * @return {void}\n     */\n    function buildGradient() {\n        if (!chartGradientEl) {\n            chartGradientEl = svg\n                .select('.metadata-group')\n                .append('linearGradient')\n                .attr('id', gradientId)\n                .attr('gradientUnits', 'userSpaceOnUse')\n                .attr('x1', 0)\n                .attr('x2', xScale(data[data.length - 1].date))\n                .attr('y1', 0)\n                .attr('y2', 0)\n                .selectAll('stop')\n                .data([\n                    { offset: '0%', color: gradient[0] },\n                    { offset: '100%', color: gradient[1] },\n                ])\n                .enter()\n                .append('stop')\n                .attr('offset', ({ offset }) => offset)\n                .attr('stop-color', ({ color }) => color);\n        }\n    }\n\n    /**\n     * Creates the x and y scales of the graph\n     * @private\n     */\n    function buildScales() {\n        xScale = scaleTime()\n            .domain(extent(data, getDate))\n            .range([0, chartWidth]);\n\n        yScale = scaleLinear()\n            .domain([0, max(data, getValue)])\n            .range([chartHeight, 0]);\n    }\n\n    /**\n     * Builds the SVG element that will contain the chart\n     * @param  {HTMLElement} container DOM element that will work as the container of the graph\n     * @private\n     */\n    function buildSVG(container) {\n        if (!svg) {\n            svg = select(container)\n                .append('svg')\n                .classed('britechart brush-chart', true);\n\n            buildContainerGroups();\n        }\n\n        svg.attr('viewBox', [0, 0, width, height])\n            .attr('style', 'max-width: 100%; height: auto; height: intrinsic;')\n            .attr('width', width)\n            .attr('height', height);\n    }\n\n    /**\n     * Cleaning data casting the values and dates to the proper type while keeping\n     * the rest of properties on the data\n     * @param  {BrushChartData} originalData        Raw data from the container\n     * @return {BrushChartData}                     Clean data\n     * @private\n     */\n    function cleanData(originalData) {\n        const cleanData = originalData.reduce((acc, d) => {\n            d.date = new Date(d[dateLabel]);\n            d.value = acceptNullValue(d[valueLabel]);\n\n            return [...acc, d];\n        }, []);\n\n        dataZeroed = cleanData.map((d) => {\n            return { ...d, value: d.value === null ? null : 0 };\n        });\n\n        return cleanData;\n    }\n\n    /**\n     * Cleans the loading state\n     * @private\n     */\n    function cleanLoadingState() {\n        svg.select('.loading-state-group svg').remove();\n    }\n\n    /**\n     * Clones the passed array of data\n     * @param  {Object[]} dataToClone Data to clone\n     * @return {Object[]}             Cloned data\n     */\n    function cloneData(dataToClone) {\n        return JSON.parse(JSON.stringify(dataToClone));\n    }\n\n    /**\n     * Draws the x axis on the svg object within its group\n     *\n     * @private\n     */\n    function drawAxis() {\n        svg.select('.x-axis-group .axis.x')\n            .attr('transform', `translate(0, ${chartHeight})`)\n            .call(xAxis);\n\n        if (xAxisFormat !== 'custom') {\n            svg.select('.x-axis-group .axis.sub-x')\n                .attr(\n                    'transform',\n                    `translate(0, ${chartHeight + monthAxisPadding})`\n                )\n                .call(xSubAxis);\n        }\n    }\n\n    /**\n     * Draws the area that is going to represent the data\n     *\n     * @return {void}\n     */\n    function drawArea() {\n        if (brushArea) {\n            svg.selectAll('.brush-area').remove();\n            svg.selectAll('.missing-brush-area').remove();\n        }\n\n        // Create and configure the area generator\n        brushArea = area()\n            .defined(({ value }) => !isNaN(parseInt(value, 10)))\n            .x(({ date }) => xScale(date))\n            .y0(chartHeight)\n            .y1(({ value }) => yScale(value))\n            .curve(curveMap[areaCurve]);\n\n        if (isAnimated) {\n            // Add a missing brush area when there is missing data\n            if (\n                dataZeroed.filter(brushArea.defined()).length !==\n                dataZeroed.length\n            ) {\n                svg.select('.chart-group')\n                    .append('path')\n                    .datum(dataZeroed.filter(brushArea.defined()))\n                    .attr('class', 'missing-brush-area')\n                    .attr('d', brushArea);\n\n                svg.select('.chart-group')\n                    .selectAll('.missing-brush-area')\n                    .datum(data.filter(brushArea.defined()))\n                    .transition()\n                    .duration(animationDuration)\n                    .attr('d', brushArea);\n            }\n\n            // Create the area path with zeroed data\n            svg.select('.chart-group')\n                .append('path')\n                .datum(dataZeroed)\n                .attr('class', 'brush-area')\n                .attr('d', brushArea);\n\n            // Create the area path\n            svg.select('.chart-group')\n                .selectAll('.brush-area')\n                .datum(data)\n                .transition()\n                .duration(animationDuration)\n                .attr('d', brushArea);\n        } else {\n            // Add a missing brush area when there is missing data\n            if (data.filter(brushArea.defined()).length !== data.length) {\n                svg.select('.chart-group')\n                    .append('path')\n                    .datum(data.filter(brushArea.defined()))\n                    .attr('class', 'missing-brush-area')\n                    .attr('d', brushArea);\n            }\n\n            // Create the area path\n            svg.select('.chart-group')\n                .append('path')\n                .datum(data)\n                .attr('class', 'brush-area')\n                .attr('d', brushArea);\n        }\n    }\n\n    /**\n     * Draws the Brush components on its group\n     * @return {void}\n     */\n    function drawBrush() {\n        chartBrush = svg.select('.brush-group').call(brush);\n\n        if (isAnimated) {\n            chartBrush.style('opacity', 0);\n\n            setTimeout(() => {\n                chartBrush\n                    .transition()\n                    .duration(animationDuration)\n                    .style('opacity', 1);\n            }, 0);\n        }\n\n        // Update the height of the brushing rectangle\n        chartBrush\n            .selectAll('rect')\n            .classed('brush-rect', true)\n            .attr('height', chartHeight);\n\n        chartBrush.selectAll('.selection').attr('fill', `url(#${gradientId})`);\n    }\n\n    /**\n     * Draws a handle for the Brush section\n     * @return {void}\n     */\n    function drawHandles() {\n        let handleFillColor = colorHelper.colorSchemasHuman.grey[1];\n\n        // Styling\n        handle = chartBrush\n            .selectAll('.handle.brush-rect')\n            .style('fill', handleFillColor);\n    }\n\n    /**\n     * Draws a horizontal line to extend x-axis till the edges\n     * @return {void}\n     * @private\n     */\n    function drawHorizontalExtendedLine() {\n        svg.select('.x-axis-group')\n            .selectAll('line.extended-x-line')\n            .data([0])\n            .enter()\n            .append('line')\n            .attr('class', 'extended-x-line')\n            .attr('x1', 0)\n            .attr('x2', chartWidth)\n            .attr('y1', chartHeight)\n            .attr('y2', chartHeight);\n    }\n\n    /**\n     * Draws the loading state\n     * @private\n     */\n    function drawLoadingState() {\n        svg.select('.loading-state-group').html(brushLoadingMarkup);\n    }\n\n    /**\n     * When a brush event starts, we can extract info from the extension\n     * of the brush.\n     *\n     * @return {void}\n     */\n    function handleBrushStart() {\n        const selection = event.selection;\n        let newSelection;\n\n        if (!selection) {\n            return;\n        }\n\n        if (isLocked) {\n            const lockedSelectionSize = Math.floor(\n                xScale(new Date(dateRange[1])) - xScale(new Date(dateRange[0]))\n            );\n            const selectedRange = Math.floor(selection[1] - selection[0]);\n\n            if (\n                selectedRange < lockedSelectionSize ||\n                selectedRange > lockedSelectionSize\n            ) {\n                // We round values so we don't get into an infinite loop\n                newSelection = [\n                    Math.floor(selection[0]),\n                    Math.floor(selection[0]) + lockedSelectionSize,\n                ];\n                brush.move(chartBrush, newSelection);\n            } else {\n                newSelection = selection;\n            }\n        } else {\n            newSelection = selection;\n        }\n        dispatcher.call(\n            'customBrushStart',\n            this,\n            newSelection.map(xScale.invert)\n        );\n    }\n\n    /**\n     * Processes the end brush event, snapping the boundaries to days\n     * as showed on the example on https://bl.ocks.org/mbostock/6232537\n     * @return {void}\n     * @private\n     */\n    function handleBrushEnd() {\n        if (!event.sourceEvent) {\n            return; // Only transition after input.\n        }\n\n        let dateExtentRounded = [null, null];\n        const selection = event.selection;\n\n        if (selection) {\n            let dateExtent = selection.map(xScale.invert);\n\n            dateExtentRounded = dateExtent.map(\n                timeIntervals[roundingTimeInterval].round\n            );\n\n            // If empty when rounded, use floor & ceil instead.\n            if (dateExtentRounded[0] >= dateExtentRounded[1]) {\n                dateExtentRounded[0] = timeIntervals[\n                    roundingTimeInterval\n                ].floor(dateExtent[0]);\n                dateExtentRounded[1] = timeIntervals[\n                    roundingTimeInterval\n                ].offset(dateExtentRounded[0]);\n            }\n\n            select(this)\n                .transition()\n                .call(event.target.move, dateExtentRounded.map(xScale));\n        } else {\n            // When no selection (clicked on brush without dragging)\n            if (isLocked) {\n                setBrushByDates(...dateRange);\n            }\n        }\n\n        dispatcher.call('customBrushEnd', this, dateExtentRounded);\n    }\n\n    /**\n     * Sets a new brush extent within the passed dates\n     * @param {String | Date} dateA Initial Date\n     * @param {String | Date} dateB End Date\n     */\n    function setBrushByDates(dateA, dateB) {\n        let selection = null;\n\n        if (dateA !== null) {\n            if (new Date(dateA) < new Date(dateB)) {\n                selection = [xScale(new Date(dateA)), xScale(new Date(dateB))];\n            } else {\n                // eslint-disable-next-line no-console\n                console.error(\n                    'dateRange Error: End date should be posterior to startDate!'\n                );\n            }\n        }\n\n        brush.move(chartBrush, selection);\n    }\n\n    // API\n    /**\n     * Gets or Sets the duration of the area animation\n     * @param  {Number} _x=1200         Desired animation duration for the graph\n     * @return {duration | module}      Current animation duration or Chart module to chain calls\n     * @public\n     */\n    exports.animationDuration = function (_x) {\n        if (!arguments.length) {\n            return animationDuration;\n        }\n        animationDuration = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the area curve of the stacked area.\n     * @param {String} [_x='basis']     Desired curve for the area. Other options are:\n     * monotoneX, natural, linear, monotoneY, step, stepAfter, stepBefore, cardinal, and\n     * catmullRom. Visit https://github.com/d3/d3-shape#curves for more information.\n     * @return {String | module}            Current area curve setting or Chart module to chain calls\n     * @public\n     * @example brushChart.areaCurve('step')\n     */\n    exports.areaCurve = function (_x) {\n        if (!arguments.length) {\n            return areaCurve;\n        }\n        areaCurve = _x;\n\n        return this;\n    };\n\n    /**\n     * Exposes the constants to be used to force the x axis to respect a certain granularity\n     * current options: MINUTE_HOUR, HOUR_DAY, DAY_MONTH, MONTH_YEAR\n     * @example\n     *     brush.xAxisCustomFormat(brush.axisTimeCombinations.HOUR_DAY)\n     */\n    exports.axisTimeCombinations = axisTimeCombinations;\n\n    /**\n     * Gets or Sets the dateRange for the selected part of the brush\n     * @param  {String[]} [_x=[null, null]]     Desired dateRange for the graph\n     * @return { dateRange | module}            Current dateRange or Chart module to chain calls\n     * @public\n     */\n    exports.dateRange = function (_x) {\n        if (!arguments.length) {\n            return dateRange;\n        }\n        dateRange = _x;\n\n        if (Array.isArray(dateRange)) {\n            setBrushByDates(...dateRange);\n        }\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the gradient of the chart\n     * @param  {String[]} [_x=colorHelper.colorGradients.greenBlue]    Desired gradient for the graph\n     * @return {String | Module}    Current gradient or Chart module to chain calls\n     * @public\n     */\n    exports.gradient = function (_x) {\n        if (!arguments.length) {\n            return gradient;\n        }\n        gradient = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the height of the chart\n     * @param  {Number} _x          Desired width for the graph\n     * @return {Number | Module}    Current height or Chart module to chain calls\n     * @public\n     */\n    exports.height = function (_x) {\n        if (!arguments.length) {\n            return height;\n        }\n        height = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n     * @param  {Boolean} _x = false     Desired animation flag\n     * @return {Boolean | module}       Current isAnimated flag or Chart module\n     * @public\n     */\n    exports.isAnimated = function (_x) {\n        if (!arguments.length) {\n            return isAnimated;\n        }\n        isAnimated = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the loading state of the chart\n     * @param  {boolean} flag       Desired value for the loading state\n     * @return {boolean | module}   Current loading state flag or Chart module to chain calls\n     * @public\n     */\n    exports.isLoading = function (_flag) {\n        if (!arguments.length) {\n            return isLoading;\n        }\n        isLoading = _flag;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the isLocked property of the brush, enforcing the initial brush size set with dateRange\n     * @param  {Boolean} _x = false     Whether the brush window is locked, requires a value set with '.dateRange` when true\n     * @return {Boolean | module}       Current isLocked flag or Chart module\n     * @public\n     */\n    exports.isLocked = function (_x) {\n        if (!arguments.length) {\n            return isLocked;\n        }\n        isLocked = _x;\n\n        return this;\n    };\n\n    /**\n     * Pass language tag for the tooltip to localize the date.\n     * Feature uses Intl.DateTimeFormat, for compatability and support, refer to\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n     * @param  {String} _x              Must be a language tag (BCP 47) like 'en-US' or 'fr-FR'\n     * @return { (String|Module) }      Current locale or module to chain calls\n     */\n    exports.locale = function (_x) {\n        if (!arguments.length) {\n            return locale;\n        }\n        locale = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the margin of the chart\n     * @param  {Object} _x          Margin object to get/set\n     * @return {Object | Module}    Current margin or Chart module to chain calls\n     * @public\n     */\n    exports.margin = function (_x) {\n        if (!arguments.length) {\n            return margin;\n        }\n        margin = {\n            ...margin,\n            ..._x,\n        };\n\n        return this;\n    };\n\n    /**\n     * Date range\n     * @typedef DateExtent\n     * @type {Date[]}\n     * @property {Date} 0 Lower bound date selection\n     * @property {Date} 1 Upper bound date selection\n     * @see {@link https://github.com/d3/d3-brush#brushSelection|d3-brush:brushSelection}\n     */\n\n    /**\n     * Event indicating when the brush moves\n     * @event customBrushStart\n     * @type {module:Brush~DateExtent}\n     * @see {@link https://github.com/d3/d3-brush#brush_on|d3-brush:on(brush)}\n     */\n\n    /**\n     * Event indicating the end of a brush gesture\n     * @event customBrushEnd\n     * @type {module:Brush~DateExtent}\n     * @see {@link https://github.com/d3/d3-brush#brush_on|d3-brush:on(end)}\n     */\n\n    /**\n     * @callback eventCallback\n     * @param {module:Brush~DateExtent} dateExtent Date range\n     */\n\n    /**\n     * Adds, removes, or gets the callback for the specified typenames.\n     * @param {String} typenames One or more event type names, delimited by a space\n     * @param {module:Brush~eventCallback} [callback] Callback to register\n     * @return {module:Brush}\n     * @listens customBrushStart\n     * @listens customBrushEnd\n     * @see {@link https://github.com/d3/d3-dispatch/blob/master/README.md#dispatch_on|d3-dispatch:on}\n     * @public\n     */\n    exports.on = function () {\n        let value = dispatcher.on.apply(dispatcher, arguments);\n\n        return value === dispatcher ? exports : value;\n    };\n\n    /**\n     * Gets or Sets the width of the chart\n     * @param  {Number} _x          Desired width for the graph\n     * @return {Number | Module}    Current width or Chart module to chain calls\n     * @public\n     */\n    exports.width = function (_x) {\n        if (!arguments.length) {\n            return width;\n        }\n        width = _x;\n\n        return this;\n    };\n\n    /**\n     * Exposes the ability to force the chart to show a certain x format\n     * It requires a `xAxisFormat` of 'custom' in order to work.\n     * @param  {String} _x              Desired format for x axis, one of the d3.js date formats [here]{@link https://github.com/d3/d3-time-format#locale_format}\n     * @return {String | Module}        Current format or module to chain calls\n     * @public\n     */\n    exports.xAxisCustomFormat = function (_x) {\n        if (!arguments.length) {\n            return xAxisCustomFormat;\n        }\n        xAxisCustomFormat = _x;\n\n        return this;\n    };\n\n    /**\n     * Exposes the ability to force the chart to show a certain x axis grouping\n     * @param  {String} _x          Desired format, a combination of axisTimeCombinations (MINUTE_HOUR, HOUR_DAY, DAY_MONTH, MONTH_YEAR)\n     * Set it to 'custom' to make use of specific formats with xAxisCustomFormat\n     * @return { String|Module }      Current format or module to chain calls\n     * @public\n     * @example\n     *     brushChart.xAxisCustomFormat(brushChart.axisTimeCombinations.HOUR_DAY)\n     */\n    exports.xAxisFormat = function (_x) {\n        if (!arguments.length) {\n            return xAxisFormat;\n        }\n        xAxisFormat = _x;\n\n        return this;\n    };\n\n    /**\n     * Exposes the ability to force the chart to show a certain x ticks. It requires a `xAxisCustomFormat` of 'custom' in order to work.\n     * NOTE: This value needs to be a multiple of 2, 5 or 10. They won't always work as expected, as D3 decides at the end\n     * how many and where the ticks will appear.\n     *\n     * @param  {Number} [_x=null]       Desired number of x axis ticks (multiple of 2, 5 or 10)\n     * @return {Number | Module}        Current number or ticks or module to chain calls\n     * @public\n     */\n    exports.xTicks = function (_x) {\n        if (!arguments.length) {\n            return xTicks;\n        }\n        xTicks = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the rounding time interval of the selection boundary\n     * @param  {roundingTimeInterval} [_x='timeDay'] Desired time interval for the selection, default 'timeDay'.\n     * @return { (roundingTimeInterval | Module) } Current time interval or module to chain calls\n     * @see {@link https://github.com/d3/d3-time#intervals}\n     * @public\n     * @example\n     * All options are:\n     * timeMillisecond, utcMillisecond, timeSecond, utcSecond, timeMinute, utcMinute, timeHour, utcHour, timeDay, utcDay\n     * timeWeek, utcWeek, timeSunday, utcSunday, timeMonday, utcMonday, timeTuesday, utcTuesday, timeWednesday,\n     * utcWednesday, timeThursday, utcThursday, timeFriday, utcFriday, timeSaturday, utcSaturday, timeMonth, utcMonth,\n     * timeYear and utcYear.\n     */\n    exports.roundingTimeInterval = function (_x) {\n        if (!arguments.length) {\n            return roundingTimeInterval;\n        }\n        roundingTimeInterval = _x;\n\n        return this;\n    };\n\n    return exports;\n}\n"],"sourceRoot":""}