{"version":3,"sources":["webpack://core.[name]/webpack/universalModuleDefinition","webpack://core.[name]/webpack/bootstrap","webpack://core.[name]/external \"d3-time\"","webpack://core.[name]/external \"d3-shape\"","webpack://core.[name]/external \"d3-selection\"","webpack://core.[name]/external \"d3-format\"","webpack://core.[name]/external \"d3-array\"","webpack://core.[name]/./src/charts/helpers/constants.js","webpack://core.[name]/external \"d3-scale\"","webpack://core.[name]/./src/charts/helpers/color.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/defineProperty.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/typeof.js","webpack://core.[name]/external \"d3-axis\"","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://core.[name]/./src/charts/helpers/project.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://core.[name]/external \"d3-ease\"","webpack://core.[name]/./src/charts/helpers/export.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/base-64/base64.js","webpack://core.[name]/./src/charts/helpers/style.js","webpack://core.[name]/./src/charts/helpers/number.js","webpack://core.[name]/external \"d3-transition\"","webpack://core.[name]/external \"d3-dispatch\"","webpack://core.[name]/./src/charts/helpers/load.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://core.[name]/./src/charts/helpers/grid.js","webpack://core.[name]/(webpack)/buildin/module.js","webpack://core.[name]/(webpack)/buildin/global.js","webpack://core.[name]/./src/charts/helpers/text.js","webpack://core.[name]/./src/charts/helpers/classes.js","webpack://core.[name]/./src/charts/helpers/locale.js","webpack://core.[name]/external \"d3-color\"","webpack://core.[name]/./src/charts/bar/bar.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__11__","__WEBPACK_EXTERNAL_MODULE__16__","__WEBPACK_EXTERNAL_MODULE__22__","__WEBPACK_EXTERNAL_MODULE__23__","__WEBPACK_EXTERNAL_MODULE__43__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","axisTimeCombinations","MINUTE_HOUR","HOUR_DAY","DAY_MONTH","MONTH_YEAR","CUSTOM","timeBenchmarks","ONE_AND_A_HALF_YEARS","ONE_YEAR","ONE_DAY","hoursHuman","motion","duration","curveMap","linear","curveLinear","basis","curveBasis","cardinal","curveCardinal","catmullRom","curveCatmullRom","monotoneX","curveMonotoneX","monotoneY","curveMonotoneY","natural","curveNatural","step","curveStep","stepAfter","curveStepAfter","stepBefore","curveStepBefore","emptyDonutData","quantity","percentage","timeIntervals","timeMillisecond","utcMillisecond","timeSecond","utcSecond","timeMinute","utcMinute","timeHour","utcHour","timeDay","utcDay","timeWeek","utcWeek","timeSunday","utcSunday","timeMonday","utcMonday","timeTuesday","utcTuesday","timeWednesday","utcWednesday","timeThursday","utcThursday","timeFriday","utcFriday","timeSaturday","utcSaturday","timeMonth","utcMonth","timeYear","utcYear","colorGradients","greenBlue","orangePink","bluePurple","colorGradientsHuman","britecharts","grey","orange","blueGreen","teal","green","yellow","pink","purple","red","colorSchemas","colorSchemasHuman","aloeGreen","greenColor","blueColor","yellowColor","orangeColor","singleColors","pinkColor","purpleColor","singleColorsHuman","obj","configurable","writable","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arr","_typeof","iterator","constructor","len","length","arr2","Array","dataKeyDeprecationMessage","keyName","console","warn","arrayLikeToArray","minLen","toString","slice","from","test","isBrowser","isIE","navigator","msSaveOrOpenBlob","encoder","btoa","base64","encode","config","styleClass","defaultFilename","chartBackground","imageSourceBase","titleFontSize","titleFontFamily","titleTopOffset","this","exportChart","d3svg","filename","title","error","loadImage","convertSvgToHtml","then","img","canvas","createCanvas","width","height","handleImageLoad","attr","html","serializeWithStyles","initializeSerializer","serializer","node","userAgent","search","replace","formatHtmlByBrowser","styleBackgroundString","addBackground","prependTitle","parseInt","document","createElement","createImage","svgHtml","callback","Image","Error","src","encodeURIComponent","match","p1","String","fromCharCode","drawImageOnCanvas","image","getContext","drawImage","extensionType","url","toDataURL","link","href","download","body","appendChild","click","removeChild","downloadCanvas","Promise","res","rej","addEventListener","err","svgWidth","margin","left","freeExports","freeGlobal","global","InvalidCharacterError","message","TABLE","REGEX_SPACE_CHARACTERS","input","a","b","buffer","padding","output","position","charCodeAt","charAt","bitStorage","bitCounter","indexOf","noStyleTags","BASE","HEAD","HTML","META","NOFRAME","NOSCRIPT","PARAM","SCRIPT","STYLE","TITLE","tagNames","computeDefaultStyleByTagName","tagName","defaultStyle","element","computedStyle","getComputedStyle","forEach","style","defaultStylesByTagName","elem","elements","result","cssTexts","nodeType","Node","ELEMENT_NODE","querySelectorAll","el","toUpperCase","cssText","cssPropName","outerHTML","map","idCounter","integerValueFormats","small","limit","format","medium","large","decimalValueFormats","getValueSize","limits","size","calcLinearRegression","dataPoints","x","y","xy","x2","denominator","intercept","slope","minX","min","maxX","max","x1","y1","y2","calculatePercent","total","decimals","percent","isInteger","formatDecimalValue","formatIntegerValue","uniqueId","prefix","id","linearGradient","barLoadingMarkup","donutLoadingMarkup","lineLoadingMarkup","stackedAreaLoadingMarkup","sparkLineLoadingMarkup","brushLoadingMarkup","isArray","iter","TypeError","classArray","scaleLinear","DIR","positionNumber","scale","positionCenter","offset","Math","bandwidth","round","gridBase","orient","range","offsetStart","offsetEnd","hideEdges","ticks","tickValues","classArr","gridBaseGenerator","context","values","hideFirst","hideLast","scaleTicks","apply","domain","shift","pop","getValues","copy","k","selection","initContainer","selectAll","asSelector","data","container","merge","enter","append","asList","line","order","lineExit","exit","lineEnter","exitPosition","isFinite","getAttribute","enterPosition","parentNode","__pos","transition","remove","each","_","arguments","gridHorizontal","gridVertical","webpackPolyfill","deprecate","paths","children","g","Function","e","wrapConfig","wrapText","xOffset","fontSize","availableWidth","word","text","select","words","split","reverse","lineNumber","smallLineHeight","dy","parseFloat","smallFontSize","tspan","classed","push","join","getComputedTextLength","wrapTextWithEllipses","xpos","getTextWidth","fontFace","font","measureText","getApproximateNumberOfLines","maxLength","approximateLineNumber","REQUIRED_LOCALE_DEFINITION_KEYS","setDefaultLocale","locale","isValidLocaleDefinition","d3Format","every","localeKey","dataZeroed","chartWidth","chartHeight","xScale","yScale","chartGradientEl","xAxis","yAxis","svg","orderingFunction","labelEl","top","right","bottom","isLoading","colorSchema","colorHelper","nameToColorMap","chartGradientColors","chartGradientId","yTicks","xTicks","percentageAxisToMaxRatio","numberFormat","enableLabels","labelsMargin","labelsNumberFormat","labelsSize","betweenBarsPadding","xAxisPadding","yAxisPaddingBetweenChart","isHorizontal","hasSingleBarHighlight","isAnimated","ease","easeQuadInOut","animationDuration","interBarDelay","highlightBarFunction","barSelection","color","darker","valueLabel","nameLabel","xAxisLabelEl","xAxisLabel","xAxisLabelOffset","yAxisLabelEl","yAxisLabel","yAxisLabelOffset","shouldReverseColorList","localeFormatter","dispatcher","dispatch","getName","getValue","_labelsHorizontalX","_labelsHorizontalY","_labelsVerticalX","_labelsVerticalY","_selection","_data","bars","unorderedData","sort","sortData","originalData","reduce","acc","cleanData","buildContainerGroups","buildSVG","percentageAxis","uniqueDataPoints","Set","has","getPercentageAxis","rangeRound","scaleBand","buildScales","axisBottom","tickSizeInner","axisLeft","buildAxis","grid","drawHorizontalBars","drawVerticalBars","on","barList","handleMouseOver","handleMouseMove","handleMouseOut","handleClick","computeColor","delay","drawAnimatedHorizontalBars","drawAnimatedVerticalBars","labelXPosition","labelYPosition","drawLabels","containerWidth","mouse","barRect","_x","chartGradient","colorMap","hasPercentage","_flag","valueLocale"],"mappings":"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BACZC,UAAWC,iBACXC,UAAWC,iBACXC,QAASC,eACTC,KAAMC,YACNC,UAAWC,iBACXC,WAAYC,mBAGHC,EAAiB,CAC1B,CACIC,SAAU,EACVC,WAAY,MAIPC,EAAgB,CACzBC,gBAAiBA,kBACjBC,eAAgBA,iBAChBC,WAAYA,aACZC,UAAWA,YACXC,WAAYA,aACZC,UAAWA,YACXC,SAAUA,WACVC,QAASA,UACTC,QAASA,UACTC,OAAQA,SACRC,SAAUA,WACVC,QAASA,UACTC,WAAYA,aACZC,UAAWA,YACXC,WAAYA,aACZC,UAAWA,YACXC,YAAaA,cACbC,WAAYA,aACZC,cAAeA,gBACfC,aAAcA,eACdC,aAAcA,eACdC,YAAaA,cACbC,WAAYA,aACZC,UAAWA,YACXC,aAAcA,eACdC,YAAaA,cACbC,UAAWA,YACXC,SAAUA,WACVC,SAAUA,WACVC,QAASA,Y,cC5IbtH,EAAOD,QAAUW,G,6BCAjB,oyBACO,IAAM6G,EAAiB,CAC1BC,UAAW,CAAC,UAAW,WACvBC,WAAY,CAAC,UAAW,WACxBC,WAAY,CAAC,UAAW,YAEfC,EAAsB,CAC/BH,UAAW,gBACXC,WAAY,iBACZC,WAAY,kBAKHE,EAAc,CACvB,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAO,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAS,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAY,CACrB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAO,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAQ,CACjB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAS,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAO,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAS,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAM,CACf,UACA,UACA,UACA,UACA,UAC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","file":"bar.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3-time\"), require(\"d3-shape\"), require(\"d3-selection\"), require(\"d3-format\"), require(\"d3-array\"), require(\"d3-scale\"), require(\"d3-axis\"), require(\"d3-ease\"), require(\"d3-transition\"), require(\"d3-dispatch\"), require(\"d3-color\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3-time\", \"d3-shape\", \"d3-selection\", \"d3-format\", \"d3-array\", \"d3-scale\", \"d3-axis\", \"d3-ease\", \"d3-transition\", \"d3-dispatch\", \"d3-color\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bar\"] = factory(require(\"d3-time\"), require(\"d3-shape\"), require(\"d3-selection\"), require(\"d3-format\"), require(\"d3-array\"), require(\"d3-scale\"), require(\"d3-axis\"), require(\"d3-ease\"), require(\"d3-transition\"), require(\"d3-dispatch\"), require(\"d3-color\"));\n\telse\n\t\troot[\"core\"] = root[\"core\"] || {}, root[\"core\"][\"bar\"] = factory(root[\"d3-time\"], root[\"d3-shape\"], root[\"d3-selection\"], root[\"d3-format\"], root[\"d3-array\"], root[\"d3-scale\"], root[\"d3-axis\"], root[\"d3-ease\"], root[\"d3-transition\"], root[\"d3-dispatch\"], root[\"d3-color\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__11__, __WEBPACK_EXTERNAL_MODULE__16__, __WEBPACK_EXTERNAL_MODULE__22__, __WEBPACK_EXTERNAL_MODULE__23__, __WEBPACK_EXTERNAL_MODULE__43__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 48);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","import {\n    curveLinear,\n    curveBasis,\n    curveCardinal,\n    curveCatmullRom,\n    curveMonotoneX,\n    curveMonotoneY,\n    curveNatural,\n    curveStep,\n    curveStepAfter,\n    curveStepBefore,\n} from 'd3-shape';\nimport {\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeDay,\n    utcDay,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n} from 'd3-time';\n\nexport const axisTimeCombinations = {\n    MINUTE_HOUR: 'minute-hour',\n    HOUR_DAY: 'hour-daymonth',\n    DAY_MONTH: 'day-month',\n    MONTH_YEAR: 'month-year',\n    CUSTOM: 'custom',\n};\n\nexport const timeBenchmarks = {\n    ONE_AND_A_HALF_YEARS: 47304000000,\n    ONE_YEAR: 31536000365,\n    ONE_DAY: 86400001,\n};\n\nexport const hoursHuman = [\n    '00h',\n    '01h',\n    '02h',\n    '03h',\n    '04h',\n    '05h',\n    '06h',\n    '07h',\n    '08h',\n    '09h',\n    '10h',\n    '11h',\n    '12h',\n    '13h',\n    '14h',\n    '15h',\n    '16h',\n    '17h',\n    '18h',\n    '19h',\n    '20h',\n    '21h',\n    '22h',\n    '23h',\n];\n\nexport const motion = {\n    duration: 1200,\n};\n\nexport const curveMap = {\n    linear: curveLinear,\n    basis: curveBasis,\n    cardinal: curveCardinal,\n    catmullRom: curveCatmullRom,\n    monotoneX: curveMonotoneX,\n    monotoneY: curveMonotoneY,\n    natural: curveNatural,\n    step: curveStep,\n    stepAfter: curveStepAfter,\n    stepBefore: curveStepBefore,\n};\n\nexport const emptyDonutData = [\n    {\n        quantity: 1,\n        percentage: 100,\n    },\n];\n\nexport const timeIntervals = {\n    timeMillisecond: timeMillisecond,\n    utcMillisecond: utcMillisecond,\n    timeSecond: timeSecond,\n    utcSecond: utcSecond,\n    timeMinute: timeMinute,\n    utcMinute: utcMinute,\n    timeHour: timeHour,\n    utcHour: utcHour,\n    timeDay: timeDay,\n    utcDay: utcDay,\n    timeWeek: timeWeek,\n    utcWeek: utcWeek,\n    timeSunday: timeSunday,\n    utcSunday: utcSunday,\n    timeMonday: timeMonday,\n    utcMonday: utcMonday,\n    timeTuesday: timeTuesday,\n    utcTuesday: utcTuesday,\n    timeWednesday: timeWednesday,\n    utcWednesday: utcWednesday,\n    timeThursday: timeThursday,\n    utcThursday: utcThursday,\n    timeFriday: timeFriday,\n    utcFriday: utcFriday,\n    timeSaturday: timeSaturday,\n    utcSaturday: utcSaturday,\n    timeMonth: timeMonth,\n    utcMonth: utcMonth,\n    timeYear: timeYear,\n    utcYear: utcYear,\n};\n\nexport default {\n    axisTimeCombinations,\n    curveMap,\n    emptyDonutData,\n    timeBenchmarks,\n    lineGradientId: 'lineGradientId',\n    timeIntervals,\n    hoursHuman,\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","// Color Gradients\nexport const colorGradients = {\n    greenBlue: ['#39C7EA', '#4CDCBA'],\n    orangePink: ['#FBC670', '#F766B8'],\n    bluePurple: ['#3DC3C9', '#824a9e'],\n};\nexport const colorGradientsHuman = {\n    greenBlue: 'Green to Blue',\n    orangePink: 'Orange to Pink',\n    bluePurple: 'Blue to Purple',\n};\n\n// Color Schemas\n// Standard Color Schema for Britecharts\nexport const britecharts = [\n    '#6aedc7', //green\n    '#39c2c9', //blue\n    '#ffce00', //yellow\n    '#ffa71a', //orange\n    '#f866b9', //pink\n    '#998ce3', //purple\n];\n// Grey Palette\nexport const grey = [\n    '#F8F8FA',\n    '#EFF2F5',\n    '#D2D6DF',\n    '#C3C6CF',\n    '#ADB0B6',\n    '#666A73',\n    '#45494E',\n    '#363A43',\n    '#282C35',\n];\n// Orange Palette\nexport const orange = [\n    '#fcc870',\n    '#ffa71a',\n    '#fb8825',\n    '#f6682f',\n    '#db5a2c',\n    '#bf4c28',\n    '#a43b1c',\n    '#892a10',\n    '#f9e9c5',\n];\n// Blue Palette\nexport const blueGreen = [\n    '#ccf7f6',\n    '#70e4e0',\n    '#00d8d2',\n    '#00acaf',\n    '#007f8c',\n    '#005e66',\n    '#003c3f',\n    '#002d2f',\n    '#0d2223',\n];\n// LightBlue Palette\nexport const teal = [\n    '#ccfffe',\n    '#94f7f4',\n    '#00fff8',\n    '#1de1e1',\n    '#39c2c9',\n    '#2e9a9d',\n    '#227270',\n    '#1a5957',\n    '#133f3e',\n];\n// Green Palette\nexport const green = [\n    '#edfff7',\n    '#d7ffef',\n    '#c0ffe7',\n    '#95f5d7',\n    '#6aedc7',\n    '#59c3a3',\n    '#479980',\n    '#34816a',\n    '#206953',\n];\n// Yellow Palette\nexport const yellow = [\n    '#f9f2b3',\n    '#fbe986',\n    '#fce05a',\n    '#fed72d',\n    '#ffce00',\n    '#fcc11c',\n    '#f9b438',\n    '#eda629',\n    '#e09819',\n];\n// Pink Palette\nexport const pink = [\n    '#fdd1ea',\n    '#fb9cd2',\n    '#f866b9',\n    '#fc40b6',\n    '#ff1ab3',\n    '#e3239d',\n    '#c62c86',\n    '#a62073',\n    '#85135f',\n];\n// Purple Palette\nexport const purple = [\n    '#ddd6fc',\n    '#bbb1f0',\n    '#998ce3',\n    '#8e6bc1',\n    '#824a9e',\n    '#77337f',\n    '#6b1c60',\n    '#591650',\n    '#470f3f',\n];\n// Red Palette\nexport const red = [\n    '#ffd8d4',\n    '#ffb5b0',\n    '#ff938c',\n    '#ff766c',\n    '#ff584c',\n    '#f04b42',\n    '#e03d38',\n    '#be2e29',\n    '#9c1e19',\n];\n\nexport const colorSchemas = {\n    britecharts,\n    grey,\n    orange,\n    blueGreen,\n    teal,\n    green,\n    yellow,\n    pink,\n    purple,\n    red,\n};\nexport const colorSchemasHuman = {\n    britecharts: 'Britecharts Default',\n    grey: 'Britecharts Grey',\n    orange: 'Orange',\n    blueGreen: 'Blue',\n    teal: 'Light Blue',\n    green: 'Green',\n    yellow: 'Yellow',\n    pink: 'Pink',\n    purple: 'Purple',\n    red: 'Red',\n};\n\n// Single Colors\nexport const aloeGreen = ['#7bdcc0']; // To Deprecate\nexport const greenColor = ['#6aedc7'];\nexport const blueColor = ['#39c2c9'];\nexport const yellowColor = ['#ffce00'];\nexport const orangeColor = ['#ffa71a'];\nconst pinkColor = ['#f866b9'];\nconst purpleColor = ['#998ce3'];\n\nconst singleColors = {\n    aloeGreen,\n    greenColor,\n    blueColor,\n    yellowColor,\n    orangeColor,\n    pinkColor,\n    purpleColor,\n};\nconst singleColorsHuman = {\n    aloeGreen: 'Aloe Green',\n    greenColor: 'Green',\n    blueColor: 'Blue',\n    yellowColor: 'Yellow',\n    orangeColor: 'Orange',\n    pinkColor: 'Pink',\n    purpleColor: 'Purple',\n};\n\nexport default {\n    colorSchemas,\n    colorSchemasHuman,\n    colorGradients,\n    colorGradientsHuman,\n    singleColors,\n    singleColorsHuman,\n};\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","export const dataKeyDeprecationMessage = (keyName) => {\n    // eslint-disable-next-line no-console\n    console.warn(\n        `This method is being deprecated! Please modify your data to use \"${keyName}\" as the key.`\n    );\n};\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","module.exports = __WEBPACK_EXTERNAL_MODULE__16__;","import base64 from 'base-64';\n\nimport { colorSchemas } from './color';\nimport serializeWithStyles from './style';\n\nconst isBrowser = typeof window !== 'undefined';\nconst isIE = navigator.msSaveOrOpenBlob;\nconst IE_ERROR_MSG =\n    'Sorry, this feature is not available for IE. If you require this to work, check this issue https://github.com/eventbrite/britecharts/pull/652';\nconst DEFAULT_FONT_STACK = '‘Helvetica Neue’, Helvetica, Arial, sans-serif';\n\nlet encoder = isBrowser && window.btoa;\n\nif (!encoder) {\n    encoder = base64.encode;\n}\n\n// Base64 doesn't work really well with Unicode strings, so we need to use this function\n// Ref: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\nconst b64EncodeUnicode = (str) => {\n    return encoder(\n        encodeURIComponent(str).replace(\n            /%([0-9A-F]{2})/g,\n            function (match, p1) {\n                return String.fromCharCode('0x' + p1);\n            }\n        )\n    );\n};\n\nconst config = {\n    styleClass: 'britechartStyle',\n    defaultFilename: 'britechart.png',\n    chartBackground: 'white',\n    imageSourceBase: 'data:image/svg+xml;base64,',\n    titleFontSize: '15px',\n    // eslint-disable-next-line quotes\n    titleFontFamily: DEFAULT_FONT_STACK,\n    titleTopOffset: 15,\n    get styleBackgroundString() {\n        return `<style>svg{background:${this.chartBackground};}</style>`;\n    },\n};\n\n/**\n * Main function to be used as a method by chart instances to export charts to png\n * @param  {array} svgs         (or an svg element) pass in both chart & legend as array or just chart as svg or in array\n * @param  {string} filename    [download to be called <filename>.png]\n * @param  {string} title       Title for the image\n * @private\n */\nexport function exportChart(d3svg, filename, title) {\n    if (isIE) {\n        // eslint-disable-next-line no-console\n        console.error(IE_ERROR_MSG);\n\n        return false;\n    }\n\n    return loadImage(convertSvgToHtml.call(this, d3svg, title))\n        .then((img) => {\n            return {\n                canvas: createCanvas(this.width(), this.height()),\n                img,\n            };\n        })\n        .then(({ canvas, img }) => handleImageLoad.call(img, canvas, filename));\n}\n\n/**\n * adds background styles to raw html\n * @param {string} html raw html\n * @private\n */\nfunction addBackground(html) {\n    return html.replace('>', `>${config.styleBackgroundString}`);\n}\n\n/**\n * Takes the D3 SVG element, adds proper SVG tags, adds inline styles\n * from stylesheets, adds white background and returns string\n * @param  {SVGElement} d3svg   TYPE d3 svg element\n * @return {String}             String of passed d3\n * @private\n */\nexport function convertSvgToHtml(d3svg, title) {\n    if (!d3svg) {\n        return;\n    }\n\n    d3svg.attr('version', 1.1).attr('xmlns', 'http://www.w3.org/2000/svg');\n    let serializer = serializeWithStyles.initializeSerializer();\n    let html = serializer(d3svg.node());\n\n    html = formatHtmlByBrowser(html);\n    html = prependTitle.call(\n        this,\n        html,\n        title,\n        parseInt(d3svg.attr('width'), 10)\n    );\n    html = addBackground(html);\n\n    return html;\n}\n\n/**\n * Create Canvas\n * @param  {number} width\n * @param  {number} height\n * @return {object} TYPE canvas element\n * @private\n */\nfunction createCanvas(width, height) {\n    let canvas = document.createElement('canvas');\n\n    canvas.height = height;\n    canvas.width = width;\n\n    return canvas;\n}\n\n/**\n * Create Image\n * @param  {string} svgHtml string representation of svg el\n * @param  {Function} callback function to prepare image for loading\n * @return {object}  TYPE element <img>, src points at svg\n * @private\n */\nfunction createImage(svgHtml, callback) {\n    let img = new Image();\n\n    if (callback) {\n        if (typeof callback !== 'function') {\n            throw new Error(\n                `The callback provided should be a function, we got a ${typeof callback} instead.`\n            );\n        }\n        callback(img);\n    }\n    img.src = `${config.imageSourceBase}${b64EncodeUnicode(svgHtml)}`;\n\n    return img;\n}\n\n/**\n * Draws image on canvas\n * @param  {object} image TYPE:el <img>, to be drawn\n * @param  {object} canvas TYPE: el <canvas>, to draw on\n * @private\n */\nexport function drawImageOnCanvas(image, canvas) {\n    canvas.getContext('2d').drawImage(image, 0, 0);\n\n    return canvas;\n}\n\n/**\n * Triggers browser to download image, convert canvas to url,\n * we need to append the link el to the dom before clicking it for Firefox to register\n * point <a> at it and trigger click\n * @param  {object} canvas TYPE: el <canvas>\n * @param  {string} filename\n * @param  {string} extensionType\n * @private\n */\nfunction downloadCanvas(\n    canvas,\n    filename = config.defaultFilename,\n    extensionType = 'image/png'\n) {\n    let url = canvas.toDataURL(extensionType);\n    let link = document.createElement('a');\n\n    link.href = url;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n}\n\n/**\n * Some browsers need special formatting, we handle that here\n * @param  {string} html string of svg html\n * @return {string} string of svg html\n * @private\n */\nfunction formatHtmlByBrowser(html) {\n    if (navigator.userAgent.search('FireFox') > -1) {\n        return html.replace(\n            /url.*&quot;\\)/,\n            'url(&quot;linearGradient[id*=\"-gradient-\"]&quot;);'\n        );\n    }\n\n    return html;\n}\n\n/**\n * Handles on load event fired by img.onload, this=img\n * @param  {object} canvas TYPE: el <canvas>\n * @param  {string} filename\n * @private\n */\nfunction handleImageLoad(canvas, filename) {\n    downloadCanvas(drawImageOnCanvas(this, canvas), filename);\n}\n\n/**\n * Create Image instance and attach event listeners for future promise\n * @param  {string} svgHtml string representation of svg el\n * @returns {Promise} promise that exposes loaded image instance\n * @private\n */\nfunction loadImage(svgHtml) {\n    return new Promise((res, rej) => {\n        createImage(svgHtml, (img) => {\n            img.addEventListener('load', () => res(img));\n            img.addEventListener('error', (err) => rej(err));\n        });\n    });\n}\n\n/**\n * if passed, append title to the raw html to appear on graph\n * @param  {string} html     raw html string\n * @param  {string} title    title of the graph\n * @param  {number} svgWidth width of graph container\n * @return {string}         raw html with title prepended\n * @private\n */\nfunction prependTitle(html, title, svgWidth) {\n    if (!title || !svgWidth) {\n        return html;\n    }\n    let { grey } = colorSchemas;\n\n    html = html.replace(\n        /<g/,\n        `<text x=\"${this.margin().left}\" y=\"${\n            config.titleTopOffset\n        }\" font-family=\"${config.titleFontFamily}\" font-size=\"${\n            config.titleFontSize\n        }\" fill=\"${grey[6]}\"> ${title} </text><g `\n    );\n\n    return html;\n}\n\nexport default {\n    exportChart,\n    convertSvgToHtml,\n    createImage,\n    drawImageOnCanvas,\n    loadImage,\n};\n","/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '0.1.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n","module.exports = (function () {\n    'use strict';\n\n    // Styles inherited from style sheets will not be rendered for elements with these tag names\n    const noStyleTags = {\n        BASE: true,\n        HEAD: true,\n        HTML: true,\n        META: true,\n        NOFRAME: true,\n        NOSCRIPT: true,\n        PARAM: true,\n        SCRIPT: true,\n        STYLE: true,\n        TITLE: true,\n    };\n\n    // This list determines which css default values lookup tables are precomputed at load time\n    // Lookup tables for other tag names will be automatically built at runtime if needed\n    const tagNames = [\n        'A',\n        'ABBR',\n        'ADDRESS',\n        'AREA',\n        'ARTICLE',\n        'ASIDE',\n        'AUDIO',\n        'B',\n        'BASE',\n        'BDI',\n        'BDO',\n        'BLOCKQUOTE',\n        'BODY',\n        'BR',\n        'BUTTON',\n        'CANVAS',\n        'CAPTION',\n        'CENTER',\n        'CITE',\n        'CODE',\n        'COL',\n        'COLGROUP',\n        'COMMAND',\n        'DATALIST',\n        'DD',\n        'DEL',\n        'DETAILS',\n        'DFN',\n        'DIV',\n        'DL',\n        'DT',\n        'EM',\n        'EMBED',\n        'FIELDSET',\n        'FIGCAPTION',\n        'FIGURE',\n        'FONT',\n        'FOOTER',\n        'FORM',\n        'H1',\n        'H2',\n        'H3',\n        'H4',\n        'H5',\n        'H6',\n        'HEAD',\n        'HEADER',\n        'HGROUP',\n        'HR',\n        'HTML',\n        'I',\n        'IFRAME',\n        'IMG',\n        'INPUT',\n        'INS',\n        'KBD',\n        'LABEL',\n        'LEGEND',\n        'LI',\n        'LINK',\n        'MAP',\n        'MARK',\n        'MATH',\n        'MENU',\n        'META',\n        'METER',\n        'NAV',\n        'NOBR',\n        'NOSCRIPT',\n        'OBJECT',\n        'OL',\n        'OPTION',\n        'OPTGROUP',\n        'OUTPUT',\n        'P',\n        'PARAM',\n        'PRE',\n        'PROGRESS',\n        'Q',\n        'RP',\n        'RT',\n        'RUBY',\n        'S',\n        'SAMP',\n        'SCRIPT',\n        'SECTION',\n        'SELECT',\n        'SMALL',\n        'SOURCE',\n        'SPAN',\n        'STRONG',\n        'STYLE',\n        'SUB',\n        'SUMMARY',\n        'SUP',\n        'SVG',\n        'TABLE',\n        'TBODY',\n        'TD',\n        'TEXTAREA',\n        'TFOOT',\n        'TH',\n        'THEAD',\n        'TIME',\n        'TITLE',\n        'TR',\n        'TRACK',\n        'U',\n        'UL',\n        'VAR',\n        'VIDEO',\n        'WBR',\n    ];\n\n    /**\n     * Extracts the styles of elements of the given tag name\n     * @param {String} tagName  Tag name that we will check for styles\n     * @return {Object}         Values of the styles applied to the given element\n     * @private\n     */\n    const computeDefaultStyleByTagName = (tagName) => {\n        let defaultStyle = {},\n            element = document.body.appendChild(\n                document.createElement(tagName)\n            ),\n            computedStyle = window.getComputedStyle(element);\n\n        [].forEach.call(computedStyle, (style) => {\n            defaultStyle[style] = computedStyle[style];\n        });\n        document.body.removeChild(element);\n\n        return defaultStyle;\n    };\n\n    /**\n     * Returns a serializer function, only run it when you know you want to serialize your chart\n     * @return {func} serializer to add styles in line to dom string\n     * @private\n     */\n    const initializeSerializer = () => {\n        // Mapping between tag names and css default values lookup tables. This allows to exclude default values in the result.\n        const defaultStylesByTagName = {};\n\n        // Precompute the lookup tables.\n        [].forEach.call(tagNames, (name) => {\n            if (!noStyleTags[name]) {\n                defaultStylesByTagName[name] =\n                    computeDefaultStyleByTagName(name);\n            }\n        });\n\n        function getDefaultStyleByTagName(tagName) {\n            tagName = tagName.toUpperCase();\n\n            if (!defaultStylesByTagName[tagName]) {\n                defaultStylesByTagName[tagName] =\n                    computeDefaultStyleByTagName(tagName);\n            }\n\n            return defaultStylesByTagName[tagName];\n        }\n\n        function serializeWithStyles(elem) {\n            let cssTexts = [],\n                elements,\n                computedStyle,\n                defaultStyle,\n                result;\n\n            if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n                // 'Error: Object passed in to serializeWithSyles not of nodeType Node.ELEMENT_NODE'\n\n                return;\n            }\n\n            cssTexts = [];\n            elements = elem.querySelectorAll('*');\n\n            [].forEach.call(elements, (el, i) => {\n                if (!noStyleTags[el.tagName]) {\n                    computedStyle = window.getComputedStyle(el);\n                    defaultStyle = getDefaultStyleByTagName(el.tagName);\n                    cssTexts[i] = el.style.cssText;\n                    [].forEach.call(computedStyle, (cssPropName) => {\n                        if (\n                            computedStyle[cssPropName] !==\n                            defaultStyle[cssPropName]\n                        ) {\n                            el.style[cssPropName] = computedStyle[cssPropName];\n                        }\n                    });\n                }\n            });\n\n            result = elem.outerHTML;\n            elements = [].map.call(elements, (el, i) => {\n                el.style.cssText = cssTexts[i];\n\n                return el;\n            });\n\n            return result;\n        }\n\n        return serializeWithStyles;\n    };\n\n    return {\n        initializeSerializer,\n    };\n})();\n","import { format } from 'd3-format';\nimport { max, min } from 'd3-array';\n\nlet idCounter = 0;\n\nconst integerValueFormats = {\n    small: {\n        limit: 10,\n        format: format(''),\n    },\n    medium: {\n        limit: 1000,\n        format: format(''),\n    },\n    large: {\n        limit: null,\n        format: format('.2s'),\n    },\n};\n\nconst decimalValueFormats = {\n    small: {\n        limit: 10,\n        format: format('.3f'),\n    },\n    medium: {\n        limit: 100,\n        format: format('.1f'),\n    },\n    large: {\n        limit: null,\n        format: format('.2s'),\n    },\n};\n\n/**\n * Return a relative size for the value given, based in our decimal or integer tables\n * @param {Number} value    Value to assess its relative size\n * @param {Object} limits   Object stablishing the limits and formats\n * to consider the value of a given size\n * @private\n */\nconst getValueSize = (value, limits) => {\n    let size = 'large';\n\n    if (value < limits.small.limit) {\n        size = 'small';\n    } else if (value < limits.medium.limit) {\n        size = 'medium';\n    }\n\n    return size;\n};\n\n/**\n * Returns an object that contains necessary coordinates for drawing the trendline. The\n * calculation of slope and y-intercept uses basic accumulative linear regression formula.\n * @param  {Object[]} dataPoints    Array of circle data points\n * @return {Object}\n * @private\n */\nexport const calcLinearRegression = (dataPoints) => {\n    let n = dataPoints.length,\n        x = 0,\n        y = 0,\n        xy = 0,\n        x2 = 0;\n\n    dataPoints.forEach((d) => {\n        x += d.x;\n        y += d.y;\n        xy += d.x * d.y;\n        x2 += d.x * d.x;\n    });\n\n    const denominator = n * x2 - x * x;\n    const intercept = (y * x2 - x * xy) / denominator;\n    const slope = (n * xy - x * y) / denominator;\n    const minX = min(dataPoints, ({ x }) => x);\n    const maxX = max(dataPoints, ({ x }) => x);\n\n    return {\n        x1: minX,\n        y1: slope * n + intercept,\n        x2: maxX,\n        y2: slope * maxX + intercept,\n    };\n};\n\n/**\n * Calculates percentage of value from total\n * @param  {Number}  value    Value to check\n * @param  {Number}  total    Sum of values\n * @param  {String}  decimals Specifies number of decimals https://github.com/d3/d3-format\n * @return {String}           Percentage\n * @private\n */\nexport const calculatePercent = (value, total, decimals) => {\n    const percent = total ? (value / total) * 100 : 0;\n\n    return format(decimals)(percent);\n};\n\n/**\n * Checks if a number is an integer or a decimal value\n * @param  {Number}  value Value to check\n * @return {Boolean}       If it is an iteger\n * @private\n */\nexport const isInteger = (value) => {\n    return value % 1 === 0;\n};\n\n/**\n * Formats a floating point value depending on its value range\n * @param  {Number} value Decimal point value to format\n * @return {Number}       Formatted value to show\n * @private\n */\nexport const formatDecimalValue = (value) => {\n    let size = getValueSize(value, decimalValueFormats);\n    let format = decimalValueFormats[size].format;\n\n    return format(value);\n};\n\n/**\n * Formats an integer value depending on its value range\n * @param  {Number} value Decimal point value to format\n * @return {Number}       Formatted value to show\n * @private\n */\nexport const formatIntegerValue = (value) => {\n    let size = getValueSize(value, integerValueFormats);\n    let format = integerValueFormats[size].format;\n\n    return format(value);\n};\n\n/**\n * Generates a unique id with a prefix\n * @param  {String} prefix   Prefix to add before the id\n * @return {String}          Unique id\n * @private\n */\nexport const uniqueId = (prefix) => {\n    const id = ++idCounter;\n\n    return `${prefix.toString()}-${id}`;\n};\n\nexport default {\n    calculatePercent,\n    isInteger,\n    formatDecimalValue,\n    formatIntegerValue,\n    uniqueId,\n    calcLinearRegression,\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__22__;","module.exports = __WEBPACK_EXTERNAL_MODULE__23__;","export const linearGradient = `\n        <defs>\n            <linearGradient id=\"lgrad\" x1=\"0%\" y1=\"50%\" x2=\"100%\" y2=\"50%\" >\n                <stop offset=\"0\" stop-color=\"#ffffff\" stop-opacity=\"0.8\" />\n                <stop offset=\"33.33%\" stop-color=\"#ffffff\" stop-opacity=\"0.8\" />\n                <stop offset=\"50%\" stop-color=\"#ffffff\" stop-opacity=\"0\" />\n                <stop offset=\"66.66%\" stop-color=\"#ffffff\" stop-opacity=\"0.8\" />\n                <stop offset=\"100%\" stop-color=\"#ffffff\" stop-opacity=\"0.8\" />\n            </linearGradient>\n        </defs>\n    `;\n\nexport const barLoadingMarkup = `\n        <svg class=\"load-state bar-load-state\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 711 325\">\n            ${linearGradient}\n            <g fill=\"none\" fill-rule=\"evenodd\">\n                <g transform=\"translate(-15 29)\">\n                    <g stroke=\"#EFF2F5\" stroke-dasharray=\"4 4\">\n                        <path d=\"M.400592911 200.302477L710.674315 200.302477M.400592884 131.172748L710.674315 131.172748M.324410282 64.2071321L710.621499 64.2071321M.291004517.563888874L709.82431.563888889\"/>\n                    </g>\n                    <g fill=\"#D2D6DF\" transform=\"translate(63.08 11)\">\n                        <polygon points=\"-.08 176 23.92 176 23.92 255 -.08 255\"/>\n                        <polygon points=\"50.829 147 74.829 147 74.829 255 50.829 255\"/>\n                        <polygon points=\"254.465 0 278.465 0 278.465 255 254.465 255\"/>\n                        <polygon points=\"458.102 169 482.102 169 482.102 255 458.102 255\"/>\n                        <polygon points=\"152.647 82 176.647 82 176.647 255 152.647 255\"/>\n                        <polygon points=\"356.283 66 380.283 66 380.283 255 356.283 255\"/>\n                        <polygon points=\"559.92 229 583.92 229 583.92 255 559.92 255\"/>\n                        <polygon points=\"101.738 115 125.738 115 125.738 255 101.738 255\"/>\n                        <polygon points=\"305.374 42 329.374 42 329.374 255 305.374 255\"/>\n                        <polygon points=\"509.011 201 533.011 201 533.011 255 509.011 255\"/>\n                        <polygon points=\"203.556 19 227.556 19 227.556 255 203.556 255\"/>\n                        <polygon points=\"407.192 115 431.192 115 431.192 255 407.192 255\"/>\n                    </g>\n                </g>\n                <polygon fill=\"#D2D6DF\" fill-rule=\"nonzero\" points=\"0 295 711 295 711 294 0 294\"/>\n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport const donutLoadingMarkup = `\n        <svg class=\"load-state donut-load-state\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 376 331\">\n            ${linearGradient}\n            <g fill=\"none\" fill-rule=\"evenodd\">\n                <g transform=\"translate(116 107)\">\n                    <circle cx=\"72\" cy=\"72\" r=\"72\" stroke=\"#EFF2F5\" stroke-linecap=\"round\" stroke-width=\"9.6\"/>\n                    <path stroke=\"#D2D6DF\" stroke-width=\"19.2\" d=\"M126.153559,119.524055 C137.264629,106.845712 144,90.2321371 144,72.0444604 C144,32.2554036 111.764502,0 72,0\"/>\n                    <circle cx=\"72\" cy=\"72\" r=\"67.2\" fill=\"#FFF\"/>\n                </g>\n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport const lineLoadingMarkup = `\n        <svg\n            class=\"load-state line-load-state\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 711 325\"\n        >\n            ${linearGradient}\n            <g transform=\"translate(-10 -10)\">\n                <path\n                    id=\"chart-bg\"\n                    class=\"chart-bg\"\n                    style=\"stroke:#C3C6CF;\"\n                    d=\"M3.4,216.5h707.3 M3.4,160.5h707.3 M3.3,103.5h707.3 M3.3,48.5h707.6 M0.4,276.6H710H0.4z\"\n                />\n                <polyline\n                    id=\"chart-line\"\n                    class=\"chart-line\"\n                    style=\"stroke:#C3C6CF;stroke-width:4;fill:none;\"\n                    points=\"8.8,175.8 62.4,237.7 116.1,184.7 169.7,175.8 223.3,57 277,176.8 330.6,176.8 384.3,122.5 437.9,176.8 491.6,176.8 545.2,218.4 598.8,122.5 652.5,184.7 706.1,135.1 \"\n                />\n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport const stackedAreaLoadingMarkup = `\n        <svg\n            class=\"load-state stacked-area-load-state\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 711 325\"\n        >\n            ${linearGradient}\n            <path\n                id=\"chart-bg\"\n                class=\"chart-bg\"\n                style=\"stroke:#C3C6CF;\"\n                d=\"M3.4,216.5h707.3 M3.4,160.5h707.3 M3.3,103.5h707.3 M3.3,48.5h707.6 M0.4,276.6H710H0.4z\"\n            />\n            <g transform=\"translate(20 53)\">\n                <path\n                    id=\"chart-area\"\n                    strokeLinecap=\"square\"\n                    d=\"M0.34233103,0.593688165 L709.977885,0.593688189\"\n                    transform=\"translate(.01 227.976)\"\n                />\n                <path fill=\"#C3C6CF\" d=\"M0.528124801,224.014648 L0.528124801,177.734375 L53.3834796,177.734375 C71.5390789,177.734375 86.8277373,168.972754 101.240241,151.662202 C112.578335,138.044258 121.139826,123.110227 136.974507,91.596773 C137.343842,90.8617404 139.300293,86.9654028 139.856735,85.8583549 C155.041692,55.6476711 163.354313,41.0906306 174.319873,27.7179171 C188.951312,9.87459412 204.885845,0.5 223.830634,0.5 C242.123071,0.5 257.291724,8.27027858 270.907992,23.1359289 C281.228683,34.4036118 289.135925,47.1272372 302.542017,72.085092 C303.275893,73.4513345 306.289669,79.0766612 307.063369,80.5168656 C321.41025,107.222876 330.088083,120.97663 341.470704,132.92446 C355.88994,148.05969 371.908861,155.792969 391.654853,155.792969 C412.142049,155.792969 428.763593,152.325614 442.880698,145.765582 C454.197328,140.506893 463.373931,133.679865 473.786035,123.626931 C476.528659,120.978915 486.44777,110.911455 488.791866,108.6483 C502.907223,95.0203436 514.194325,88.9355469 530.135322,88.9355469 C546.532652,88.9355469 559.505909,97.338499 575.973261,115.41103 C579.723508,119.526837 593.103621,135.086814 592.915496,134.871799 C605.09738,148.794859 614.368835,157.635549 625.072091,164.58539 C638.386599,173.230769 652.701021,177.734375 669.279853,177.734375 L673.779853,177.734375 L673.779853,224.014648 L0.528124801,224.014648 Z\" />\n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport const sparkLineLoadingMarkup = `\n        <svg\n            class=\"load-state sparkline-load-state\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 711 325\"\n        >\n            ${linearGradient}\n            <g transform=\"translate(0 50)\">\n                <path fill=\"#C3C6CF\" d=\"M0.528124801,224.014648 L0.528124801,177.734375 L53.3834796,177.734375 C71.5390789,177.734375 86.8277373,168.972754 101.240241,151.662202 C112.578335,138.044258 121.139826,123.110227 136.974507,91.596773 C137.343842,90.8617404 139.300293,86.9654028 139.856735,85.8583549 C155.041692,55.6476711 163.354313,41.0906306 174.319873,27.7179171 C188.951312,9.87459412 204.885845,0.5 223.830634,0.5 C242.123071,0.5 257.291724,8.27027858 270.907992,23.1359289 C281.228683,34.4036118 289.135925,47.1272372 302.542017,72.085092 C303.275893,73.4513345 306.289669,79.0766612 307.063369,80.5168656 C321.41025,107.222876 330.088083,120.97663 341.470704,132.92446 C355.88994,148.05969 371.908861,155.792969 391.654853,155.792969 C412.142049,155.792969 428.763593,152.325614 442.880698,145.765582 C454.197328,140.506893 463.373931,133.679865 473.786035,123.626931 C476.528659,120.978915 486.44777,110.911455 488.791866,108.6483 C502.907223,95.0203436 514.194325,88.9355469 530.135322,88.9355469 C546.532652,88.9355469 559.505909,97.338499 575.973261,115.41103 C579.723508,119.526837 593.103621,135.086814 592.915496,134.871799 C605.09738,148.794859 614.368835,157.635549 625.072091,164.58539 C638.386599,173.230769 652.701021,177.734375 669.279853,177.734375 L773.779853,177.734375 L773.77853,204.014648 L0.528124801,204.014648 Z\"/>    \n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport const brushLoadingMarkup = `\n        <svg\n            class=\"load-state brush-load-state\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 711 325\"\n        >\n            ${linearGradient}\n            <g transform=\"translate(0 50)\">\n                <path\n                    id=\"chart-area\"\n                    strokeLinecap=\"square\"\n                    d=\"M0.34233103,0.593688165 L709.977885,0.593688189\"\n                    transform=\"translate(.01 227.976)\"\n                />\n                <path fill=\"#C3C6CF\" d=\"M0.528124801,224.014648 L0.528124801,177.734375 L53.3834796,177.734375 C71.5390789,177.734375 86.8277373,168.972754 101.240241,151.662202 C112.578335,138.044258 121.139826,123.110227 136.974507,91.596773 C137.343842,90.8617404 139.300293,86.9654028 139.856735,85.8583549 C155.041692,55.6476711 163.354313,41.0906306 174.319873,27.7179171 C188.951312,9.87459412 204.885845,0.5 223.830634,0.5 C242.123071,0.5 257.291724,8.27027858 270.907992,23.1359289 C281.228683,34.4036118 289.135925,47.1272372 302.542017,72.085092 C303.275893,73.4513345 306.289669,79.0766612 307.063369,80.5168656 C321.41025,107.222876 330.088083,120.97663 341.470704,132.92446 C355.88994,148.05969 371.908861,155.792969 391.654853,155.792969 C412.142049,155.792969 428.763593,152.325614 442.880698,145.765582 C454.197328,140.506893 463.373931,133.679865 473.786035,123.626931 C476.528659,120.978915 486.44777,110.911455 488.791866,108.6483 C502.907223,95.0203436 514.194325,88.9355469 530.135322,88.9355469 C546.532652,88.9355469 559.505909,97.338499 575.973261,115.41103 C579.723508,119.526837 593.103621,135.086814 592.915496,134.871799 C605.09738,148.794859 614.368835,157.635549 625.072091,164.58539 C638.386599,173.230769 652.701021,177.734375 669.279853,177.734375 L673.779853,177.734375 L673.779853,224.014648 L0.528124801,224.014648 Z\" />\n            </g>\n            <rect class=\"chart-filter\" fill=\"url(#lgrad)\" x=\"-100%\" y=\"0\" width=\"300%\" height=\"100%\"></rect>\n        </svg>\n    `;\n\nexport default {\n    linearGradient,\n    barLoadingMarkup,\n    donutLoadingMarkup,\n    lineLoadingMarkup,\n    brushLoadingMarkup,\n    sparkLineLoadingMarkup,\n    stackedAreaLoadingMarkup,\n};\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO: Document d3 objects rather than using *\n// TODO: Add bi-directional accessors for 2d grid, and determine naming (H/V vs. X/Y)\n\nconst { scaleLinear } = require('d3-scale');\nconst { classArray } = require('./classes');\n\n// Opacity for fade in/out\nconst EPSILON = 1e-6;\n\nconst COMPONENT_CLASSNAME = 'grid';\nconst DIRECTION_HORIZONTAL = 'horizontal';\nconst DIRECTION_VERTICAL = 'vertical';\nconst DIRECTION_FULL = 'full';\n\n// Direction orientations\nconst DIR = {\n    H: DIRECTION_HORIZONTAL,\n    V: DIRECTION_VERTICAL,\n};\n\n/**\n * Higher order function that returns the default positioning function for continuous scales\n * The +0.5 avoids anti-aliasing artifacts\n * @param {*} scale - Scale for positioning\n * @return {function}\n * @private\n */\nfunction positionNumber(scale) {\n    return (d) => +scale(d) + 0.5;\n}\n\n/**\n * Higher order function that returns the positioning function for bandwidth scales\n * Also adjusted for anti-aliasing\n * @param {*} scale - Scale for positioning\n * @return {function}\n * @private\n */\nfunction positionCenter(scale) {\n    let offset = Math.max(0, scale.bandwidth() - 1) / 2;\n\n    if (scale.round()) {\n        offset = Math.round(offset);\n    }\n\n    return (d) => +scale(d) + offset + 0.5;\n}\n\n/**\n * Constructor for a one-dimensional grid helper\n * @param {string} orient - orientation string to define the direction\n * @param {*} scale - d3 scale for the grid's ticks\n * @return {gridBaseGenerator}\n * @private\n */\nfunction gridBase(orient, scale) {\n    let range = [0, 1],\n        offsetStart = 0,\n        offsetEnd = 0,\n        hideEdges = false,\n        ticks = null,\n        tickValues = null,\n        // Create a class array helper for producing class lists\n        classArr = classArray(COMPONENT_CLASSNAME, orient),\n        // Manage horizontal and vertical directions by setting the a parameter\n        // to use in svg attributes\n        x = orient === DIR.H ? 'x' : 'y',\n        y = orient === DIR.H ? 'y' : 'x';\n\n    /**\n     * Generator function for one-dimensional grid\n     * @param {*} context - d3 selection or transition to use as the container\n     */\n    function gridBaseGenerator(context) {\n        let values = getValues(),\n            // Get the appropriate function to position the lines, based on scale type\n            // Pass a duplicate scale to ensure position values are fixed until grid updated\n            position = (scale.bandwidth ? positionCenter : positionNumber)(\n                scale.copy()\n            ),\n            // Set parameter to ensure correct line offset positions for inverted ranges\n            k = range[range.length - 1] >= range[0] ? 1 : -1,\n            // If passed a transition, convert to selection\n            selection = context.selection ? context.selection() : context,\n            // Set up container element\n            initContainer = selection\n                .selectAll(classArr.asSelector())\n                .data([null]),\n            container = initContainer.merge(\n                initContainer\n                    .enter()\n                    .append('g')\n                    .attr('class', classArr.asList())\n            ),\n            // Set up line selections\n            line = container.selectAll('line').data(values, scale).order(),\n            lineExit = line.exit(),\n            lineEnter = line.enter().append('line').attr('class', 'grid-line');\n\n        line = line.merge(lineEnter);\n\n        // Run animations only if grid was called on a transition\n        if (context !== selection) {\n            // Higher-order function that returns a function to position the exiting grid lines\n            // Requires a HOF to pass the attribute name to the inner function\n            const exitPosition = (attr) =>\n                function (d) {\n                    return isFinite((d = position(d)))\n                        ? d\n                        : this.getAttribute(attr);\n                };\n\n            // Function to initially position the entering grid lines\n            // Pulls the previously saved positioning function from the parent node if it exists\n            const enterPosition = function (d) {\n                let p = this.parentNode.__pos;\n\n                return p && isFinite((p = p(d))) ? p : position(d);\n            };\n\n            line = line.transition(context);\n\n            lineExit = lineExit\n                .transition(context)\n                .attr('opacity', EPSILON)\n                .attr(y + '1', exitPosition(y + '1'))\n                .attr(y + '2', exitPosition(y + '2'));\n\n            lineEnter = lineEnter\n                .attr('opacity', EPSILON)\n                .attr(y + '1', enterPosition)\n                .attr(y + '2', enterPosition);\n        }\n\n        lineExit.remove();\n\n        line.attr('opacity', 1)\n            .attr(x + '1', +range[0] - k * offsetStart)\n            .attr(x + '2', +range[range.length - 1] + k * offsetEnd)\n            .attr(y + '1', (d) => position(d))\n            .attr(y + '2', (d) => position(d));\n\n        // Attach the positioning function as a property of the container element\n        // This stores it for future use as the starting point for the lineEnter transition\n        // Cannot use arrow function as this must refer to the element\n        container.each(function () {\n            this.__pos = position;\n        });\n    }\n\n    // HELPERS\n\n    /**\n     * Extract the tick values and adjust for edge hiding\n     * @return {number[]}\n     * @private\n     */\n    function getValues() {\n        let hideFirst =\n                hideEdges === true ||\n                hideEdges === 'both' ||\n                hideEdges === 'first',\n            hideLast =\n                hideEdges === true ||\n                hideEdges === 'both' ||\n                hideEdges === 'last',\n            values = tickValues === null ? scaleTicks() : tickValues.slice();\n\n        if (hideFirst) values.shift();\n        if (hideLast) values.pop();\n\n        return values;\n    }\n\n    /**\n     * Get the tick values from the underlying scales\n     * @return {number[]}\n     * @private\n     */\n    function scaleTicks() {\n        let scaleTicks;\n\n        if (scale.ticks) {\n            scaleTicks = scale.ticks.apply(scale, ticks ? [ticks] : []);\n        } else {\n            scaleTicks = scale.domain();\n        }\n\n        return scaleTicks.slice();\n    }\n\n    // API\n\n    /**\n     * Gets or sets the scale\n     * Scale applies the ticks to the grid\n     * @param {*} [_] - d3 scale instance\n     * @return {*|gridBaseGenerator}\n     * @public\n     */\n    gridBaseGenerator.scale = function (_) {\n        if (!arguments.length) {\n            return scale;\n        }\n        scale = _;\n\n        return gridBaseGenerator;\n    };\n\n    /**\n     * Gets or sets the range\n     * Governs the underlying length and positioning of the grid lines relative to the container\n     * Should usually be set to the output range from the orthogonal scale in a 2D chart\n     * @param {number[]} [_] - Array representing the output range\n     * @return {*|gridBaseGenerator}\n     * @public\n     */\n    gridBaseGenerator.range = function (_) {\n        if (!arguments.length) {\n            return range;\n        }\n        range = _;\n\n        return gridBaseGenerator;\n    };\n\n    /**\n     * Gets or sets the start offset\n     * Start offset is the distance before the start position of the scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {*|gridBaseGenerator}\n     * @public\n     */\n    gridBaseGenerator.offsetStart = function (_) {\n        if (!arguments.length) {\n            return offsetStart;\n        }\n        offsetStart = _;\n\n        return gridBaseGenerator;\n    };\n\n    /**\n     * Gets or sets the end offset\n     * End offset is the distance after the end position of the scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {*|gridBaseGenerator}\n     * @public\n     */\n    gridBaseGenerator.offsetEnd = function (_) {\n        if (!arguments.length) {\n            return offsetEnd;\n        }\n        offsetEnd = _;\n\n        return gridBaseGenerator;\n    };\n\n    /**\n     * Gets or sets the hideEdges parameter\n     * Determines if the first and last grid line are suppressed\n     * True or 'both' suppress both edges, 'first' and 'last' suppress the grid line\n     * corresponding to the first and last tick value respectively\n     * @param {boolean|string} [_] - hideEdges parameter, accepts boolean and 'both', 'first', or 'last' strings\n     * @return {boolean|string|gridBaseGenerator}\n     * @public\n     */\n    gridBaseGenerator.hideEdges = function (_) {\n        if (!arguments.length) {\n            return hideEdges;\n        }\n        hideEdges = _;\n\n        return gridBaseGenerator;\n    };\n\n    /**\n     * Gets or sets the tick count\n     * Mirrors d3 axis' ticks API method\n     * @param {number} [_] - Approximate tick count\n     * @return {number|gridBaseGenerator}\n     * @public\n     */\n    gridBaseGenerator.ticks = function (_) {\n        if (!arguments.length) {\n            return ticks;\n        }\n        ticks = _;\n\n        return gridBaseGenerator;\n    };\n\n    /**\n     * Gets or sets the tick values\n     * Mirrors d3 axis' tickValues API method\n     * @param {number[]} [_] - Array of domain values to place ticks\n     * @return {number[]|gridBaseGenerator}\n     * @public\n     */\n    gridBaseGenerator.tickValues = function (_) {\n        if (!arguments.length) {\n            return tickValues && tickValues.slice();\n        }\n        tickValues = _ === null ? null : [..._].slice();\n\n        return gridBaseGenerator;\n    };\n\n    return gridBaseGenerator;\n}\n\n/**\n * Constructor for a two-dimensional grid helper\n * @param {*} scaleX - d3 scale for the grid's x direction\n * @param {*} scaleY - d3 scale for the grid's y direction\n * @return {gridGenerator}\n * @memberof Grid\n * @alias module:Grid.grid\n * @example\n * const grid = grid(xScale, yScale)\n        .offsetStart(5)\n        .hideEdges(true)\n        .ticks(4);\n\n    grid(svg.select('.grid-lines-group'));\n */\nexport function grid(scaleX, scaleY) {\n    let gridH = gridHorizontal(scaleY || scaleLinear()),\n        gridV = gridVertical(scaleX || scaleLinear()),\n        direction = DIRECTION_FULL,\n        tickValuesX = null,\n        tickValuesY = null;\n\n    /**\n     * Generator function for two-dimensional grid\n     * @param {*} context - d3 selection or transition to use as the container\n     */\n    function gridGenerator(context) {\n        direction === DIRECTION_FULL || direction === DIRECTION_HORIZONTAL\n            ? gridH.tickValues(tickValuesY).range(scaleX.range())\n            : gridH.tickValues([]);\n\n        direction === DIRECTION_FULL || direction === DIRECTION_VERTICAL\n            ? gridV.tickValues(tickValuesX).range(scaleY.range())\n            : gridV.tickValues([]);\n\n        context.call(gridH).call(gridV);\n    }\n\n    // API\n\n    /**\n     * Gets or sets the x-scale\n     * X-scale applies ticks to the vertical grid and range to the horizontal grid\n     * @param {*} [_] - d3 scale instance\n     * @return {*|gridGenerator}\n     * @public\n     */\n    gridGenerator.scaleX = function (_) {\n        if (!arguments.length) {\n            return scaleX;\n        }\n        scaleX = _;\n        gridV.scale(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the y-scale\n     * Y-scale applies ticks to the horizontal grid and range to the vertical grid\n     * @param {*} [_] - d3 scale instance\n     * @return {*|gridGenerator}\n     * @public\n     */\n    gridGenerator.scaleY = function (_) {\n        if (!arguments.length) {\n            return scaleY;\n        }\n        scaleY = _;\n        gridH.scale(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the direction of the grid\n     * Direction of 'full' will render both horizontal and vertical grid lines\n     * Either 'horizontal' or 'vertical' wil render the respective lines\n     * @param {string} [_] - Grid direction accepts 'full', 'vertical', or 'horizontal'\n     * @return {string|gridGenerator}\n     * @public\n     */\n    gridGenerator.direction = function (_) {\n        if (!arguments.length) {\n            return direction;\n        }\n        direction = _;\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets both the horizontal and vertical grid start offset\n     * Convenience method that sets the start offset for both horizontal and vertical grids\n     * Returns the start offset of the horizontal grid if no argument is supplied\n     * Start offset is the distance before the start position of the scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.offsetStart = function (_) {\n        if (!arguments.length) {\n            return gridH.offsetStart();\n        }\n        gridH.offsetStart(_);\n        gridV.offsetStart(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the horizontal grid start offset\n     * Returns the start offset of the horizontal grid if no argument is supplied\n     * Start offset is the distance before the start of the x-scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.offsetStartH = function (_) {\n        if (!arguments.length) {\n            return gridH.offsetStart();\n        }\n        gridH.offsetStart(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the vertical grid start offset\n     * Returns the start offset of the vertical grid if no argument is supplied\n     * Start offset is the distance before the start of the y-scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.offsetStartV = function (_) {\n        if (!arguments.length) {\n            return gridV.offsetStart();\n        }\n        gridV.offsetStart(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets both the horizontal and vertical grid end offset\n     * Convenience method that sets the end offset for both horizontal and vertical grids\n     * Returns the end offset of the horizontal grid if no argument is supplied\n     * End offset is the distance after the end position of the scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.offsetEnd = function (_) {\n        if (!arguments.length) {\n            return gridH.offsetEnd();\n        }\n        gridH.offsetEnd(_);\n        gridV.offsetEnd(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the horizontal grid end offset\n     * Returns the end offset of the horizontal grid if no argument is supplied\n     * End offset is the distance after the end of the x-scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.offsetEndH = function (_) {\n        if (!arguments.length) {\n            return gridH.offsetEnd();\n        }\n        gridH.offsetEnd(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the vertical grid end offset\n     * Returns the end offset of the vertical grid if no argument is supplied\n     * End offset is the distance after the end of the y-scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.offsetEndV = function (_) {\n        if (!arguments.length) {\n            return gridV.offsetEnd();\n        }\n        gridV.offsetEnd(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the hideEdges parameter for both horizontal and vertical grids\n     * Returns the horizontal value if no argument specified\n     * Determines if the first and last grid line are suppressed\n     * True or 'both' suppress both edges, 'first' and 'last' suppress the grid line\n     * corresponding to the first and last tick value respectively\n     * @param {boolean|string} [_] - hideEdges parameter, accepts boolean and 'both', 'first', or 'last' strings\n     * @return {boolean|string|gridGenerator}\n     * @public\n     */\n    gridGenerator.hideEdges = function (_) {\n        if (!arguments.length) {\n            return gridH.hideEdges();\n        }\n        gridH.hideEdges(_);\n        gridV.hideEdges(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the hideEdges parameter for the horizontal grid\n     * Determines if the first and last grid line are suppressed\n     * True or 'both' suppress both edges, 'first' and 'last' suppress the grid line\n     * corresponding to the first and last tick value respectively\n     * @param {boolean|string} [_] - hideEdges parameter, accepts boolean and 'both', 'first', or 'last' strings\n     * @return {boolean|string|gridGenerator}\n     * @public\n     */\n    gridGenerator.hideEdgesH = function (_) {\n        if (!arguments.length) {\n            return gridH.hideEdges();\n        }\n        gridH.hideEdges(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the hideEdges parameter for the vertical grid\n     * Determines if the first and last grid line are suppressed\n     * True or 'both' suppress both edges, 'first' and 'last' suppress the grid line\n     * corresponding to the first and last tick value respectively\n     * @param {boolean|string} [_] - hideEdges parameter, accepts boolean and 'both', 'first', or 'last' strings\n     * @return {boolean|string|gridGenerator}\n     * @public\n     */\n    gridGenerator.hideEdgesV = function (_) {\n        if (!arguments.length) {\n            return gridV.hideEdges();\n        }\n        gridV.hideEdges(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the tick count for both horizontal and vertical grids\n     * Returns the horizontal ticks if no argument specified\n     * Mirrors d3 axis' ticks API method\n     * @param {number} [_] - Approximate tick count\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.ticks = function (_) {\n        if (!arguments.length) {\n            return gridH.ticks();\n        }\n        gridH.ticks(_);\n        gridV.ticks(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the tick count for the horizontal grid\n     * Mirrors d3 axis' ticks API method\n     * @param {number} [_] - Approximate tick count\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.ticksH = function (_) {\n        if (!arguments.length) {\n            return gridH.ticks();\n        }\n        gridH.ticks(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the tick count for the vertical grid\n     * Mirrors d3 axis' ticks API method\n     * @param {number} [_] - Approximate tick count\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.ticksV = function (_) {\n        if (!arguments.length) {\n            return gridV.ticks();\n        }\n        gridV.ticks(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the tick values for both horizontal and vertical grids\n     * Returns the horizontal tick values if no argument specified\n     * Mirrors d3 axis' tickValues API method\n     * @param {number[]} [_] - Array of domain values to place ticks\n     * @return {number[]|gridGenerator}\n     * @public\n     */\n    gridGenerator.tickValues = function (_) {\n        if (!arguments.length) {\n            return tickValuesY;\n        }\n        tickValuesX = tickValuesY = _;\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the tick values for the horizontal grid\n     * Mirrors d3 axis' tickValues API method\n     * @param {number[]} [_] - Array of domain values to place ticks\n     * @return {number[]|gridGenerator}\n     * @public\n     */\n    gridGenerator.tickValuesH = function (_) {\n        if (!arguments.length) {\n            return tickValuesY;\n        }\n        tickValuesY = _;\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the tick values for the vertical grid\n     * Mirrors d3 axis' tickValues API method\n     * @param {number[]} [_] - Array of domain values to place ticks\n     * @return {number[]|gridGenerator}\n     * @public\n     */\n    gridGenerator.tickValuesV = function (_) {\n        if (!arguments.length) {\n            return tickValuesX;\n        }\n        tickValuesX = _;\n\n        return gridGenerator;\n    };\n\n    return gridGenerator;\n}\n\n/**\n * Constructor for a horizontal grid helper\n * @param {*} scale - d3 scale to initialize the grid\n * @return {gridBaseGenerator}\n * @public\n * @memberof Grid\n * @alias module:Grid.gridHorizontal\n * @example\n * const grid = gridHorizontal(yScale)\n        .range([0, chartWidth])\n        .hideEdges('first')\n        .ticks(yTicks);\n\n    grid(svg.select('.grid-lines-group'));\n */\nexport function gridHorizontal(scale) {\n    return gridBase(DIR.H, scale);\n}\n\n/**\n * Constructor for a vertical grid helper\n * @param {*} scale - d3 scale to initialize the grid\n * @return {gridBaseGenerator}\n * @public\n * @memberof Grid\n * @alias module:Grid.gridVertical\n * @example\n *  const grid = gridVertical(xScale)\n        .range([0, chartHeight])\n        .hideEdges('first')\n        .ticks(xTicks);\n\n    grid(svg.select('.grid-lines-group'));\n */\nexport function gridVertical(scale) {\n    return gridBase(DIR.V, scale);\n}\n\n/**\n * Reusable Grid component helper that renders either a vertical, horizontal or full grid, and that\n * will usually be used inside charts. It could also be used as a standalone component to use on custom charts.\n * @module Grid\n * @requires d3-scale\n * @exports gridHorizontal\n * @exports gridVertical\n * @exports grid\n */\nexport default {\n    gridHorizontal,\n    gridVertical,\n    grid,\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import { select } from 'd3-selection';\n\nconst wrapConfig = {\n    lineHeight: 1.2,\n    smallTextOffset: 10,\n    smallTextLineHeightRatio: 0.9,\n    smallTextRatio: 0.6,\n    valueClassName: 'value',\n    labelClassName: 'label',\n};\n\nconst defaultTextSize = 12;\nconst defaultFontFace = 'Arial';\n\n/**\n * Wraps a selection of text within the available width\n * @param  {Number} xOffset        X axis offset for the text\n * @param  {Number} fontSize       Size of the base font\n * @param  {Number} availableWidth Width of the container where the text needs to wrap on\n * @param  {D3Selection} node      SVG text element that contains the text to wrap\n *\n * REF: http://bl.ocks.org/mbostock/7555321\n * More discussions on https://github.com/mbostock/d3/issues/1642\n * @return {void}\n * @private\n */\nexport const wrapText = function (xOffset, fontSize, availableWidth, node) {\n    let text = select(node),\n        words = text.text().split(/\\s+/).reverse(),\n        word,\n        line = [],\n        lineNumber = 0,\n        smallLineHeight =\n            wrapConfig.lineHeight * wrapConfig.smallTextLineHeightRatio,\n        y = text.attr('y'),\n        dy = parseFloat(text.attr('dy')),\n        smallFontSize = fontSize * wrapConfig.smallTextRatio,\n        tspan = text\n            .text(null)\n            .append('tspan')\n            .attr('x', xOffset)\n            .attr('y', y - 5)\n            .attr('dy', dy + 'em')\n            .classed(wrapConfig.valueClassName, true)\n            .style('font-size', fontSize + 'px');\n\n    tspan.text(words.pop());\n    tspan = text\n        .append('tspan')\n        .classed(wrapConfig.labelClassName, true)\n        .attr('x', xOffset)\n        .attr('y', y + wrapConfig.smallTextOffset)\n        .attr('dy', ++lineNumber * smallLineHeight + dy + 'em')\n        .style('font-size', smallFontSize + 'px');\n\n    while ((word = words.pop())) {\n        line.push(word);\n        tspan.text(line.join(' '));\n        if (\n            tspan.node() &&\n            tspan.node().getComputedTextLength() > availableWidth - 50\n        ) {\n            line.pop();\n            tspan.text(line.join(' '));\n            line = [word];\n            tspan = text\n                .append('tspan')\n                .classed(wrapConfig.labelClassName, true)\n                .attr('x', xOffset)\n                .attr('y', y + wrapConfig.smallTextOffset)\n                .attr('dy', ++lineNumber * smallLineHeight + dy + 'em')\n                .text(word)\n                .style('font-size', smallFontSize + 'px');\n        }\n    }\n};\n\n/**\n * Wraps a selection of text within the available width, also adds class .adjust-upwards\n * to configure a y offset for entries with multiple rows\n * @param  {D3Selection} text       D3 text element\n * @param  {Number} width           Width of the container where the text needs to wrap on\n * @param  {Number} [xpos=0]        Number passed to determine the x offset\n * @param  {Number} [limit=2]       Number of lines before an ellipses is added and the rest of the text is cut off\n *\n * REF: http://bl.ocks.org/mbostock/7555321\n * More discussions on https://github.com/mbostock/d3/issues/1642\n * @return {void}\n * @private\n */\nexport const wrapTextWithEllipses = function (\n    text,\n    width,\n    xpos = 0,\n    limit = 2\n) {\n    text.each(function () {\n        let words, word, line, lineNumber, lineHeight, y, dy, tspan;\n\n        text = select(this);\n\n        words = text.text().split(/\\s+/).reverse();\n        line = [];\n        lineNumber = 0;\n        lineHeight = 1.2;\n        y = text.attr('y');\n        dy = parseFloat(text.attr('dy'));\n        tspan = text\n            .text(null)\n            .append('tspan')\n            .attr('x', xpos)\n            .attr('y', y)\n            .attr('dy', dy + 'em');\n\n        while ((word = words.pop())) {\n            line.push(word);\n            tspan.text(line.join(' '));\n\n            if (tspan.node() && tspan.node().getComputedTextLength() > width) {\n                line.pop();\n                tspan.text(line.join(' '));\n\n                if (lineNumber < limit - 1) {\n                    line = [word];\n                    tspan = text\n                        .append('tspan')\n                        .attr('x', xpos)\n                        .attr('y', y)\n                        .attr('dy', ++lineNumber * lineHeight + dy + 'em')\n                        .text(word);\n                    // if we need two lines for the text, move them both up to center them\n                    text.classed('adjust-upwards', true);\n                } else {\n                    line.push('...');\n                    tspan.text(line.join(' '));\n                    break;\n                }\n            }\n        }\n    });\n};\n\n/**\n * Figures out an approximate of the text width by using a canvas element\n * This avoids having to actually render the text to measure it from the DOM itself\n * @param  {String} text                Text to measure\n * @param  {Number} [fontSize=12]       Font size (or default)\n * @param  {String} [fontFace='Arial']  Font family to use in the calculation (or default)\n * @return {String}                     Approximated width of the text\n * @private\n */\nexport const getTextWidth = function (\n    text,\n    fontSize = defaultTextSize,\n    fontFace = defaultFontFace\n) {\n    const a = document.createElement('canvas');\n    const b = a.getContext('2d');\n\n    b.font = fontSize + 'px ' + fontFace;\n\n    return b.measureText(text).width;\n};\n\n/**\n * Gets the font size of the passed node using getComputedStyle\n * or falls back to the default font size\n * @param {HTMLElement} node The node to get the computed font size for\n * @return {number}\n * @private\n */\nexport const getFontSize = function (node) {\n    if (typeof window.getComputedStyle === 'function') {\n        return parseFloat(window.getComputedStyle(node).fontSize);\n    }\n\n    return defaultTextSize;\n};\n\n/**\n * Heuristic which gets the number of lines needed to display the title of the tooltip\n * If shouldShowDateInTitle is set to true, it takes the formatted Date.now() as additional influencer\n * for the approximation of the needed number of lines.\n * @param  {String}  text  Text which shall be tested for the necessary number of lines\n * @param  {Number}  fontSize  Fontsize to use for the heuristic\n * @param  {Number}  maxLength  Maximal length per line\n * @return  {Number}  approximateLineNumber  Approximative number of lines needed to display the title\n * @private\n */\nexport const getApproximateNumberOfLines = function (\n    title,\n    fontSize,\n    maxLength\n) {\n    const words = title.split(/\\s+/).reverse();\n    let line = [],\n        approximateLineNumber = 1;\n\n    for (let word of words) {\n        line.push(word);\n\n        const textWidth = getTextWidth(\n            line.join(' '),\n            fontSize,\n            'Karla, sans-serif'\n        );\n\n        if (textWidth > maxLength) {\n            line.pop();\n            line = [word];\n            ++approximateLineNumber;\n        }\n    }\n\n    return approximateLineNumber;\n};\n\nexport default {\n    getApproximateNumberOfLines,\n    getFontSize,\n    getTextWidth,\n    wrapText,\n    wrapTextWithEllipses,\n};\n","/**\n * Helps process a class array or set of classes\n * @param {*} classArr      Class array or set of classes\n * @returns                 Methods to get the class array as a list of classes or CSS selectors\n * @private\n */\nexport function classArray(classArr) {\n    classArr = Array.isArray(classArr) ? classArr : [...arguments];\n\n    return {\n        asList: () => classArr.join(' '),\n        asSelector: () => '.' + classArr.join('.'),\n    };\n}\n\nexport default {\n    classArray,\n};\n","import * as d3Format from 'd3-format';\n\nconst REQUIRED_LOCALE_DEFINITION_KEYS = [\n    'decimal',\n    'thousands',\n    'grouping',\n    'currency',\n];\nconst WRONG_LOCALE_OBJECT_MESSAGE =\n    'Please pass in a valid locale object definition';\n\n/**\n * Sets the given locale as the new default locale through d3-format's formatDefaultLocale\n * When an object is used, it simply uses it to set the new locale.\n * @param  {LocaleObject} locale    The desired locale object\n * @return {Object}                 Object with a 'format' and 'formatPrefix' functions\n * @private\n */\nexport const setDefaultLocale = (locale) => {\n    if (isValidLocaleDefinition(locale)) {\n        return d3Format.formatDefaultLocale(locale);\n    } else {\n        throw new Error(WRONG_LOCALE_OBJECT_MESSAGE);\n    }\n};\n\n/**\n * Checks if a locale definition object contains the required keys\n * @param  {LocaleObject}  locale   Locale to check\n * @return {Boolean}                Is the locale definition has a correct format (https://cdn.jsdelivr.net/npm/d3-format/locale/en-US.json)\n * @private\n */\nconst isValidLocaleDefinition = (locale) => {\n    return (\n        typeof locale == 'object' &&\n        REQUIRED_LOCALE_DEFINITION_KEYS.every((localeKey) =>\n            locale.hasOwnProperty(localeKey)\n        )\n    );\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__43__;","import { max } from 'd3-array';\nimport { easeQuadInOut } from 'd3-ease';\nimport { axisBottom, axisLeft } from 'd3-axis';\nimport { color } from 'd3-color';\nimport { dispatch } from 'd3-dispatch';\nimport * as d3Format from 'd3-format';\nimport { scaleLinear, scaleBand } from 'd3-scale';\nimport { mouse, select } from 'd3-selection';\nimport 'd3-transition';\n\nimport { wrapTextWithEllipses } from '../helpers/text';\nimport { exportChart } from '../helpers/export';\nimport colorHelper from '../helpers/color';\nimport { barLoadingMarkup } from '../helpers/load';\nimport { uniqueId } from '../helpers/number';\nimport { setDefaultLocale } from '../helpers/locale';\nimport { dataKeyDeprecationMessage } from '../helpers/project';\nimport { motion } from '../helpers/constants';\nimport { gridHorizontal, gridVertical } from '../helpers/grid';\n\nconst PERCENTAGE_FORMAT = '%';\nconst NUMBER_FORMAT = ',f';\n\n/**\n * Bar Chart reusable API class that renders a\n * simple and configurable bar chart.\n *\n * @module Bar\n * @tutorial bar\n * @requires d3-array, d3-ease, d3-axis, d3-color, d3-dispatch, d3-format, d3-scale, d3-selection, d3-transition\n *\n * @example\n * const barChart = bar();\n *\n * barChart\n *     .height(500)\n *     .width(800);\n *\n * d3.select('.css-selector')\n *     .datum(dataset)\n *     .call(barChart);\n *\n */\n\n/**\n * @typedef BarChartData\n * @type {Object[]}\n * @property {Number} value        Value of the group (required)\n * @property {String} name         Name of the group (required)\n *\n * @example\n * [\n *     {\n *         value: 1,\n *         name: 'glittering'\n *     },\n *     {\n *         value: 1,\n *         name: 'luminous'\n *     }\n * ]\n */\n\n/**\n * @typedef LocaleObject\n * @type {Object}\n * @property {String} decimal       the decimal point(e.g., \".\")\n * @property {String} thousands     the group separator(e.g., \",\")\n * @property {Number[]} grouping    the array of group sizes(e.g., [3]), cycled as needed\n * @property {String[]} currency    the currency prefix and suffix(e.g., [\"$\", \"\"])\n * @property {String[]} numerals    optional; an array of ten strings to replace the numerals 0 - 9.\n * @property {String} percent       optional; the percent sign(defaults to \"%\")\n * @property {String} minus         optional; the minus sign(defaults to hyphen - minus, \"-\")\n * @property {String} nan           optional; the not - a - number value(defaults \"NaN\")\n *\n * See some standard locale object values [here]{@link https://cdn.jsdelivr.net/npm/d3-format/locale/}.\n * @example\n * {\n *     \"decimal\": \",\",\n *     \"thousands\": \".\",\n *     \"grouping\": [3],\n *     \"currency\": [\"\", \"\\u00a0€\"]\n * }\n */\nexport default function module() {\n    let margin = {\n            top: 20,\n            right: 20,\n            bottom: 30,\n            left: 40,\n        },\n        width = 960,\n        height = 500,\n        isLoading = false,\n        data,\n        dataZeroed,\n        chartWidth,\n        chartHeight,\n        xScale,\n        yScale,\n        colorSchema = colorHelper.singleColors.aloeGreen,\n        colorList,\n        nameToColorMap = null,\n        chartGradientColors = null,\n        chartGradientEl,\n        chartGradientId = uniqueId('bar-gradient'),\n        yTicks = 5,\n        xTicks = 5,\n        percentageAxisToMaxRatio = 1,\n        numberFormat = NUMBER_FORMAT,\n        enableLabels = false,\n        labelsMargin = 7,\n        labelsNumberFormat = NUMBER_FORMAT,\n        labelsSize = 12,\n        betweenBarsPadding = 0.1,\n        xAxis,\n        yAxis,\n        xAxisPadding = {\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0,\n        },\n        yAxisPaddingBetweenChart = 10,\n        yAxisLineWrapLimit = 1,\n        isHorizontal = false,\n        svg,\n        hasSingleBarHighlight = true,\n        isAnimated = false,\n        ease = easeQuadInOut,\n        animationDuration = motion.duration,\n        animationStepRatio = 70,\n        interBarDelay = (d, i) => animationStepRatio * i,\n        highlightBarFunction = (barSelection) =>\n            barSelection.attr('fill', ({ name }) =>\n                color(\n                    chartGradientColors\n                        ? chartGradientColors[1]\n                        : nameToColorMap[name]\n                ).darker()\n            ),\n        orderingFunction,\n        // To Deprecate\n        valueLabel = 'value',\n        nameLabel = 'name',\n        labelEl,\n        xAxisLabelEl = null,\n        xAxisLabel = null,\n        xAxisLabelOffset = 30,\n        yAxisLabelEl = null,\n        yAxisLabel = null,\n        yAxisLabelOffset = -30,\n        shouldReverseColorList = true,\n        locale = null,\n        localeFormatter = d3Format,\n        // Dispatcher object to broadcast the mouse events\n        // Ref: https://github.com/mbostock/d3/wiki/Internals#d3_dispatch\n        dispatcher = dispatch(\n            'customMouseOver',\n            'customMouseOut',\n            'customMouseMove',\n            'customClick'\n        ),\n        // extractors\n        getName = ({ name }) => name,\n        getValue = ({ value }) => value,\n        _labelsHorizontalX = ({ value }) => xScale(value) + labelsMargin,\n        _labelsHorizontalY = ({ name }) =>\n            yScale(name) + yScale.bandwidth() / 2 + labelsSize * (3 / 8),\n        _labelsVerticalX = ({ name }) => xScale(name),\n        _labelsVerticalY = ({ value }) => yScale(value) - labelsMargin;\n\n    /**\n     * This function creates the graph using the selection as container\n     * @param  {D3Selection} _selection A d3 selection that represents\n     *                                  the container(s) where the chart(s) will be rendered\n     * @param {BarChartData} _data The data to attach and generate the chart\n     */\n    function exports(_selection) {\n        if (locale) {\n            localeFormatter = setDefaultLocale(locale);\n        }\n\n        _selection.each(function (_data) {\n            chartWidth =\n                width -\n                margin.left -\n                margin.right -\n                yAxisPaddingBetweenChart * 1.2;\n            chartHeight = height - margin.top - margin.bottom;\n            ({ data, dataZeroed } = sortData(cleanData(_data)));\n\n            buildSVG(this);\n            if (isLoading) {\n                drawLoadingState();\n\n                return;\n            }\n            cleanLoadingState();\n            buildScales();\n            buildAxis(localeFormatter);\n            buildGradient();\n            drawGridLines();\n            drawAxis();\n            drawBars();\n\n            if (enableLabels) {\n                drawLabels(localeFormatter);\n            }\n        });\n    }\n\n    /**\n     * Creates the d3 x and y axis, setting orientations\n     * @private\n     */\n    function buildAxis(locale) {\n        if (isHorizontal) {\n            xAxis = axisBottom(xScale)\n                .ticks(xTicks, locale.format(numberFormat))\n                .tickSizeInner([-chartHeight]);\n\n            yAxis = axisLeft(yScale).ticks(yTicks, locale.format(numberFormat));\n        } else {\n            xAxis = axisBottom(xScale);\n\n            yAxis = axisLeft(yScale).ticks(yTicks, locale.format(numberFormat));\n        }\n    }\n    /**\n     * Builds containers for the chart, the axis and a wrapper for all of them\n     * Also applies the Margin convention\n     * @private\n     */\n    function buildContainerGroups() {\n        let container = svg\n            .append('g')\n            .classed('container-group', true)\n            .attr(\n                'transform',\n                `translate(${margin.left + yAxisPaddingBetweenChart}, ${\n                    margin.top\n                })`\n            );\n\n        svg.append('g').classed('loading-state-group', true);\n\n        container.append('g').classed('grid-lines-group', true);\n        container.append('g').classed('chart-group', true);\n        container\n            .append('g')\n            .classed('x-axis-group axis', true)\n            .append('g')\n            .classed('x-axis-label', true);\n        container\n            .append('g')\n            .attr('transform', `translate(${-1 * yAxisPaddingBetweenChart}, 0)`)\n            .classed('y-axis-group axis', true)\n            .append('g')\n            .classed('y-axis-label', true);\n        container.append('g').classed('metadata-group', true);\n    }\n\n    /**\n     * Builds the gradient element to be used later\n     * @return {void}\n     * @private\n     */\n    function buildGradient() {\n        if (!chartGradientEl && chartGradientColors) {\n            chartGradientEl = svg\n                .select('.metadata-group')\n                .append('linearGradient')\n                .attr('id', chartGradientId)\n                .attr('x1', '0%')\n                .attr('y1', '0%')\n                .attr('x2', '100%')\n                .attr('y2', '100%')\n                .attr('gradientUnits', 'userSpaceOnUse')\n                .selectAll('stop')\n                .data([\n                    { offset: '0%', color: chartGradientColors[0] },\n                    { offset: '50%', color: chartGradientColors[1] },\n                ])\n                .enter()\n                .append('stop')\n                .attr('offset', ({ offset }) => offset)\n                .attr('stop-color', ({ color }) => color);\n        }\n    }\n\n    /**\n     * Creates the x and y scales of the graph\n     * @private\n     */\n    function buildScales() {\n        let percentageAxis = getPercentageAxis();\n\n        if (isHorizontal) {\n            xScale = scaleLinear()\n                .domain([0, percentageAxis])\n                .rangeRound([0, chartWidth]);\n\n            yScale = scaleBand()\n                .domain(data.map(getName))\n                .rangeRound([0, chartHeight])\n                .padding(betweenBarsPadding);\n        } else {\n            xScale = scaleBand()\n                .domain(data.map(getName))\n                .rangeRound([0, chartWidth])\n                .padding(betweenBarsPadding);\n\n            yScale = scaleLinear()\n                .domain([0, percentageAxis])\n                .rangeRound([chartHeight, 0]);\n        }\n\n        if (shouldReverseColorList) {\n            colorList = data\n                .map((d) => d)\n                .reverse()\n                .map(({ name }, i) => ({\n                    name,\n                    color: colorSchema[i % colorSchema.length],\n                }));\n        } else {\n            colorList = data\n                .map((d) => d)\n                .map(({ name }, i) => ({\n                    name,\n                    color: colorSchema[i % colorSchema.length],\n                }));\n        }\n\n        nameToColorMap =\n            nameToColorMap ||\n            data\n                .map((d) => d)\n                .reduce(\n                    (acc, { name }, i) => ({\n                        ...acc,\n                        [name]: colorSchema[i % colorSchema.length],\n                    }),\n                    {}\n                );\n    }\n\n    /**\n     * Builds the SVG element that will contain the chart\n     * @param  {HTMLElement} container DOM element that will work as the container of the graph\n     * @private\n     */\n    function buildSVG(container) {\n        if (!svg) {\n            svg = select(container)\n                .append('svg')\n                .classed('britechart bar-chart', true);\n\n            buildContainerGroups();\n        }\n\n        svg.attr('viewBox', [0, 0, width, height])\n            .attr('style', 'max-width: 100%; height: auto; height: intrinsic;')\n            .attr('width', width)\n            .attr('height', height);\n    }\n\n    /**\n     * Cleaning data casting the values and names to the proper type while keeping\n     * the rest of properties on the data\n     * It also creates a set of zeroed data (for animation purposes)\n     * @param  {BarChartData} originalData  Raw data as passed to the container\n     * @return  {BarChartData}              Clean data\n     * @private\n     */\n    function cleanData(originalData) {\n        let data = originalData.reduce((acc, d) => {\n            d.value = +d[valueLabel];\n            d.name = String(d[nameLabel]);\n\n            return [...acc, d];\n        }, []);\n\n        let dataZeroed = data.map((d) => ({\n            value: 0,\n            name: String(d[nameLabel]),\n        }));\n\n        return { data, dataZeroed };\n    }\n\n    /**\n     * A utility function that checks if custom gradient\n     * color map should be applied if specified by the user\n     * @param {String} name - bar's data point name\n     * @return {void}\n     * @private\n     */\n    function computeColor(name) {\n        return chartGradientColors\n            ? `url(#${chartGradientId})`\n            : nameToColorMap[name];\n    }\n\n    /**\n     * Sorts data if orderingFunction is specified\n     * @param  {BarChartData}     clean unordered data\n     * @return  {BarChartData}    clean ordered data\n     * @private\n     */\n    function sortData(unorderedData) {\n        let { data, dataZeroed } = unorderedData;\n\n        if (orderingFunction) {\n            data.sort(orderingFunction);\n            dataZeroed.sort(orderingFunction);\n        }\n\n        return { data, dataZeroed };\n    }\n\n    /**\n     * Utility function that wraps a text into the given width\n     * @param  {D3Selection} text         Text to write\n     * @param  {Number} containerWidth\n     * @private\n     */\n    function wrapText(text, containerWidth) {\n        wrapTextWithEllipses(text, containerWidth, 0, yAxisLineWrapLimit);\n    }\n\n    /**\n     * Cleans the loading state\n     * @private\n     */\n    function cleanLoadingState() {\n        svg.select('.loading-state-group svg').remove();\n    }\n\n    /**\n     * Draws the x and y axis on the svg object within their\n     * respective groups\n     * @private\n     */\n    function drawAxis() {\n        svg.select('.x-axis-group.axis')\n            .attr('transform', `translate(0, ${chartHeight})`)\n            .call(xAxis);\n\n        svg.select('.y-axis-group.axis').call(yAxis);\n\n        svg.selectAll('.y-axis-group .tick text').call(\n            wrapText,\n            margin.left - yAxisPaddingBetweenChart\n        );\n\n        drawAxisLabels();\n    }\n\n    /**\n     * Draws the x and y axis custom labels respective groups\n     * @private\n     */\n    function drawAxisLabels() {\n        if (yAxisLabel) {\n            if (yAxisLabelEl) {\n                yAxisLabelEl.remove();\n            }\n            yAxisLabelEl = svg\n                .select('.y-axis-label')\n                .append('text')\n                .classed('y-axis-label-text', true)\n                .attr('x', -chartHeight / 2)\n                .attr('y', yAxisLabelOffset)\n                .attr('text-anchor', 'middle')\n                .attr('transform', 'rotate(270 0 0)')\n                .text(yAxisLabel);\n        }\n\n        if (xAxisLabel) {\n            if (xAxisLabelEl) {\n                xAxisLabelEl.remove();\n            }\n            xAxisLabelEl = svg\n                .select('.x-axis-label')\n                .append('text')\n                .attr('y', xAxisLabelOffset)\n                .attr('text-anchor', 'middle')\n                .classed('x-axis-label-text', true)\n                .attr('x', chartWidth / 2)\n                .text(xAxisLabel);\n        }\n    }\n\n    /**\n     * Draws the bars along the x axis\n     * @param  {D3Selection} bars Selection of bars\n     * @return {void}\n     */\n    function drawHorizontalBars(bars) {\n        // Enter + Update\n        bars.enter()\n            .append('rect')\n            .classed('bar', true)\n            .attr('y', chartHeight)\n            .attr('x', 0)\n            .attr('height', yScale.bandwidth())\n            .attr('width', ({ value }) => xScale(value))\n            .on('mouseover', function (d, _, barList) {\n                handleMouseOver(this, d, barList, chartWidth, chartHeight);\n            })\n            .on('mousemove', function (d) {\n                handleMouseMove(this, d, chartWidth, chartHeight);\n            })\n            .on('mouseout', function (d, _, barList) {\n                handleMouseOut(this, d, barList, chartWidth, chartHeight);\n            })\n            .on('click', function (d) {\n                handleClick(this, d, chartWidth, chartHeight);\n            })\n            .merge(bars)\n            .attr('x', 0)\n            .attr('y', ({ name }) => yScale(name))\n            .attr('height', yScale.bandwidth())\n            .attr('width', ({ value }) => xScale(value))\n            .attr('fill', ({ name }) => computeColor(name));\n    }\n\n    /**\n     * Draws and animates the bars along the x axis\n     * @param  {D3Selection} bars Selection of bars\n     * @return {void}\n     */\n    function drawAnimatedHorizontalBars(bars) {\n        // Enter + Update\n        bars.enter()\n            .append('rect')\n            .classed('bar', true)\n            .attr('x', 0)\n            .attr('y', chartHeight)\n            .attr('height', yScale.bandwidth())\n            .attr('width', ({ value }) => xScale(value))\n            .on('mouseover', function (d, _, barList) {\n                handleMouseOver(this, d, barList, chartWidth, chartHeight);\n            })\n            .on('mousemove', function (d) {\n                handleMouseMove(this, d, chartWidth, chartHeight);\n            })\n            .on('mouseout', function (d, _, barList) {\n                handleMouseOut(this, d, barList, chartWidth, chartHeight);\n            })\n            .on('click', function (d) {\n                handleClick(this, d, chartWidth, chartHeight);\n            });\n\n        bars.attr('x', 0)\n            .attr('y', ({ name }) => yScale(name))\n            .attr('height', yScale.bandwidth())\n            .attr('fill', ({ name }) => computeColor(name))\n            .transition()\n            .duration(animationDuration)\n            .delay(interBarDelay)\n            .ease(ease)\n            .attr('width', ({ value }) => xScale(value));\n    }\n\n    /**\n     * Draws and animates the bars along the y axis\n     * @param  {D3Selection} bars Selection of bars\n     * @return {void}\n     */\n    function drawAnimatedVerticalBars(bars) {\n        // Enter + Update\n        bars.enter()\n            .append('rect')\n            .classed('bar', true)\n            .attr('x', chartWidth)\n            .attr('y', ({ value }) => yScale(value))\n            .attr('width', xScale.bandwidth())\n            .attr('height', ({ value }) => chartHeight - yScale(value))\n            .on('mouseover', function (d, _, barList) {\n                handleMouseOver(this, d, barList, chartWidth, chartHeight);\n            })\n            .on('mousemove', function (d) {\n                handleMouseMove(this, d, chartWidth, chartHeight);\n            })\n            .on('mouseout', function (d, _, barList) {\n                handleMouseOut(this, d, barList, chartWidth, chartHeight);\n            })\n            .on('click', function (d) {\n                handleClick(this, d, chartWidth, chartHeight);\n            })\n            .merge(bars)\n            .attr('x', ({ name }) => xScale(name))\n            .attr('width', xScale.bandwidth())\n            .attr('fill', ({ name }) => computeColor(name))\n            .transition()\n            .duration(animationDuration)\n            .delay(interBarDelay)\n            .ease(ease)\n            .attr('y', ({ value }) => yScale(value))\n            .attr('height', ({ value }) => chartHeight - yScale(value));\n    }\n\n    /**\n     * Draws the bars along the y axis\n     * @param  {D3Selection} bars Selection of bars\n     * @return {void}\n     */\n    function drawVerticalBars(bars) {\n        // Enter + Update\n        bars.enter()\n            .append('rect')\n            .classed('bar', true)\n            .attr('x', chartWidth)\n            .attr('y', ({ value }) => yScale(value))\n            .attr('width', xScale.bandwidth())\n            .attr('height', ({ value }) => chartHeight - yScale(value))\n            .on('mouseover', function (d, _, barList) {\n                handleMouseOver(this, d, barList, chartWidth, chartHeight);\n            })\n            .on('mousemove', function (d) {\n                handleMouseMove(this, d, chartWidth, chartHeight);\n            })\n            .on('mouseout', function (d, _, barList) {\n                handleMouseOut(this, d, barList, chartWidth, chartHeight);\n            })\n            .on('click', function (d) {\n                handleClick(this, d, chartWidth, chartHeight);\n            })\n            .merge(bars)\n            .attr('x', ({ name }) => xScale(name))\n            .attr('y', ({ value }) => yScale(value))\n            .attr('width', xScale.bandwidth())\n            .attr('height', ({ value }) => chartHeight - yScale(value))\n            .attr('fill', ({ name }) => computeColor(name));\n    }\n\n    /**\n     * Draws labels at the end of each bar\n     * @private\n     * @return {void}\n     */\n    function drawLabels(locale) {\n        const labelXPosition = isHorizontal\n            ? _labelsHorizontalX\n            : _labelsVerticalX;\n        const labelYPosition = isHorizontal\n            ? _labelsHorizontalY\n            : _labelsVerticalY;\n        const textFormatter = ({ value }) =>\n            locale.format(labelsNumberFormat)(value);\n\n        if (labelEl) {\n            svg.selectAll('.percentage-label-group').remove();\n        }\n\n        labelEl = svg\n            .select('.metadata-group')\n            .append('g')\n            .classed('percentage-label-group', true)\n            .selectAll('text')\n            .data(data.reverse())\n            .enter()\n            .append('text');\n\n        labelEl\n            .classed('percentage-label', true)\n            .attr('x', labelXPosition)\n            .attr('y', labelYPosition)\n            .text(textFormatter)\n            .attr('font-size', labelsSize + 'px');\n    }\n\n    /**\n     * Draws the bar elements within the chart group\n     * @private\n     */\n    function drawBars() {\n        let bars;\n\n        if (isAnimated) {\n            bars = svg\n                .select('.chart-group')\n                .selectAll('.bar')\n                .data(dataZeroed);\n\n            if (isHorizontal) {\n                drawHorizontalBars(bars);\n            } else {\n                drawVerticalBars(bars);\n            }\n\n            bars = svg.select('.chart-group').selectAll('.bar').data(data);\n\n            if (isHorizontal) {\n                drawAnimatedHorizontalBars(bars);\n            } else {\n                drawAnimatedVerticalBars(bars);\n            }\n\n            // Exit\n            bars.exit().transition().style('opacity', 0).remove();\n        } else {\n            bars = svg.select('.chart-group').selectAll('.bar').data(data);\n\n            if (isHorizontal) {\n                drawHorizontalBars(bars);\n            } else {\n                drawVerticalBars(bars);\n            }\n\n            // Exit\n            bars.exit().remove();\n        }\n    }\n\n    /**\n     * Draws grid lines on the background of the chart\n     * @return void\n     */\n    function drawGridLines() {\n        svg.select('.grid-lines-group').selectAll('grid').remove();\n\n        if (isHorizontal) {\n            drawVerticalGridLines();\n        } else {\n            drawHorizontalGridLines();\n        }\n    }\n\n    /**\n     * Draws the grid lines for an horizontal bar chart\n     * @return {void}\n     */\n    function drawVerticalGridLines() {\n        const grid = gridVertical(xScale)\n            .range([0, chartHeight])\n            .hideEdges('first')\n            .ticks(xTicks);\n\n        grid(svg.select('.grid-lines-group'));\n\n        drawVerticalExtendedLine();\n    }\n\n    /**\n     * Draws the loading state\n     * @private\n     */\n    function drawLoadingState() {\n        svg.select('.loading-state-group').html(barLoadingMarkup);\n    }\n\n    /**\n     * Draws a vertical line to extend y-axis till the edges\n     * @return {void}\n     */\n    function drawVerticalExtendedLine() {\n        svg.select('.grid-lines-group')\n            .selectAll('line.extended-y-line')\n            .data([0])\n            .enter()\n            .append('line')\n            .attr('class', 'extended-y-line')\n            .attr('y1', xAxisPadding.bottom)\n            .attr('y2', chartHeight)\n            .attr('x1', 0)\n            .attr('x2', 0);\n    }\n\n    /**\n     * Draws the grid lines for a vertical bar chart\n     * @return {void}\n     */\n    function drawHorizontalGridLines() {\n        const grid = gridHorizontal(yScale)\n            .range([0, chartWidth])\n            .hideEdges('first')\n            .ticks(yTicks);\n\n        grid(svg.select('.grid-lines-group'));\n\n        drawHorizontalExtendedLine();\n    }\n\n    /**\n     * Draws a vertical line to extend x-axis till the edges\n     * @return {void}\n     */\n    function drawHorizontalExtendedLine() {\n        svg.select('.grid-lines-group')\n            .selectAll('line.extended-x-line')\n            .data([0])\n            .enter()\n            .append('line')\n            .attr('class', 'extended-x-line')\n            .attr('x1', xAxisPadding.left)\n            .attr('x2', chartWidth)\n            .attr('y1', chartHeight)\n            .attr('y2', chartHeight);\n    }\n\n    /**\n     * Custom OnMouseOver event handler\n     * @return {void}\n     * @private\n     */\n    function handleMouseOver(e, d, barList, chartWidth, chartHeight) {\n        dispatcher.call('customMouseOver', e, d, mouse(e), [\n            chartWidth,\n            chartHeight,\n        ]);\n        highlightBarFunction = highlightBarFunction || function () {};\n\n        if (hasSingleBarHighlight) {\n            highlightBarFunction(select(e));\n\n            return;\n        }\n\n        barList.forEach((barRect) => {\n            if (barRect === e) {\n                return;\n            }\n            highlightBarFunction(select(barRect));\n        });\n    }\n\n    /**\n     * Custom OnMouseMove event handler\n     * @return {void}\n     * @private\n     */\n    function handleMouseMove(e, d, chartWidth, chartHeight) {\n        dispatcher.call('customMouseMove', e, d, mouse(e), [\n            chartWidth,\n            chartHeight,\n        ]);\n    }\n\n    /**\n     * Custom OnMouseOver event handler\n     * @return {void}\n     * @private\n     */\n    function handleMouseOut(e, d, barList, chartWidth, chartHeight) {\n        dispatcher.call('customMouseOut', e, d, mouse(e), [\n            chartWidth,\n            chartHeight,\n        ]);\n\n        barList.forEach((barRect) => {\n            select(barRect).attr('fill', ({ name }) => computeColor(name));\n        });\n    }\n\n    /**\n     * Custom onClick event handler\n     * @return {void}\n     * @private\n     */\n    function handleClick(e, d, chartWidth, chartHeight) {\n        dispatcher.call('customClick', e, d, mouse(e), [\n            chartWidth,\n            chartHeight,\n        ]);\n    }\n\n    /**\n     * Gets the percentageAxis, sets it to `percentageAxisToMaxRatio` if all data points are 0\n     * @return {number} Calculated percentageAxis\n     * @private\n     */\n    function getPercentageAxis() {\n        const uniqueDataPoints = new Set(data.map(getValue));\n        const allZeroes =\n            uniqueDataPoints.size === 1 && uniqueDataPoints.has(0);\n\n        if (allZeroes) {\n            return percentageAxisToMaxRatio;\n        }\n\n        return Math.min(percentageAxisToMaxRatio * max(data, getValue));\n    }\n\n    // API\n    /**\n     * Gets or Sets the duration of the animation\n     * @param  {Number} _x=1200         Desired animation duration for the graph\n     * @return {duration | module}      Current animation duration or Chart module to chain calls\n     * @public\n     */\n    exports.animationDuration = function (_x) {\n        if (!arguments.length) {\n            return animationDuration;\n        }\n        animationDuration = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the padding of the chart (Default is 0.1)\n     * @param  { Number | module } _x   Padding value to get/set\n     * @return {padding | module}       Current padding or Chart module to chain calls\n     * @public\n     */\n    exports.betweenBarsPadding = function (_x) {\n        if (!arguments.length) {\n            return betweenBarsPadding;\n        }\n        betweenBarsPadding = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the gradient colors of a bar in the chart\n     * @param  {String[]} _x            Desired color gradient for the line (array of two hexadecimal numbers)\n     * @return {String[] | module}      Current color gradient or Line Chart module to chain calls\n     * @public\n     */\n    exports.chartGradient = function (_x) {\n        if (!arguments.length) {\n            return chartGradientColors;\n        }\n        chartGradientColors = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the colorMap of the chart\n     * @param  {object} [_x=null]    Color map\n     * @return {object | module}     Current colorMap or Chart module to chain calls\n     * @example barChart.colorMap({name: 'colorHex', name2: 'colorString'})\n     * @public\n     */\n    exports.colorMap = function (_x) {\n        if (!arguments.length) {\n            return nameToColorMap;\n        }\n        nameToColorMap = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the colorSchema of the chart\n     * @param  {String[]} _x Desired colorSchema for the graph\n     * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n     * @public\n     */\n    exports.colorSchema = function (_x) {\n        if (!arguments.length) {\n            return colorSchema;\n        }\n        colorSchema = _x;\n\n        return this;\n    };\n\n    /**\n     * If true, adds labels at the end of the bars\n     * @param  {Boolean} [_x=false]\n     * @return {Boolean | module}    Current value of enableLabels or Chart module to chain calls\n     * @public\n     */\n    exports.enableLabels = function (_x) {\n        if (!arguments.length) {\n            return enableLabels;\n        }\n        enableLabels = _x;\n\n        return this;\n    };\n\n    /**\n     * Chart exported to png and a download action is fired\n     * @param {String} filename     File title for the resulting picture\n     * @param {String} title        Title to add at the top of the exported picture\n     * @return {Promise}            Promise that resolves if the chart image was loaded and downloaded successfully\n     * @public\n     */\n    exports.exportChart = function (filename, title) {\n        return exportChart.call(exports, svg, filename, title);\n    };\n\n    /**\n     * Gets or Sets the hasPercentage status\n     * @param  {boolean} _x         Should use percentage as value format\n     * @return {boolean | module}   Is percentage used or Chart module to chain calls\n     * @public\n     */\n    exports.hasPercentage = function (_x) {\n        if (!arguments.length) {\n            return numberFormat === PERCENTAGE_FORMAT;\n        }\n        if (_x) {\n            numberFormat = PERCENTAGE_FORMAT;\n        } else {\n            numberFormat = NUMBER_FORMAT;\n        }\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the hasSingleBarHighlight status.\n     * If the value is true (default), only the hovered bar is considered to\n     * be highlighted and will be darkened by default. If the value is false,\n     * all the bars but the hovered bar are considered to be highlighted\n     * and will be darkened (by default). To customize the bar highlight or\n     * remove it completely, use highlightBarFunction instead.\n     * @param  {boolean} _x        Should highlight the hovered bar\n     * @return {boolean | module} Is hasSingleBarHighlight used or Chart module to chain calls\n     * @public\n     */\n    exports.hasSingleBarHighlight = function (_x) {\n        if (!arguments.length) {\n            return hasSingleBarHighlight;\n        }\n        hasSingleBarHighlight = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the height of the chart\n     * @param  {number} _x Desired width for the graph\n     * @return {height | module} Current height or Chart module to chain calls\n     * @public\n     */\n    exports.height = function (_x) {\n        if (!arguments.length) {\n            return height;\n        }\n        height = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the highlightBarFunction function. The callback passed to\n     * this function returns a bar selection from the bar chart. Use this function\n     * if you want to apply a custom behavior to the highlighted bar on hover.\n     * When hasSingleBarHighlight is true the highlighted bar will be the\n     * one that was hovered by the user. When hasSingleBarHighlight is false\n     * the highlighted bars are all the bars but the hovered one. The default\n     * highlight effect on a bar is darkening the highlighted bar(s) color.\n     * @param  {Function} _x        Desired operation operation on a hovered bar passed through callback\n     * @return {highlightBarFunction | module} Is highlightBarFunction used or Chart module to chain calls\n     * @public\n     * @example barChart.highlightBarFunction(bar => bar.attr('fill', 'blue'))\n     * barChart.highlightBarFunction(null) // will disable the default highlight effect\n     */\n    exports.highlightBarFunction = function (_x) {\n        if (!arguments.length) {\n            return highlightBarFunction;\n        }\n        highlightBarFunction = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n     * By default this is 'false'\n     *\n     * @param  {Boolean} _x             Desired animation flag\n     * @return {isAnimated | module}    Current isAnimated flag or Chart module\n     * @public\n     */\n    exports.isAnimated = function (_x) {\n        if (!arguments.length) {\n            return isAnimated;\n        }\n        isAnimated = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the horizontal direction of the chart\n     * @param  {number} _x              Desired horizontal direction for the graph\n     * @return { isHorizontal | module} If it is horizontal or Chart module to chain calls\n     * @public\n     */\n    exports.isHorizontal = function (_x) {\n        if (!arguments.length) {\n            return isHorizontal;\n        }\n        isHorizontal = _x;\n\n        return this;\n    };\n\n    /**\n     * Offset between end of bar and start of the percentage bars\n     * @param  {number} [_x=7]      Margin offset from end of bar\n     * @return {number | module}    Current offset or Chart module to chain calls\n     * @public\n     */\n    exports.labelsMargin = function (_x) {\n        if (!arguments.length) {\n            return labelsMargin;\n        }\n        labelsMargin = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the labels number format\n     * @param  {string} [_x=\",f\"] desired label number format for the bar chart\n     * @return {string | module} Current labelsNumberFormat or Chart module to chain calls\n     * @public\n     */\n    exports.labelsNumberFormat = function (_x) {\n        if (!arguments.length) {\n            return labelsNumberFormat;\n        }\n        labelsNumberFormat = _x;\n\n        return this;\n    };\n\n    /**\n     * Get or Sets the labels text size\n     * @param  {number} [_x=12] label font size\n     * @return {number | module}    Current text size or Chart module to chain calls\n     * @public\n     */\n    exports.labelsSize = function (_x) {\n        if (!arguments.length) {\n            return labelsSize;\n        }\n        labelsSize = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the loading state of the chart\n     * @param  {boolean} flag       Desired value for the loading state\n     * @return {boolean | module}   Current loading state flag or Chart module to chain calls\n     * @public\n     */\n    exports.isLoading = function (_flag) {\n        if (!arguments.length) {\n            return isLoading;\n        }\n        isLoading = _flag;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the margin of the chart\n     * @param  {object} _x Margin object to get/set\n     * @return {margin | module} Current margin or Chart module to chain calls\n     * @public\n     */\n    exports.margin = function (_x) {\n        if (!arguments.length) {\n            return margin;\n        }\n        margin = {\n            ...margin,\n            ..._x,\n        };\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the nameLabel of the chart\n     * @param  {number} _x Desired nameLabel for the graph\n     * @return {number | module} Current nameLabel or Chart module to chain calls\n     * @public\n     * @deprecated\n     */\n    exports.nameLabel = function (_x) {\n        if (!arguments.length) {\n            return nameLabel;\n        }\n        nameLabel = _x;\n        dataKeyDeprecationMessage('name');\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the number format of the bar chart\n     * @param  {string} _x = ',f'     Desired numberFormat for the chart. See examples [here]{@link https://observablehq.com/@d3/d3-format}\n     * @return {string | module}      Current numberFormat or Chart module to chain calls\n     * @public\n     */\n    exports.numberFormat = function (_x) {\n        if (!arguments.length) {\n            return numberFormat;\n        }\n        numberFormat = _x;\n\n        return this;\n    };\n\n    /**\n     * Exposes an 'on' method that acts as a bridge with the event dispatcher\n     * We are going to expose this events:\n     * customMouseOver, customMouseMove, customMouseOut, and customClick\n     *\n     * @return {module} Bar Chart\n     * @public\n     */\n    exports.on = function () {\n        let value = dispatcher.on.apply(dispatcher, arguments);\n\n        return value === dispatcher ? exports : value;\n    };\n\n    /**\n     * Configurable extension of the x axis. If your max point was 50% you might want to show x axis to 60%, pass 1.2\n     * @param  {number} _x ratio to max data point to add to the x axis\n     * @return {ratio | module} Current ratio or Chart module to chain calls\n     * @public\n     */\n    exports.percentageAxisToMaxRatio = function (_x) {\n        if (!arguments.length) {\n            return percentageAxisToMaxRatio;\n        }\n        percentageAxisToMaxRatio = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets whether the color list should be reversed or not\n     * @param  {boolean} _x     Should reverse the color list\n     * @return {boolean | module} Is color list being reversed or Chart module to chain calls\n     * @public\n     */\n    exports.shouldReverseColorList = function (_x) {\n        if (!arguments.length) {\n            return shouldReverseColorList;\n        }\n        shouldReverseColorList = _x;\n\n        return this;\n    };\n\n    /**\n     * Changes the order of items given the custom function\n     * @param  {Function} _x             A custom function that sets logic for ordering\n     * @return {(Function | Module)}   A custom ordering function or Chart module to chain calls\n     * @public\n     */\n    exports.orderingFunction = function (_x) {\n        if (!arguments.length) {\n            return orderingFunction;\n        }\n        orderingFunction = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the valueLabel of the chart\n     * @param  {Number} _x Desired valueLabel for the graph\n     * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n     * @public\n     * @deprecated\n     */\n    exports.valueLabel = function (_x) {\n        if (!arguments.length) {\n            return valueLabel;\n        }\n        valueLabel = _x;\n        dataKeyDeprecationMessage('value');\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the locale which our formatting functions use.\n     * Check [the d3-format docs]{@link https://github.com/d3/d3-format#formatLocale} for the required values.\n     * @example\n     *  barChart\n     *  .valueLocale({thousands: '.', grouping: [3], currency: [\"$\", \"\"], decimal: \".\"})\n     * @param  {LocaleObject}  [_x=null]  _x    Desired locale object format.\n     * @return {LocaleObject | module}          Current locale object or Chart module to chain calls\n     * @public\n     */\n    exports.valueLocale = function (_x) {\n        if (!arguments.length) {\n            return locale;\n        }\n        locale = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the width of the chart\n     * @param  {number} _x Desired width for the graph\n     * @return {width | module} Current width or Chart module to chain calls\n     * @public\n     */\n    exports.width = function (_x) {\n        if (!arguments.length) {\n            return width;\n        }\n        width = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the text of the xAxisLabel on the chart\n     * @param  {String} _x          Desired text for the label\n     * @return {String | module}    Label or Chart module to chain calls\n     * @public\n     */\n    exports.xAxisLabel = function (_x) {\n        if (!arguments.length) {\n            return xAxisLabel;\n        }\n        xAxisLabel = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the offset of the xAxisLabel on the chart\n     * @param  {Number} _x Desired offset for the label\n     * @return {Number | module} label or Chart module to chain calls\n     * @public\n     */\n    exports.xAxisLabelOffset = function (_x) {\n        if (!arguments.length) {\n            return xAxisLabelOffset;\n        }\n        xAxisLabelOffset = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the number of ticks of the x axis on the chart\n     * @param  {Number} _x = 5          Desired horizontal ticks\n     * @return {Number | module}        Current xTicks or Chart module to chain calls\n     * @public\n     */\n    exports.xTicks = function (_x) {\n        if (!arguments.length) {\n            return xTicks;\n        }\n        xTicks = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the text of the yAxisLabel on the chart\n     * @param  {String} _x          Desired text for the label\n     * @return {String | module}    Label or Chart module to chain calls\n     * @public\n     */\n    exports.yAxisLabel = function (_x) {\n        if (!arguments.length) {\n            return yAxisLabel;\n        }\n        yAxisLabel = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the offset of the yAxisLabel on the chart\n     * @param  {Number} _x          Desired offset for the label\n     * @return {Number | module}    Label or Chart module to chain calls\n     * @public\n     */\n    exports.yAxisLabelOffset = function (_x) {\n        if (!arguments.length) {\n            return yAxisLabelOffset;\n        }\n        yAxisLabelOffset = _x;\n\n        return this;\n    };\n\n    /**\n     * Space between y axis and chart\n     * @param  {Number} _x = 10     Space between y axis and chart\n     * @return {Number| module}     Current value of yAxisPaddingBetweenChart or Chart module to chain calls\n     * @public\n     */\n    exports.yAxisPaddingBetweenChart = function (_x) {\n        if (!arguments.length) {\n            return yAxisPaddingBetweenChart;\n        }\n        yAxisPaddingBetweenChart = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the number of vertical ticks on the chart\n     * @param  {Number} _x = 6         Desired number of vertical ticks for the graph\n     * @return {Number | module}       Current yTicks or Chart module to chain calls\n     * @public\n     */\n    exports.yTicks = function (_x) {\n        if (!arguments.length) {\n            return yTicks;\n        }\n        yTicks = _x;\n\n        return this;\n    };\n\n    return exports;\n}\n"],"sourceRoot":""}