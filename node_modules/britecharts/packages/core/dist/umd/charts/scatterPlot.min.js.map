{"version":3,"sources":["webpack://core.[name]/webpack/universalModuleDefinition","webpack://core.[name]/webpack/bootstrap","webpack://core.[name]/external \"d3-time\"","webpack://core.[name]/external \"d3-shape\"","webpack://core.[name]/external \"d3-selection\"","webpack://core.[name]/external \"d3-format\"","webpack://core.[name]/external \"d3-array\"","webpack://core.[name]/./src/charts/helpers/constants.js","webpack://core.[name]/external \"d3-scale\"","webpack://core.[name]/./src/charts/helpers/color.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/defineProperty.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/typeof.js","webpack://core.[name]/external \"d3-axis\"","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://core.[name]/external \"d3-time-format\"","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://core.[name]/external \"d3-ease\"","webpack://core.[name]/./src/charts/helpers/export.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/base-64/base64.js","webpack://core.[name]/./src/charts/helpers/style.js","webpack://core.[name]/./src/charts/helpers/number.js","webpack://core.[name]/external \"d3-transition\"","webpack://core.[name]/external \"d3-dispatch\"","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://core.[name]//home/golodhros/src/britecharts/node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://core.[name]/./src/charts/helpers/grid.js","webpack://core.[name]/(webpack)/buildin/module.js","webpack://core.[name]/(webpack)/buildin/global.js","webpack://core.[name]/./src/charts/helpers/filter.js","webpack://core.[name]/./src/charts/helpers/classes.js","webpack://core.[name]/./src/charts/helpers/locale.js","webpack://core.[name]/external \"d3-zoom\"","webpack://core.[name]/external \"d3-voronoi\"","webpack://core.[name]/./src/charts/scatter-plot/scatter-plot.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__11__","__WEBPACK_EXTERNAL_MODULE__14__","__WEBPACK_EXTERNAL_MODULE__16__","__WEBPACK_EXTERNAL_MODULE__22__","__WEBPACK_EXTERNAL_MODULE__23__","__WEBPACK_EXTERNAL_MODULE__44__","__WEBPACK_EXTERNAL_MODULE__47__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","axisTimeCombinations","MINUTE_HOUR","HOUR_DAY","DAY_MONTH","MONTH_YEAR","CUSTOM","timeBenchmarks","ONE_AND_A_HALF_YEARS","ONE_YEAR","ONE_DAY","hoursHuman","motion","duration","curveMap","linear","curveLinear","basis","curveBasis","cardinal","curveCardinal","catmullRom","curveCatmullRom","monotoneX","curveMonotoneX","monotoneY","curveMonotoneY","natural","curveNatural","step","curveStep","stepAfter","curveStepAfter","stepBefore","curveStepBefore","emptyDonutData","quantity","percentage","timeIntervals","timeMillisecond","utcMillisecond","timeSecond","utcSecond","timeMinute","utcMinute","timeHour","utcHour","timeDay","utcDay","timeWeek","utcWeek","timeSunday","utcSunday","timeMonday","utcMonday","timeTuesday","utcTuesday","timeWednesday","utcWednesday","timeThursday","utcThursday","timeFriday","utcFriday","timeSaturday","utcSaturday","timeMonth","utcMonth","timeYear","utcYear","colorGradients","greenBlue","orangePink","bluePurple","colorGradientsHuman","britecharts","grey","orange","blueGreen","teal","green","yellow","pink","purple","red","colorSchemas","colorSchemasHuman","aloeGreen","greenColor","blueColor","yellowColor","orangeColor","singleColors","pinkColor","purpleColor","singleColorsHuman","obj","configurable","writable","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arr","_typeof","iterator","constructor","len","length","arr2","Array","arrayLikeToArray","minLen","toString","slice","from","test","isBrowser","isIE","navigator","msSaveOrOpenBlob","encoder","btoa","base64","encode","config","styleClass","defaultFilename","chartBackground","imageSourceBase","titleFontSize","titleFontFamily","titleTopOffset","this","exportChart","d3svg","filename","title","console","error","loadImage","convertSvgToHtml","then","img","canvas","createCanvas","width","height","handleImageLoad","attr","html","serializeWithStyles","initializeSerializer","serializer","node","userAgent","search","replace","formatHtmlByBrowser","styleBackgroundString","addBackground","prependTitle","parseInt","document","createElement","createImage","svgHtml","callback","Image","Error","src","encodeURIComponent","match","p1","String","fromCharCode","drawImageOnCanvas","image","getContext","drawImage","extensionType","url","toDataURL","link","href","download","body","appendChild","click","removeChild","downloadCanvas","Promise","res","rej","addEventListener","err","svgWidth","margin","left","freeExports","freeGlobal","global","InvalidCharacterError","message","TABLE","REGEX_SPACE_CHARACTERS","input","a","b","buffer","padding","output","position","charCodeAt","charAt","bitStorage","bitCounter","indexOf","noStyleTags","BASE","HEAD","HTML","META","NOFRAME","NOSCRIPT","PARAM","SCRIPT","STYLE","TITLE","tagNames","computeDefaultStyleByTagName","tagName","defaultStyle","element","computedStyle","getComputedStyle","forEach","style","defaultStylesByTagName","elem","elements","result","cssTexts","nodeType","Node","ELEMENT_NODE","querySelectorAll","el","toUpperCase","cssText","cssPropName","outerHTML","map","idCounter","integerValueFormats","small","limit","format","medium","large","decimalValueFormats","getValueSize","limits","size","calcLinearRegression","dataPoints","x","y","xy","x2","denominator","intercept","slope","minX","min","maxX","max","x1","y1","y2","calculatePercent","total","decimals","percent","isInteger","formatDecimalValue","formatIntegerValue","uniqueId","prefix","id","isArray","iter","TypeError","classArray","scaleLinear","DIR","positionNumber","scale","positionCenter","offset","Math","bandwidth","round","gridBase","orient","range","offsetStart","offsetEnd","hideEdges","ticks","tickValues","classArr","gridBaseGenerator","context","values","hideFirst","hideLast","scaleTicks","apply","domain","shift","pop","getValues","copy","k","selection","initContainer","selectAll","asSelector","data","container","merge","enter","append","asList","line","order","lineExit","exit","lineEnter","exitPosition","isFinite","getAttribute","enterPosition","parentNode","__pos","transition","remove","each","_","arguments","gridHorizontal","gridVertical","webpackPolyfill","deprecate","paths","children","g","Function","e","filterId","createFilterContainer","metadataSelection","createGlowWithMatrix","filterSelector","bounceCircleHighlight","ease","radius","bounceRadius","delay","join","REQUIRED_LOCALE_DEFINITION_KEYS","setDefaultLocale","locale","isValidLocaleDefinition","d3Format","every","localeKey","voronoiMesh","xAxis","xScale","xOriginalScale","yAxis","yScale","yOriginalScale","areaScale","colorScale","yAxisLabel","yAxisLabelEl","xAxisLabel","xAxisLabelEl","trendLinePath","highlightPointData","highlightFilter","highlightFilterId","highlightCrossHairContainer","highlightCrossHairLabelsContainer","svg","chartWidth","chartHeight","top","right","bottom","nameToColorMap","xTicks","yTicks","grid","xAxisFormatType","xAxisFormat","yAxisFormat","yAxisLabelOffset","xAxisLabelOffset","trendLineCurve","highlightTextLegendOffset","xAxisPadding","circleOpacity","circleStrokeOpacity","circleStrokeWidth","highlightCircle","highlightCircleOpacity","maxCircleArea","colorSchema","colorHelper","isAnimated","hasCrossHairs","hasTrendline","enableZoom","easeCircleIn","hasHollowCircles","localeFormatter","dispatcher","dispatch","getName","getPointData","_selection","_data","reduce","acc","minY","maxY","yScaleBottomValue","abs","rangeRound","nice","scaleOrdinal","scaleSqrt","colorRange","accum","item","buildScales","select","classed","buildContainerGroups","buildSVG","axisBottom","tickPadding","tickFormat","getXAxisFormat","axisLeft","buildAxis","voronoi","extent","text","drawGridLines","initHighlightComponents","circles","drawDataPoints","zoom","d3Zoom","scaleExtent","on","updateChartAfterZoom","initZoom","linearData","params","trendLine","curve","totalLength","pathLength","drawTrendline","closestPoint","pointData","getClosestPoint","showCrossHairComponentsWithLabels","removePointHighlight","highlightDataPoint","mouse","handleMouseOver","handleMouseOut","dataPoint","index","transform","zoomTransform","rescaleX","rescaleY","mousePos","find","timeFormat","status","opacityIndex","animationDuration","_x","colorMap","valueLocale"],"mappings":"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,MACA,MACA,MACA,OAGSC,EAAS,CAClBC,SAAU,MAGDC,EAAW,CACpBC,OAAQC,cACRC,MAAOC,aACPC,SAAUC,gBACVC,WAAYC,kBACZC,UAAWC,iBACXC,UAAWC,iBACXC,QAASC,eACTC,KAAMC,YACNC,UAAWC,iBACXC,WAAYC,mBAGHC,EAAiB,CAC1B,CACIC,SAAU,EACVC,WAAY,MAIPC,EAAgB,CACzBC,gBAAiBA,kBACjBC,eAAgBA,iBAChBC,WAAYA,aACZC,UAAWA,YACXC,WAAYA,aACZC,UAAWA,YACXC,SAAUA,WACVC,QAASA,UACTC,QAASA,UACTC,OAAQA,SACRC,SAAUA,WACVC,QAASA,UACTC,WAAYA,aACZC,UAAWA,YACXC,WAAYA,aACZC,UAAWA,YACXC,YAAaA,cACbC,WAAYA,aACZC,cAAeA,gBACfC,aAAcA,eACdC,aAAcA,eACdC,YAAaA,cACbC,WAAYA,aACZC,UAAWA,YACXC,aAAcA,eACdC,YAAaA,cACbC,UAAWA,YACXC,SAAUA,WACVC,SAAUA,WACVC,QAASA,Y,cC5IbxH,EAAOD,QAAUW,G,6BCAjB,oyBACO,IAAM+G,EAAiB,CAC1BC,UAAW,CAAC,UAAW,WACvBC,WAAY,CAAC,UAAW,WACxBC,WAAY,CAAC,UAAW,YAEfC,EAAsB,CAC/BH,UAAW,gBACXC,WAAY,iBACZC,WAAY,kBAKHE,EAAc,CACvB,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAO,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAS,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAY,CACrB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAO,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAQ,CACjB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAS,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAO,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAS,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAM,CACf,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGSC,EAAe,CACxBV,cACAC,OACAC,SACAC,YACAC,OACAC,QACAC,SACAC,OACAC,SACAC,OAESE,EAAoB,CAC7BX,YAAa,sBACbC,KAAM,mBACNC,OAAQ,SACRC,UAAW,OACXC,KAAM,aACNC,MAAO,QACPC,OAAQ,SACRC,KAAM,OACNC,OAAQ,SACRC,IAAK,OAIIG,EAAY,CAAC,WACbC,EAAa,CAAC,WACdC,EAAY,CAAC,WACbC,EAAc,CAAC,WACfC,EAAc,CAAC,WAItBC,EAAe,CACjBL,YACAC,aACAC,YACAC,cACAC,cACAE,UATc,CAAC,WAUfC,YATgB,CAAC,YAqBN,WACXT,eACAC,oBACAhB,iBACAI,sBACAkB,eACAG,kBAhBsB,CACtBR,UAAW,aACXC,WAAY,QACZC,UAAW,OACXC,YAAa,SACbC,YAAa,SACbE,UAAW,OACXC,YAAa,Y,cCtKjBjJ,EAAOD,QAfP,SAAyBoJ,EAAKvG,EAAKN,GAYjC,OAXIM,KAAOuG,EACTpH,OAAOC,eAAemH,EAAKvG,EAAK,CAC9BN,MAAOA,EACPL,YAAY,EACZmH,cAAc,EACdC,UAAU,IAGZF,EAAIvG,GAAON,EAGN6G,GAGyBnJ,EAAOD,QAAQ0C,YAAa,EAAMzC,EAAOD,QAAiB,QAAIC,EAAOD,S,gBCfvG,IAAIuJ,EAAoB,EAAQ,IAE5BC,EAAkB,EAAQ,IAE1BC,EAA6B,EAAQ,IAErCC,EAAoB,EAAQ,IAMhCzJ,EAAOD,QAJP,SAA4B2J,GAC1B,OAAOJ,EAAkBI,IAAQH,EAAgBG,IAAQF,EAA2BE,IAAQD,KAGzDzJ,EAAOD,QAAQ0C,YAAa,EAAMzC,EAAOD,QAAiB,QAAIC,EAAOD,S,cCZ1G,SAAS4J,EAAQR,GAGf,OAAQnJ,EAAOD,QAAU4J,EAAU,mBAAqBvH,QAAU,iBAAmBA,OAAOwH,SAAW,SAAUT,GAC/G,cAAcA,GACZ,SAAUA,GACZ,OAAOA,GAAO,mBAAqB/G,QAAU+G,EAAIU,cAAgBzH,QAAU+G,IAAQ/G,OAAOa,UAAY,gBAAkBkG,GACvHnJ,EAAOD,QAAQ0C,YAAa,EAAMzC,EAAOD,QAAiB,QAAIC,EAAOD,QAAU4J,EAAQR,GAG5FnJ,EAAOD,QAAU4J,EAAS3J,EAAOD,QAAQ0C,YAAa,EAAMzC,EAAOD,QAAiB,QAAIC,EAAOD,S,cCV/FC,EAAOD,QAAUY,G,cCUjBX,EAAOD,QAVP,SAA2B2J,EAAKI,IACnB,MAAPA,GAAeA,EAAMJ,EAAIK,UAAQD,EAAMJ,EAAIK,QAE/C,IAAK,IAAI1I,EAAI,EAAG2I,EAAO,IAAIC,MAAMH,GAAMzI,EAAIyI,EAAKzI,IAC9C2I,EAAK3I,GAAKqI,EAAIrI,GAGhB,OAAO2I,GAG2BhK,EAAOD,QAAQ0C,YAAa,EAAMzC,EAAOD,QAAiB,QAAIC,EAAOD,S,eCVzGC,EAAOD,QAAUa,G,gBCAjB,IAAIsJ,EAAmB,EAAQ,IAW/BlK,EAAOD,QATP,SAAqC+B,EAAGqI,GACtC,GAAKrI,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAOoI,EAAiBpI,EAAGqI,GACtD,IAAIrH,EAAIf,OAAOkB,UAAUmH,SAAS5I,KAAKM,GAAGuI,MAAM,GAAI,GAEpD,MADU,WAANvH,GAAkBhB,EAAE+H,cAAa/G,EAAIhB,EAAE+H,YAAYjI,MAC7C,QAANkB,GAAqB,QAANA,EAAoBmH,MAAMK,KAAKxI,GACxC,cAANgB,GAAqB,2CAA2CyH,KAAKzH,GAAWoH,EAAiBpI,EAAGqI,QAAxG,IAG4CnK,EAAOD,QAAQ0C,YAAa,EAAMzC,EAAOD,QAAiB,QAAIC,EAAOD,S,cCXnHC,EAAOD,QAAUc,G,6HCKX2J,EAA8B,oBAAXpK,OACnBqK,EAAOC,UAAUC,iBAKnBC,EAAUJ,GAAapK,OAAOyK,KAE7BD,IACDA,EAAUE,IAAOC,QAKrB,IAWMC,EAAS,CACXC,WAAY,kBACZC,gBAAiB,iBACjBC,gBAAiB,QACjBC,gBAAiB,6BACjBC,cAAe,OAEfC,gBA5BuB,iDA6BvBC,eAAgB,GAChB,4BACI,sCAAgCC,KAAKL,gBAArC,gBAWD,SAASM,EAAYC,EAAOC,EAAUC,GAAO,WAChD,OAAInB,GAEAoB,QAAQC,MA9CZ,kJAgDW,GAGJC,EAAUC,EAAiBxK,KAAKgK,KAAME,EAAOE,IAC/CK,MAAK,SAACC,GACH,MAAO,CACHC,OAAQC,EAAa,EAAKC,QAAS,EAAKC,UACxCJ,UAGPD,MAAK,gBAAGE,EAAH,EAAGA,OAAQD,EAAX,EAAWA,IAAX,OAAqBK,EAAgB/K,KAAK0K,EAAKC,EAAQR,MAmB9D,SAASK,EAAiBN,EAAOE,GACpC,GAAKF,EAAL,CAIAA,EAAMc,KAAK,UAAW,KAAKA,KAAK,QAAS,8BACzC,IACIC,EADaC,IAAoBC,sBAC1BC,CAAWlB,EAAMmB,QAW5B,OATAJ,EA6FJ,SAA6BA,GACzB,GAAI/B,UAAUoC,UAAUC,OAAO,YAAc,EACzC,OAAON,EAAKO,QACR,gBACA,sDAIR,OAAOP,EArGAQ,CAAoBR,GAO3BA,EA3BJ,SAAuBA,GACnB,OAAOA,EAAKO,QAAQ,IAAb,WAAsBhC,EAAOkC,wBA0B7BC,CANPV,EAAOW,EAAa5L,KAChBgK,KACAiB,EACAb,EACAyB,SAAS3B,EAAMc,KAAK,SAAU,OActC,SAASJ,EAAaC,EAAOC,GACzB,IAAIH,EAASmB,SAASC,cAAc,UAKpC,OAHApB,EAAOG,OAASA,EAChBH,EAAOE,MAAQA,EAERF,EAUX,SAASqB,EAAYC,EAASC,GAC1B,IAAIxB,EAAM,IAAIyB,MAEd,GAAID,EAAU,CACV,GAAwB,mBAAbA,EACP,MAAM,IAAIE,MAAJ,mEAC6DF,GAD7D,cAIVA,EAASxB,GAIb,OAFAA,EAAI2B,IAAJ,UAAa7C,EAAOI,iBAApB,OAxHOR,EACHkD,mBAuHmDL,GAvH3BT,QACpB,mBACA,SAAUe,EAAOC,GACb,OAAOC,OAAOC,aAAa,KAAOF,QAsHvC9B,EASJ,SAASiC,EAAkBC,EAAOjC,GAGrC,OAFAA,EAAOkC,WAAW,MAAMC,UAAUF,EAAO,EAAG,GAErCjC,EAkDX,SAASI,EAAgBJ,EAAQR,IAtCjC,SACIQ,GAGF,IAFER,EAEF,uDAFaX,EAAOE,gBAClBqD,EACF,uDADkB,YAEZC,EAAMrC,EAAOsC,UAAUF,GACvBG,EAAOpB,SAASC,cAAc,KAElCmB,EAAKC,KAAOH,EACZE,EAAKE,SAAWjD,EAChB2B,SAASuB,KAAKC,YAAYJ,GAC1BA,EAAKK,QACLzB,SAASuB,KAAKG,YAAYN,GA2B1BO,CAAed,EAAkB3C,KAAMW,GAASR,GASpD,SAASI,EAAU0B,GACf,OAAO,IAAIyB,SAAQ,SAACC,EAAKC,GACrB5B,EAAYC,GAAS,SAACvB,GAClBA,EAAImD,iBAAiB,QAAQ,kBAAMF,EAAIjD,MACvCA,EAAImD,iBAAiB,SAAS,SAACC,GAAD,OAASF,EAAIE,YAavD,SAASlC,EAAaX,EAAMb,EAAO2D,GAC/B,IAAK3D,IAAU2D,EACX,OAAO9C,EAEX,IAAM1E,EAASS,eAATT,KAWN,OATA0E,EAAOA,EAAKO,QACR,KADG,mBAESxB,KAAKgE,SAASC,KAFvB,gBAGCzE,EAAOO,eAHR,0BAIeP,EAAOM,gBAJtB,wBAKCN,EAAOK,cALR,mBAMQtD,EAAK,GANb,cAMqB6D,EANrB,kB,iBC7OX,kFACE,SAAS/L,GAGV,IAAI6P,EAA4C3P,EAQ5C4P,GAL0C3P,GAC7CA,EAAOD,QAI0B,iBAAV6P,GAAsBA,GAC1CD,EAAWC,SAAWD,GAAcA,EAAWvP,OAMnD,IAAIyP,EAAwB,SAASC,GACpCtE,KAAKsE,QAAUA,IAEhBD,EAAsB5M,UAAY,IAAI2K,OACNhM,KAAO,wBAEvC,IAAIkK,EAAQ,SAASgE,GAGpB,MAAM,IAAID,EAAsBC,IAG7BC,EAAQ,mEAERC,EAAyB,eAuGzBlF,EAAS,CACZ,OA5DY,SAASmF,GACrBA,EAAQhC,OAAOgC,GACX,aAAa1F,KAAK0F,IAGrBnE,EACC,6EAeF,IAXA,IAGIoE,EACAC,EACAzO,EAEA0O,EAPAC,EAAUJ,EAAMlG,OAAS,EACzBuG,EAAS,GACTC,GAAY,EAOZxG,EAASkG,EAAMlG,OAASsG,IAEnBE,EAAWxG,GAEnBmG,EAAID,EAAMO,WAAWD,IAAa,GAClCJ,EAAIF,EAAMO,aAAaD,IAAa,EACpC7O,EAAIuO,EAAMO,aAAaD,GAIvBD,GACCP,EAAMU,QAJPL,EAASF,EAAIC,EAAIzO,IAIO,GAAK,IAC5BqO,EAAMU,OAAOL,GAAU,GAAK,IAC5BL,EAAMU,OAAOL,GAAU,EAAI,IAC3BL,EAAMU,OAAgB,GAATL,GAuBf,OAnBe,GAAXC,GACHH,EAAID,EAAMO,WAAWD,IAAa,EAClCJ,EAAIF,EAAMO,aAAaD,GAEvBD,GACCP,EAAMU,QAFPL,EAASF,EAAIC,IAEW,IACvBJ,EAAMU,OAAQL,GAAU,EAAK,IAC7BL,EAAMU,OAAQL,GAAU,EAAK,IAC7B,KAEoB,GAAXC,IACVD,EAASH,EAAMO,WAAWD,GAC1BD,GACCP,EAAMU,OAAOL,GAAU,GACvBL,EAAMU,OAAQL,GAAU,EAAK,IAC7B,MAIKE,GAKP,OAnGY,SAASL,GAGrB,IAAIlG,GAFJkG,EAAQhC,OAAOgC,GACbjD,QAAQgD,EAAwB,KACfjG,OACfA,EAAS,GAAK,IAEjBA,GADAkG,EAAQA,EAAMjD,QAAQ,OAAQ,KACfjD,SAGfA,EAAS,GAAK,GAEd,iBAAiBQ,KAAK0F,KAEtBnE,EACC,yEAQF,IALA,IACI4E,EACAN,EAFAO,EAAa,EAGbL,EAAS,GACTC,GAAY,IACPA,EAAWxG,GACnBqG,EAASL,EAAMa,QAAQX,EAAMQ,OAAOF,IACpCG,EAAaC,EAAa,EAAiB,GAAbD,EAAkBN,EAASA,EAErDO,IAAe,IAElBL,GAAUrC,OAAOC,aAChB,IAAOwC,KAAgB,EAAIC,EAAa,KAI3C,OAAOL,GAmEP,QAAW,cAYV,KAFD,aACC,OAAOxF,GACP,8BAtJF,K,yCCDD9K,EAAOD,QAAW,WACd,aAGA,IAAM8Q,EAAc,CAChBC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,SAAS,EACTC,UAAU,EACVC,OAAO,EACPC,QAAQ,EACRC,OAAO,EACPC,OAAO,GAKLC,EAAW,CACb,IACA,OACA,UACA,OACA,UACA,QACA,QACA,IACA,OACA,MACA,MACA,aACA,OACA,KACA,SACA,SACA,UACA,SACA,OACA,OACA,MACA,WACA,UACA,WACA,KACA,MACA,UACA,MACA,MACA,KACA,KACA,KACA,QACA,WACA,aACA,SACA,OACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,SACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,MACA,OACA,OACA,OACA,OACA,QACA,MACA,OACA,WACA,SACA,KACA,SACA,WACA,SACA,IACA,QACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,SACA,UACA,SACA,QACA,SACA,OACA,SACA,QACA,MACA,UACA,MACA,MACA,QACA,QACA,KACA,WACA,QACA,KACA,QACA,OACA,QACA,KACA,QACA,IACA,KACA,MACA,QACA,OASEC,EAA+B,SAACC,GAClC,IAAIC,EAAe,GACfC,EAAUtE,SAASuB,KAAKC,YACpBxB,SAASC,cAAcmE,IAE3BG,EAAgBzR,OAAO0R,iBAAiBF,GAO5C,MALA,GAAGG,QAAQvQ,KAAKqQ,GAAe,SAACG,GAC5BL,EAAaK,GAASH,EAAcG,MAExC1E,SAASuB,KAAKG,YAAY4C,GAEnBD,GA4EX,MAAO,CACHhF,qBArEyB,WAEzB,IAAMsF,EAAyB,GA+D/B,MA5DA,GAAGF,QAAQvQ,KAAKgQ,GAAU,SAAC5P,GAClBiP,EAAYjP,KACbqQ,EAAuBrQ,GACnB6P,EAA6B7P,OAezC,SAA6BsQ,GACzB,IACIC,EACAN,EACAF,EACAS,EAJAC,EAAW,GAMf,GAAKH,GAAQA,EAAKI,WAAaC,KAAKC,aAgCpC,OA1BAH,EAAW,GACXF,EAAWD,EAAKO,iBAAiB,KAEjC,GAAGV,QAAQvQ,KAAK2Q,GAAU,SAACO,EAAIrR,GA3BnC,IAAkCqQ,EA4BrBb,EAAY6B,EAAGhB,WAChBG,EAAgBzR,OAAO0R,iBAAiBY,GA5BhDhB,GAD8BA,EA8BkBgB,EAAGhB,SA7BjCiB,cAEbV,EAAuBP,KACxBO,EAAuBP,GACnBD,EAA6BC,IAyB7BC,EAtBDM,EAAuBP,GAuBtBW,EAAShR,GAAKqR,EAAGV,MAAMY,QACvB,GAAGb,QAAQvQ,KAAKqQ,GAAe,SAACgB,GAExBhB,EAAcgB,KACdlB,EAAakB,KAEbH,EAAGV,MAAMa,GAAehB,EAAcgB,WAMtDT,EAASF,EAAKY,UACdX,EAAW,GAAGY,IAAIvR,KAAK2Q,GAAU,SAACO,EAAIrR,GAGlC,OAFAqR,EAAGV,MAAMY,QAAUP,EAAShR,GAErBqR,KAGJN,KA9ND,I,6BCAlB,8NAGIY,EAAY,EAEVC,EAAsB,CACxBC,MAAO,CACHC,MAAO,GACPC,OAAQA,iBAAO,KAEnBC,OAAQ,CACJF,MAAO,IACPC,OAAQA,iBAAO,KAEnBE,MAAO,CACHH,MAAO,KACPC,OAAQA,iBAAO,SAIjBG,EAAsB,CACxBL,MAAO,CACHC,MAAO,GACPC,OAAQA,iBAAO,QAEnBC,OAAQ,CACJF,MAAO,IACPC,OAAQA,iBAAO,QAEnBE,MAAO,CACHH,MAAO,KACPC,OAAQA,iBAAO,SAWjBI,EAAe,SAAClR,EAAOmR,GACzB,IAAIC,EAAO,QAQX,OANIpR,EAAQmR,EAAOP,MAAMC,MACrBO,EAAO,QACApR,EAAQmR,EAAOJ,OAAOF,QAC7BO,EAAO,UAGJA,GAUEC,EAAuB,SAACC,GACjC,IAAI9Q,EAAI8Q,EAAW7J,OACf8J,EAAI,EACJC,EAAI,EACJC,EAAK,EACLC,EAAK,EAETJ,EAAW7B,SAAQ,SAACpQ,GAChBkS,GAAKlS,EAAEkS,EACPC,GAAKnS,EAAEmS,EACPC,GAAMpS,EAAEkS,EAAIlS,EAAEmS,EACdE,GAAMrS,EAAEkS,EAAIlS,EAAEkS,KAGlB,IAAMI,EAAcnR,EAAIkR,EAAKH,EAAIA,EAC3BK,GAAaJ,EAAIE,EAAKH,EAAIE,GAAME,EAChCE,GAASrR,EAAIiR,EAAKF,EAAIC,GAAKG,EAC3BG,EAAOC,cAAIT,GAAY,qBAAGC,KAC1BS,EAAOC,cAAIX,GAAY,qBAAGC,KAEhC,MAAO,CACHW,GAAIJ,EACJK,GAAIN,EAAQrR,EAAIoR,EAChBF,GAAIM,EACJI,GAAIP,EAAQG,EAAOJ,IAYdS,EAAmB,SAACrS,EAAOsS,EAAOC,GAC3C,IAAMC,EAAUF,EAAStS,EAAQsS,EAAS,IAAM,EAEhD,OAAOxB,iBAAOyB,EAAPzB,CAAiB0B,IASfC,EAAY,SAACzS,GACtB,OAAOA,EAAQ,GAAM,GASZ0S,EAAqB,SAAC1S,GAC/B,IAAIoR,EAAOF,EAAalR,EAAOiR,GAG/B,OAAOH,EAFMG,EAAoBG,GAAMN,QAEzB9Q,IASL2S,EAAqB,SAAC3S,GAC/B,IAAIoR,EAAOF,EAAalR,EAAO2Q,GAG/B,OAAOG,EAFMH,EAAoBS,GAAMN,QAEzB9Q,IASL4S,EAAW,SAACC,GACrB,IAAMC,IAAOpC,EAEb,gBAAUmC,EAAO/K,WAAjB,YAA+BgL,K,eCpJnCpV,EAAOD,QAAUe,G,cCAjBd,EAAOD,QAAUgB,G,iBCAjB,IAAImJ,EAAmB,EAAQ,IAM/BlK,EAAOD,QAJP,SAA4B2J,GAC1B,GAAIO,MAAMoL,QAAQ3L,GAAM,OAAOQ,EAAiBR,IAGb1J,EAAOD,QAAQ0C,YAAa,EAAMzC,EAAOD,QAAiB,QAAIC,EAAOD,S,cCF1GC,EAAOD,QAJP,SAA0BuV,GACxB,GAAsB,oBAAXlT,QAAmD,MAAzBkT,EAAKlT,OAAOwH,WAA2C,MAAtB0L,EAAK,cAAuB,OAAOrL,MAAMK,KAAKgL,IAGnFtV,EAAOD,QAAQ0C,YAAa,EAAMzC,EAAOD,QAAiB,QAAIC,EAAOD,S,cCAxGC,EAAOD,QAJP,WACE,MAAM,IAAIwV,UAAU,yIAGevV,EAAOD,QAAQ0C,YAAa,EAAMzC,EAAOD,QAAiB,QAAIC,EAAOD,S,qHCAlGyV,GADgBvV,EAAQ,GAAxBwV,YACexV,EAAQ,IAAvBuV,YAWFE,EALuB,aAKvBA,EAJqB,WAgB3B,SAASC,EAAeC,GACpB,OAAO,SAACjU,GAAD,OAAQiU,EAAMjU,GAAK,IAU9B,SAASkU,EAAeD,GACpB,IAAIE,EAASC,KAAKxB,IAAI,EAAGqB,EAAMI,YAAc,GAAK,EAMlD,OAJIJ,EAAMK,UACNH,EAASC,KAAKE,MAAMH,IAGjB,SAACnU,GAAD,OAAQiU,EAAMjU,GAAKmU,EAAS,IAUvC,SAASI,EAASC,EAAQP,GACtB,IAAIQ,EAAQ,CAAC,EAAG,GACZC,EAAc,EACdC,EAAY,EACZC,GAAY,EACZC,EAAQ,KACRC,EAAa,KAEbC,EAAWlB,EAtDS,OAsDuBW,GAG3CtC,EAAIsC,IAAWT,EAAQ,IAAM,IAC7B5B,EAAIqC,IAAWT,EAAQ,IAAM,IAMjC,SAASiB,EAAkBC,GACvB,IAAIC,EAmFR,WACI,IAAIC,GACkB,IAAdP,GACc,SAAdA,GACc,UAAdA,EACJQ,GACkB,IAAdR,GACc,SAAdA,GACc,SAAdA,EACJM,EAAwB,OAAfJ,EAajB,WACI,IAAIO,EAGAA,EADApB,EAAMY,MACOZ,EAAMY,MAAMS,MAAMrB,EAAOY,EAAQ,CAACA,GAAS,IAE3CZ,EAAMsB,SAGvB,OAAOF,EAAW3M,QAtBiB2M,GAAeP,EAAWpM,QAEzDyM,GAAWD,EAAOM,QAClBJ,GAAUF,EAAOO,MAErB,OAAOP,EAjGMQ,GAGT9G,GAAYqF,EAAMI,UAAYH,EAAiBF,GAC3CC,EAAM0B,QAGVC,EAAInB,EAAMA,EAAMrM,OAAS,IAAMqM,EAAM,GAAK,GAAK,EAE/CoB,EAAYZ,EAAQY,UAAYZ,EAAQY,YAAcZ,EAEtDa,EAAgBD,EACXE,UAAUhB,EAASiB,cACnBC,KAAK,CAAC,OACXC,EAAYJ,EAAcK,MACtBL,EACKM,QACAC,OAAO,KACPxL,KAAK,QAASkK,EAASuB,WAGhCC,EAAOL,EAAUH,UAAU,QAAQE,KAAKf,EAAQjB,GAAOuC,QACvDC,EAAWF,EAAKG,OAChBC,EAAYJ,EAAKH,QAAQC,OAAO,QAAQxL,KAAK,QAAS,aAK1D,GAHA0L,EAAOA,EAAKJ,MAAMQ,GAGd1B,IAAYY,EAAW,CAGvB,IAAMe,EAAe,SAAC/L,GAAD,OACjB,SAAU7K,GACN,OAAO6W,SAAU7W,EAAI4O,EAAS5O,IACxBA,EACA6J,KAAKiN,aAAajM,KAK1BkM,EAAgB,SAAU/W,GAC5B,IAAIwB,EAAIqI,KAAKmN,WAAWC,MAExB,OAAOzV,GAAKqV,SAAUrV,EAAIA,EAAExB,IAAOwB,EAAIoN,EAAS5O,IAGpDuW,EAAOA,EAAKW,WAAWjC,GAEvBwB,EAAWA,EACNS,WAAWjC,GACXpK,KAAK,UArHN,MAsHCA,KAAKsH,EAAI,IAAKyE,EAAazE,EAAI,MAC/BtH,KAAKsH,EAAI,IAAKyE,EAAazE,EAAI,MAEpCwE,EAAYA,EACP9L,KAAK,UA1HN,MA2HCA,KAAKsH,EAAI,IAAK4E,GACdlM,KAAKsH,EAAI,IAAK4E,GAGvBN,EAASU,SAETZ,EAAK1L,KAAK,UAAW,GAChBA,KAAKqH,EAAI,KAAMuC,EAAM,GAAKmB,EAAIlB,GAC9B7J,KAAKqH,EAAI,KAAMuC,EAAMA,EAAMrM,OAAS,GAAKwN,EAAIjB,GAC7C9J,KAAKsH,EAAI,KAAK,SAACnS,GAAD,OAAO4O,EAAS5O,MAC9B6K,KAAKsH,EAAI,KAAK,SAACnS,GAAD,OAAO4O,EAAS5O,MAKnCkW,EAAUkB,MAAK,WACXvN,KAAKoN,MAAQrI,KAkKrB,OA5GAoG,EAAkBf,MAAQ,SAAUoD,GAChC,OAAKC,UAAUlP,QAGf6L,EAAQoD,EAEDrC,GAJIf,GAefe,EAAkBP,MAAQ,SAAU4C,GAChC,OAAKC,UAAUlP,QAGfqM,EAAQ4C,EAEDrC,GAJIP,GAcfO,EAAkBN,YAAc,SAAU2C,GACtC,OAAKC,UAAUlP,QAGfsM,EAAc2C,EAEPrC,GAJIN,GAcfM,EAAkBL,UAAY,SAAU0C,GACpC,OAAKC,UAAUlP,QAGfuM,EAAY0C,EAELrC,GAJIL,GAgBfK,EAAkBJ,UAAY,SAAUyC,GACpC,OAAKC,UAAUlP,QAGfwM,EAAYyC,EAELrC,GAJIJ,GAcfI,EAAkBH,MAAQ,SAAUwC,GAChC,OAAKC,UAAUlP,QAGfyM,EAAQwC,EAEDrC,GAJIH,GAcfG,EAAkBF,WAAa,SAAUuC,GACrC,OAAKC,UAAUlP,QAGf0M,EAAmB,OAANuC,EAAa,KAAO,IAAIA,GAAG3O,QAEjCsM,GAJIF,GAAcA,EAAWpM,SAOjCsM,EAqXJ,SAASuC,EAAetD,GAC3B,OAAOM,EAASR,EAAOE,GAkBpB,SAASuD,EAAavD,GACzB,OAAOM,EAASR,EAAOE,K,cC7rB3B5V,EAAOD,QAAU,SAASC,GAoBzB,OAnBKA,EAAOoZ,kBACXpZ,EAAOqZ,UAAY,aACnBrZ,EAAOsZ,MAAQ,GAEVtZ,EAAOuZ,WAAUvZ,EAAOuZ,SAAW,IACxCxX,OAAOC,eAAehC,EAAQ,SAAU,CACvCiC,YAAY,EACZC,IAAK,WACJ,OAAOlC,EAAOsB,KAGhBS,OAAOC,eAAehC,EAAQ,KAAM,CACnCiC,YAAY,EACZC,IAAK,WACJ,OAAOlC,EAAOqB,KAGhBrB,EAAOoZ,gBAAkB,GAEnBpZ,I,cCpBR,IAAIwZ,EAGJA,EAAI,WACH,OAAOhO,KADJ,GAIJ,IAECgO,EAAIA,GAAK,IAAIC,SAAS,cAAb,GACR,MAAOC,GAEc,iBAAXtZ,SAAqBoZ,EAAIpZ,QAOrCJ,EAAOD,QAAUyZ,G,+BCnBjB,0GAAMG,EAAW,mBAEJC,EAAwB,SAACC,GAMlC,OALsBA,EACjB7B,OAAO,QACPA,OAAO,UACPxL,KAAK,KAAMmN,IAqCPG,EAAuB,SAACC,GAGjCA,EACKvN,KAAK,IAAK,SACVA,KAAK,IAAK,SACVA,KAAK,QAAS,SACdA,KAAK,SAAU,SAEpBuN,EACK/B,OAAO,iBACPxL,KAAK,OAAQ,UACbA,KAAK,SAXQ,2CAalBuN,EACK/B,OAAO,kBACPxL,KAAK,eAAgB,KACrBA,KAAK,SAAU,eACfA,KAAK,KAAM,iBAEhB,IAAIsL,EAAQiC,EAAe/B,OAAO,WAMlC,OAJAF,EAAME,OAAO,eAAexL,KAAK,KAAM,eAEvCsL,EAAME,OAAO,eAAexL,KAAK,KAAM,iBAEhCmN,GA6CEK,EAAwB,SACjCtH,EACAuH,EACAC,GAEC,IADDC,EACC,uDADuB,EAATD,EAETjW,EAAW,IACXmW,EAAQ,GAEd1H,EAAGmG,aACEoB,KAAKA,GACLhW,SAASA,GACTuI,KAAK,IAAK2N,GACVtB,aACAoB,KAAKA,GACLG,MAAMA,GACNnW,SAASA,GACTuI,KAAK,IAAK0N,K,mCC7HZ,SAAS1E,EAAWkB,GAGvB,OAFAA,EAAWzM,MAAMoL,QAAQqB,GAAYA,EAA1BzM,MAAA,qBAAyCgP,WAE7C,CACHhB,OAAQ,kBAAMvB,EAAS2D,KAAK,MAC5B1C,WAAY,iBAAM,IAAMjB,EAAS2D,KAAK,OAX9C,kDAee,WACX7E,e,2FCdE8E,EAAkC,CACpC,UACA,YACA,WACA,YAYSC,EAAmB,SAACC,GAC7B,GAAIC,EAAwBD,GACxB,OAAOE,sBAA6BF,GAEpC,MAAM,IAAI5M,MAbd,oDAuBE6M,EAA0B,SAACD,GAC7B,MACqB,UAAjB,IAAOA,IACPF,EAAgCK,OAAM,SAACC,GAAD,OAClCJ,EAAOtX,eAAe0X,Q,gBCpClC5a,EAAOD,QAAUiB,G,gBCAjBhB,EAAOD,QAAUkB,G,40BC4EF,SAASjB,IACpB,IASI4T,EAWAiH,EACAC,EAGAC,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEAC,EACAC,EAIAC,EAKAC,EACAC,EACAC,EAEAC,EACAC,EA2BAC,EACAC,EACAC,EA/EA1M,EAAS,CACL2M,IAAK,GACLC,MAAO,GACPC,OAAQ,GACR5M,KAAM,IAEVpD,EAAQ,IACRC,EAAS,IACTgQ,EAAiB,KAKjBC,EAAS,EACTC,EAAS,KAGTC,EAAO,KAKPC,EAAkB,SAClBC,EAAc,GAIdC,EAAc,GAOdC,GAAoB,GAGpBC,IAAoB,GAIpBC,GAAiBzY,aAUjB0Y,IAA6B,GAC7BC,GAEU,EAFVA,GAGY,EAGZC,GAAgB,IAChBC,GAAsB,EACtBC,GAAoB,EACpBC,GAAkB,KAClBC,GAAyBJ,GACzBK,GAAgB,GAGhBC,GAAcC,UAAYjV,aAAaV,YACvC4V,IAAa,EACbC,IAAgB,EAChBC,IAAe,EACfC,IAAa,EACb5D,GAAO6D,eAEP7Z,GAAWD,IAAOC,SAClB8Z,IAAmB,EACnBvD,GAAS,KACTwD,GAAkBtD,EAIlBuD,GAAaC,mBACT,cACA,kBACA,kBACA,kBAEJC,GAAU,SAAC,GAAD,SAAGvc,MACbwc,GAAe,SAAC,GAAD,SAAGxG,MAQtB,SAAS7X,GAAQse,GACT7D,KACAwD,GAAkBzD,YAAiBC,KAGvC6D,EAAWtF,MAAK,SAAUuF,GACtB1K,EAAuB0K,EA6LPC,QAAO,SAACC,EAAK7c,GAK7B,OAJAA,EAAEC,KAAOqM,OAAOtM,EAAC,MACjBA,EAAEkS,EAAIlS,EAAC,EACPA,EAAEmS,EAAInS,EAAC,EAEP,cAAW6c,GAAX,CAAgB7c,MACjB,IAjMCsa,EAAa5P,EAAQmD,EAAOC,KAAOD,EAAO4M,MAC1CF,EAAc5P,EAASkD,EAAO2M,IAAM3M,EAAO6M,OA0GnD,WACI,MAAqB,CACjBhI,cAAIT,GAAY,qBAAGC,KACnBQ,cAAIT,GAAY,qBAAGE,MAFhBM,EAAP,KAAaqK,EAAb,KAIA,EAAqB,CACjBlK,cAAIX,GAAY,qBAAGC,KACnBU,cAAIX,GAAY,qBAAGE,MAFhBQ,EAAP,KAAaoK,EAAb,KAIMC,EAAoB5I,KAAK6I,IAAIH,GAAQ,EAAI1I,KAAK6I,IAAIH,GAAQ,EAEhEzD,EAAiBD,EAAStF,wBACrByB,OAAO,CAAC9C,EAAME,IACduK,WAAW,CAAC,EAAG5C,IACf6C,OAEL3D,EAAiBD,EAASzF,wBACrByB,OAAO,CAACyH,EAAmBD,IAC3BG,WAAW,CAAC3C,EAAa,IACzB4C,OAELzD,EAAa0D,yBACR7H,OAAOtD,EAAWb,IAAIoL,KACtB/H,MAAMoH,IAEXpC,EAAY4D,sBACP9H,OAAO,CAACyH,EAAmBD,IAC3BtI,MAAM,CAAC,EAAGmH,KAEf,IAAM0B,EAAa5D,EAAWjF,QAY9BkG,EACIA,GACAjB,EAAWnE,SAASqH,QAAO,SAACW,EAAOC,EAAM9d,GAGrC,OAFA6d,EAAMC,GAAQF,EAAW5d,GAElB6d,IACR,IAvJHE,GAiKR,SAAkBvH,GACTmE,IACDA,EAAMqD,iBAAOxH,GACRG,OAAO,OACPsH,QAAQ,2BAA2B,GAvGhD,WACI,IAAIzH,EAAYmE,EACXhE,OAAO,KACPsH,QAAQ,mBAAmB,GAC3B9S,KAAK,YAHM,oBAGoBgD,EAAOC,KAH3B,aAGoCD,EAAO2M,IAH3C,MAKhBtE,EAAUG,OAAO,KAAKsH,QAAQ,oBAAoB,GAClDzH,EAAUG,OAAO,KAAKsH,QAAQ,eAAe,GAC7CzH,EACKG,OAAO,KACPsH,QAAQ,gBAAgB,GACxBtH,OAAO,KACPsH,QAAQ,UAAU,GACvBzH,EACKG,OAAO,KACPsH,QAAQ,gBAAgB,GACxBtH,OAAO,KACPsH,QAAQ,UAAU,GACvBzH,EAAUG,OAAO,KAAKsH,QAAQ,qBAAqB,GACnDzH,EAAUG,OAAO,KAAKsH,QAAQ,kBAAkB,GAsF5CC,IAGJvD,EAAIxP,KAAK,UAAW,CAAC,EAAG,EAAGH,EAAOC,IAC7BE,KAAK,QAAS,qDACdA,KAAK,QAASH,GACdG,KAAK,SAAUF,GA5KhBkT,CAAShU,MA2CjB,SAAmBwS,GACflD,EAAQ2E,qBAAW1E,GACdvE,MAAM+F,GACNmD,YA1IS,GA2ITC,WAAWC,MAEhB3E,EAAQ4E,mBAAS3E,GACZ1E,MAAMgG,GACNkD,YA/IS,GAgJTC,WAAW3B,EAAgB5K,OAAOwJ,IAnDnCkD,CAAU9B,IAwFdnD,EAAckF,oBACTlM,GAAE,SAAClS,GAAD,OAAOoZ,EAAOpZ,EAAEkS,MAClBC,GAAE,SAACnS,GAAD,OAAOuZ,EAAOvZ,EAAEmS,MAClBkM,OAAO,CACJ,CAAC,EAAG,GACJ,CAAC/D,EAAYC,IALP6D,CAMPnM,GAwGPoI,EAAIqD,OAAO,yBACN7S,KAAK,YADV,uBACuC0P,EADvC,MAEK1a,KAAKsZ,GAEVkB,EAAIqD,OAAO,yBAAyB7d,KAAKyZ,GAarCK,IACIC,GACAS,EAAItE,UAAU,sBAAsBoB,SAGxCyC,EAAeS,EACVqD,OAAO,sBACPrH,OAAO,KACPxL,KAAK,QAAS,gBACdwL,OAAO,QACPsH,QAAQ,qBAAqB,GAC7B9S,KAAK,KAAM0P,EAAc,GACzB1P,KAAK,IAAKqQ,EAAmBI,IAC7BzQ,KAAK,cAAe,UACpBA,KAAK,YAAa,mBAClByT,KAAK3E,IAIVE,IACIC,GACAO,EAAItE,UAAU,sBAAsBoB,SAGxC2C,EAAeO,EACVtE,UAAU,sBACVM,OAAO,KACPxL,KAAK,QAAS,gBACdwL,OAAO,QACPsH,QAAQ,qBAAqB,GAC7B9S,KAAK,IAAKyP,EAAa,GACvBzP,KAAK,IAAK0P,EAAcY,IACxBtQ,KAAK,cAAe,UACpByT,KAAKzE,IAqRlB,WACIQ,EAAIqD,OAAO,qBAAqB3H,UAAU,QAAQoB,UAErC,eAAT2D,GAAkC,SAATA,KAmChBvD,YAAegC,GACvB9E,MAAM,CAAC,EAAG6F,IACV1F,UAAU,SACVC,MAAMgG,EAEXC,CAAKT,EAAIqD,OAAO,sBAzBLrD,EACNqD,OAAO,qBACP3H,UAAU,wBACVE,KAAK,CAAC,IACNG,QACAC,OAAO,QACPxL,KAAK,QAAS,mBACdA,KAAK,KAAMyQ,IACXzQ,KAAK,KAAMyP,GACXzP,KAAK,KAAM0P,GACX1P,KAAK,KAAM0P,IArBH,aAATO,GAAgC,SAATA,IAnJdtD,YAAa4B,GACrB3E,MAAM,CAAC,EAAG8F,IACV3F,UAAU,SACVC,MAAM+F,EAEXE,CAAKT,EAAIqD,OAAO,sBAULrD,EACNqD,OAAO,qBACP3H,UAAU,wBACVE,KAAK,CAAC,IACNG,QACAC,OAAO,QACPxL,KAAK,QAAS,mBACdA,KAAK,KAAMyQ,IACXzQ,KAAK,KAAM0P,GACX1P,KAAK,KAAM,GACXA,KAAK,KAAM,IAvZZ0T,GA0sBR,WACI7C,GAAkBrB,EACbqD,OAAO,mBACP3H,UAAU,2BACVE,KAAK,CAAC,IACNG,QACAC,OAAO,UACPxL,KAAK,QAAS,oBACdA,KAAK,SAAU,WAEhBmR,KAEA7B,EAA8BE,EACzBqD,OAAO,gBACPrH,OAAO,KACPxL,KAAK,QAAS,6BAGnBuP,EAAoCC,EAC/BqD,OAAO,mBACPrH,OAAO,KACPxL,KAAK,QAAS,8BAEnBsP,EACKpE,UAAU,yBACVE,KAAK,CAAC,IACNG,QACAC,OAAO,QACPxL,KAAK,QAAS,oBAEnBsP,EACKpE,UAAU,yBACVE,KAAK,CAAC,IACNG,QACAC,OAAO,QACPxL,KAAK,QAAS,oBAEnBuP,EACKrE,UAAU,2BACVE,KAAK,CAAC,IACNG,QACAC,OAAO,QACPxL,KAAK,QAAS,sBAEnBuP,EACKrE,UAAU,2BACVE,KAAK,CAAC,IACNG,QACAC,OAAO,QACPxL,KAAK,QAAS,sBAEnBuP,EACKrE,UAAU,2BACVE,KAAK,CAAC,IACNG,QACAC,OAAO,QACPxL,KAAK,QAAS,uBAGvB6Q,GAAgBhF,OAAOS,SApwBnBqH,GA8ZR,WACI,IAAIC,EAAUpE,EACTqD,OAAO,gBACP7S,KAAK,YAFI,eA9cO,oBA8cP,MAGTkL,UAAU,UACVE,KAAKhE,GACLmE,QAED2F,GACA0C,EACKpI,OAAO,UACPxL,KAAK,QAAS,cACdqM,aACAuB,MAndD,KAodCnW,SAASA,IACTgW,KAAKA,IACLzN,KAAK,iBAAkB2Q,IACvB3Q,KAAK,eAAgB4Q,IACrBpL,MAAM,UAAU,SAACrQ,GAAD,OAAO2a,EAAe3a,EAAEC,SACxC4K,KAAK,QAAQ,SAAC7K,GAAD,OACVoc,GAlhBE,OAkhB+BzB,EAAe3a,EAAEC,SAErD4K,KAAK,eAAgB0Q,IACrB1Q,KAAK,KAAK,SAAC7K,GAAD,OAAOyZ,EAAUzZ,EAAEmS,MAC7BtH,KAAK,MAAM,SAAC7K,GAAD,OAAOoZ,EAAOpZ,EAAEkS,MAC3BrH,KAAK,MAAM,SAAC7K,GAAD,OAAOuZ,EAAOvZ,EAAEmS,MAC3B9B,MAAM,SAAU,WAErBoO,EACKpI,OAAO,UACPxL,KAAK,QAAS,cACdA,KAAK,iBAAkB2Q,IACvB3Q,KAAK,eAAgB4Q,IACrBpL,MAAM,UAAU,SAACrQ,GAAD,OAAO2a,EAAe3a,EAAEC,SACxC4K,KAAK,QAAQ,SAAC7K,GAAD,OACVoc,GAjiBE,OAiiB+BzB,EAAe3a,EAAEC,SAErD4K,KAAK,eAAgB0Q,IACrB1Q,KAAK,KAAK,SAAC7K,GAAD,OAAOyZ,EAAUzZ,EAAEmS,MAC7BtH,KAAK,MAAM,SAAC7K,GAAD,OAAOoZ,EAAOpZ,EAAEkS,MAC3BrH,KAAK,MAAM,SAAC7K,GAAD,OAAOuZ,EAAOvZ,EAAEmS,MAC3B9B,MAAM,SAAU,WAIzBoO,EAAQ/H,OAAOS,SA1cXuH,GA+PerE,EACdtE,UAAU,gBACVM,OAAO,YACPxL,KAAK,KAlTW,qBAmThBwL,OAAO,QACPxL,KAAK,QAASyP,GACdzP,KAAK,SAAU0P,GACf1P,KAAK,IAAK,GACVA,KAAK,KAAM,EAAI+Q,IAQxB,WACI,IAAKM,GACD,OAGJ,IAAMyC,EAAOC,iBACbD,EAAKE,YAAY,CAhWP,GACA,KAgWLR,OAAO,CACJ,CAAC,EAAG,GACJ,CAAC3T,EAAOC,KAEXmU,GAAG,OAAQC,IAGhB1E,EAAIhE,OAAO,QACNxL,KAAK,QAAS,QACdA,KAAK,QAASyP,GACdzP,KAAK,SAAU0P,GACflK,MAAM,OAAQ,QACdA,MAAM,iBAAkB,OACxBxF,KAAK,YANV,oBAMoCgD,EAAOC,KAN3C,aAMoDD,EAAO2M,IAN3D,MAOK3a,KAAK8e,GAlSNK,GAEI/C,IAuUZ,SAAuBgD,GACflF,GACAA,EAAc5C,SAGlB,IAAM+H,EAAS,CACX,CACIhN,EAAG+M,EAAWpM,GACdV,EAAG8M,EAAWnM,IAElB,CACIZ,EAAG+M,EAAW5M,GACdF,EAAG8M,EAAWlM,KAIlBoM,EAAY5I,iBACX6I,MAAMhE,IACNlJ,GAAE,gBAAGA,EAAH,EAAGA,EAAH,OAAWkH,EAAOlH,MACpBC,GAAE,gBAAGA,EAAH,EAAGA,EAAH,OAAWoH,EAAOpH,MAWnBkN,GATNtF,EAAgBM,EACXtE,UAAU,gBACVM,OAAO,QACPxL,KAAK,QAAS,qBACdA,KAAK,IAAKsU,EAAUD,IACpBrU,KAAK,SAAUgR,GAAY,IAC3BhR,KAAK,eA7aY,KA8ajBA,KAAK,OAAQ,SAEgBK,OAAOoU,WAEzCvF,EACKlP,KAAK,mBADV,UACiCwU,EADjC,YACgDA,IAC3CxU,KAAK,oBAAqBwU,GAC1BnI,aACAuB,MArbY,MAsbZnW,SArbe,KAsbfgW,KAAKA,IACLzN,KAAK,oBAAqB,GA7WvB0U,CAAcvN,YAAqBC,IAa3CoI,EAAIyE,GAAG,aAAa,SAAU9e,GAwkBlC,IAAyB+X,EAtIc9B,EAuI7BuJ,EACAC,EADAD,EAAeE,GADA3H,EAvkBDlO,MAykBd4V,EAAYhD,GAAa+C,GAE3BxD,KA1I+B/F,EA2IDwJ,EA1IlCE,IAAkC,GAGlCxF,EACKpE,UAAU,yBACVlL,KAAK,SAAU8P,EAAe1E,EAAKhW,OACnC4K,KAAK,QAAS,oBACdA,KAAK,KAAMuO,EAAOnD,EAAK/D,GAAKuH,EAAUxD,EAAK9D,IAC3CtH,KAAK,KAAM,GACXA,KAAK,KAAM0O,EAAOtD,EAAK9D,IACvBtH,KAAK,KAAM0O,EAAOtD,EAAK9D,IAG5BgI,EACKpE,UAAU,yBACVlL,KAAK,SAAU8P,EAAe1E,EAAKhW,OACnC4K,KAAK,QAAS,oBACdA,KAAK,KAAMuO,EAAOnD,EAAK/D,IACvBrH,KAAK,KAAMuO,EAAOnD,EAAK/D,IACvBrH,KAAK,KAAM0O,EAAOtD,EAAK9D,GAAKsH,EAAUxD,EAAK9D,IAC3CtH,KAAK,KAAM0P,GAGhBH,EACKrE,UAAU,2BACVlL,KAAK,cAAe,UACpBA,KAAK,OAAQ8P,EAAe1E,EAAKhW,OACjC4K,KAAK,QAAS,sBACdA,KAAK,IAAK0O,EAAOtD,EAAK9D,GAAKsH,EAAUxD,EAAK9D,GAAK,GAC/CtH,KAAK,IAAKwQ,IACViD,KAPL,UAOajC,GAAgB5K,OAAOwJ,EAAvBoB,CAAoCpG,EAAK9D,KAGtDiI,EACKrE,UAAU,2BACVlL,KAAK,cAAe,UACpBA,KAAK,OAAQ8P,EAAe1E,EAAKhW,OACjC4K,KAAK,QAAS,sBACdA,KACG,YANR,uBAOwB0P,EAAcc,GAPtC,MASKxQ,KAAK,IAAKuO,EAAOnD,EAAK/D,GAAKuH,EAAUxD,EAAK9D,GAAK,GAC/CmM,KAVL,UAUaL,KAAiBhI,EAAK/D,MAsKvC,SAA4B+D,GACxB+D,EAAqB/D,EAErB2J,KAEK3F,IACDA,EAAkBhC,YACdoC,EAAIqD,OAAO,oBAEfxD,EAAoB/B,YAAqB8B,IAG7CyB,GACK7Q,KAAK,UAAW,GAChBA,KAAK,UAAU,kBAAM8P,EAAe1E,EAAKhW,SACzC4K,KAAK,QAAQ,kBAAM8P,EAAe1E,EAAKhW,SACvC4K,KAAK,eAAgB0Q,IACrB1Q,KAAK,MAAM,kBAAMuO,EAAOnD,EAAK/D,MAC7BrH,KAAK,MAAM,kBAAM0O,EAAOtD,EAAK9D,MAC7BtH,KAAK,KAAK,kBAAM4O,EAAUxD,EAAK9D,MAC/B9B,MAAM,eA3vBY,IA4vBlBA,MAAM,iBAAkBsL,IAG7BD,GAAgB7Q,KAAK,SAArB,eAAuCqP,EAAvC,MA5FA2F,CAAmBJ,GAEnBnD,GAAWzc,KAAK,kBAAmBkY,EAAG0H,EAAWK,gBAAM/H,GAAI,CACvDuC,EACAC,OAjlBCuE,GAAG,aAAa,SAAU9e,IA0lBnC,SAAyB+X,EAAG/X,GACxBsc,GAAWzc,KAAK,kBAAmBkY,EAAG/X,EAAG8f,gBAAM/H,IA1lBvCgI,CAAgBlW,KAAM7J,MAEzB8e,GAAG,YAAY,SAAU9e,IAgmBlC,SAAwB+X,EAAG/X,GACvB4f,KAEI5D,IACA2D,IAAkC,GAEtCrD,GAAWzc,KAAK,iBAAkBkY,EAAG/X,EAAG8f,gBAAM/H,IArmBtCiI,CAAenW,KAAM7J,MAExB8e,GAAG,SAAS,WA2mBrB,IAAqB/G,EACXyH,EACAxf,EAgBoBigB,EAjBpBT,EAAeE,GADJ3H,EA1mBGlO,MA4mBd7J,EAAIyc,GAAa+C,GAgBGS,EAdLjgB,EAerBqY,YACIqD,GACApD,GACAmB,EAAUwG,EAAU9N,GACpBsH,EAAwB,EAAdwG,EAAU9N,IAjBxBmK,GAAWzc,KAAK,cAAekY,EAAG/X,EAAG8f,gBAAM/H,GAAI,CAC3CuC,EACAC,UAlWR,SAASwE,GAAqB9I,EAAMiK,EAAO1P,GAEvC,IAAM2P,EAAYC,wBAAc5P,EAAS,IACzC4I,EAAS+G,EAAUE,SAAShH,GAC5BE,EAAS4G,EAAUG,SAAS9G,GAE5BL,EAAMlF,MAAMmF,GACZE,EAAMrF,MAAMsF,GACZc,EAAIqD,OAAO,yBAAyB7d,KAAKsZ,GACzCkB,EAAIqD,OAAO,yBAAyB7d,KAAKyZ,GAGzCe,EAAIqD,OAAO,gBACN3H,UAAU,UACVlL,KAAK,MAAM,SAAC7K,GAAD,OAAOoZ,EAAOpZ,EAAEkS,MAC3BrH,KAAK,MAAM,SAAC7K,GAAD,OAAOuZ,EAAOvZ,EAAEmS,MAGhCuJ,GACK7Q,KAAK,MAAM,kBAAMuO,EAAOY,EAAmB9H,MAC3CrH,KAAK,MAAM,kBAAM0O,EAAOS,EAAmB7H,MA6PpD,SAASuN,GAAgBrF,GACrB,IAAIkG,EAAWT,gBAAMzF,GAKrB,OAHAkG,EAAS,IAAM1S,EAAOC,KACtByS,EAAS,IAAM1S,EAAO2M,IAEftB,EAAYsH,KAAKD,EAAS,GAAIA,EAAS,IAUlD,SAAStC,KACL,MAAwB,WAApBlD,EACOhC,SAAgBiC,GAEhByF,qBAAWzF,GA0L1B,SAAS4E,KACLvF,EAAItE,UAAU,2BAA2BlL,KAAK,UAAW,GAW7D,SAAS8U,KAAkD,IAAhBe,EAAgB,wDACjDC,EAAeD,EAAS,EAAI,EAElCvG,EAA4BtP,KAAK,UAAW8V,GAC5CvG,EAAkCvP,KAAK,UAAW8V,GAydtD,OA/cAviB,GAAQwiB,kBAAoB,SAAUC,GAClC,OAAKvJ,UAAUlP,QAGf9F,GAAWue,EAEJhX,MAJIvH,IAgBflE,GAAQod,oBAAsB,SAAUqF,GACpC,OAAKvJ,UAAUlP,QAGfoT,GAAsBqF,EAEfhX,MAJI2R,IAgBfpd,GAAQqd,kBAAoB,SAAUoF,GAClC,OAAKvJ,UAAUlP,QAGfqT,GAAoBoF,EAEbhX,MAJI4R,IAiBfrd,GAAQmd,cAAgB,SAAUsF,GAC9B,OAAKvJ,UAAUlP,QAGfmT,GAAgBsF,EAEThX,MAJI0R,IAcfnd,GAAQ0iB,SAAW,SAAUD,GACzB,OAAKvJ,UAAUlP,QAGfuS,EAAiBkG,EAEVhX,MAJI8Q,GAefvc,GAAQyd,YAAc,SAAUgF,GAC5B,OAAKvJ,UAAUlP,QAGfyT,GAAcgF,EAEPhX,MAJIgS,IAcfzd,GAAQ0L,YAAc,SAAUE,EAAUC,GACtC,OAAOH,IAAYjK,KAAKzB,GAASic,EAAKrQ,EAAUC,IASpD7L,GAAQ0c,KAAO,SAAU+F,GACrB,OAAKvJ,UAAUlP,QAGf0S,EAAO+F,EAEAhX,MAJIiR,GAiBf1c,GAAQ4d,cAAgB,SAAU6E,GAC9B,OAAKvJ,UAAUlP,QAGf4T,GAAgB6E,EAEThX,MAJImS,IAaf5d,GAAQge,iBAAmB,SAAUyE,GACjC,OAAKvJ,UAAUlP,QAGfgU,GAAmByE,EAEZhX,MAJIuS,IAefhe,GAAQ6d,aAAe,SAAU4E,GAC7B,OAAKvJ,UAAUlP,QAGf6T,GAAe4E,EAERhX,MAJIoS,IAcf7d,GAAQ8d,WAAa,SAAU2E,GAC3B,OAAKvJ,UAAUlP,QAGf8T,GAAa2E,EAENhX,MAJIqS,IAaf9d,GAAQuM,OAAS,SAAUkW,GACvB,OAAKvJ,UAAUlP,QAGfuC,EAASkW,EAEFhX,MAJIc,GAiBfvM,GAAQid,0BAA4B,SAAUwF,GAC1C,OAAKvJ,UAAUlP,QAGfiT,GAA4BwF,EAErBhX,MAJIwR,IAcfjd,GAAQ2d,WAAa,SAAU8E,GAC3B,OAAKvJ,UAAUlP,QAGf2T,GAAa8E,EAENhX,MAJIkS,IAaf3d,GAAQyP,OAAS,SAAUgT,GACvB,OAAKvJ,UAAUlP,QAGfyF,EAAS,EAAH,KACCA,GACAgT,GAGAhX,MAPIgE,GAgBfzP,GAAQwd,cAAgB,SAAUiF,GAC9B,OAAKvJ,UAAUlP,QAGfwT,GAAgBiF,EAEThX,MAJI+R,IAcfxd,GAAQ0gB,GAAK,WACT,IAAIne,EAAQ2b,GAAWwC,GAAGxJ,MAAMgH,GAAYhF,WAE5C,OAAO3W,IAAU2b,GAAale,GAAUuC,GAa5CvC,GAAQ2iB,YAAc,SAAUF,GAC5B,OAAKvJ,UAAUlP,QAGfyQ,GAASgI,EAEFhX,MAJIgP,IAafza,GAAQsM,MAAQ,SAAUmW,GACtB,OAAKvJ,UAAUlP,QAGfsC,EAAQmW,EAEDhX,MAJIa,GAcftM,GAAQyb,WAAa,SAAUgH,GAC3B,OAAKvJ,UAAUlP,QAGfyR,EAAagH,EAENhX,MAJIgQ,GAefzb,GAAQ+c,iBAAmB,SAAU0F,GACjC,OAAKvJ,UAAUlP,QAGf+S,GAAmB0F,EAEZhX,MAJIsR,IAaf/c,GAAQ4c,YAAc,SAAU6F,GAC5B,OAAKvJ,UAAUlP,QAGf4S,EAAc6F,EAEPhX,MAJImR,GAef5c,GAAQ2c,gBAAkB,SAAU8F,GAChC,OAAKvJ,UAAUlP,QAGf2S,EAAkB8F,EAEXhX,MAJIkR,GAaf3c,GAAQwc,OAAS,SAAUiG,GACvB,OAAKvJ,UAAUlP,QAGfwS,EAASiG,EAEFhX,MAJI+Q,GAafxc,GAAQ6c,YAAc,SAAU4F,GAC5B,OAAKvJ,UAAUlP,QAGf6S,EAAc4F,EAEPhX,MAJIoR,GAcf7c,GAAQub,WAAa,SAAUkH,GAC3B,OAAKvJ,UAAUlP,QAGfuR,EAAakH,EAENhX,MAJI8P,GAefvb,GAAQ8c,iBAAmB,SAAU2F,GACjC,OAAKvJ,UAAUlP,QAGf8S,EAAmB2F,EAEZhX,MAJIqR,GAaf9c,GAAQyc,OAAS,SAAUgG,GACvB,OAAKvJ,UAAUlP,QAGfyS,EAASgG,EAEFhX,MAJIgR,GAORzc,O","file":"scatterPlot.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3-time\"), require(\"d3-shape\"), require(\"d3-selection\"), require(\"d3-format\"), require(\"d3-array\"), require(\"d3-scale\"), require(\"d3-axis\"), require(\"d3-time-format\"), require(\"d3-ease\"), require(\"d3-transition\"), require(\"d3-dispatch\"), require(\"d3-zoom\"), require(\"d3-voronoi\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3-time\", \"d3-shape\", \"d3-selection\", \"d3-format\", \"d3-array\", \"d3-scale\", \"d3-axis\", \"d3-time-format\", \"d3-ease\", \"d3-transition\", \"d3-dispatch\", \"d3-zoom\", \"d3-voronoi\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"scatterPlot\"] = factory(require(\"d3-time\"), require(\"d3-shape\"), require(\"d3-selection\"), require(\"d3-format\"), require(\"d3-array\"), require(\"d3-scale\"), require(\"d3-axis\"), require(\"d3-time-format\"), require(\"d3-ease\"), require(\"d3-transition\"), require(\"d3-dispatch\"), require(\"d3-zoom\"), require(\"d3-voronoi\"));\n\telse\n\t\troot[\"core\"] = root[\"core\"] || {}, root[\"core\"][\"scatterPlot\"] = factory(root[\"d3-time\"], root[\"d3-shape\"], root[\"d3-selection\"], root[\"d3-format\"], root[\"d3-array\"], root[\"d3-scale\"], root[\"d3-axis\"], root[\"d3-time-format\"], root[\"d3-ease\"], root[\"d3-transition\"], root[\"d3-dispatch\"], root[\"d3-zoom\"], root[\"d3-voronoi\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__11__, __WEBPACK_EXTERNAL_MODULE__14__, __WEBPACK_EXTERNAL_MODULE__16__, __WEBPACK_EXTERNAL_MODULE__22__, __WEBPACK_EXTERNAL_MODULE__23__, __WEBPACK_EXTERNAL_MODULE__44__, __WEBPACK_EXTERNAL_MODULE__47__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 58);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","import {\n    curveLinear,\n    curveBasis,\n    curveCardinal,\n    curveCatmullRom,\n    curveMonotoneX,\n    curveMonotoneY,\n    curveNatural,\n    curveStep,\n    curveStepAfter,\n    curveStepBefore,\n} from 'd3-shape';\nimport {\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeDay,\n    utcDay,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n} from 'd3-time';\n\nexport const axisTimeCombinations = {\n    MINUTE_HOUR: 'minute-hour',\n    HOUR_DAY: 'hour-daymonth',\n    DAY_MONTH: 'day-month',\n    MONTH_YEAR: 'month-year',\n    CUSTOM: 'custom',\n};\n\nexport const timeBenchmarks = {\n    ONE_AND_A_HALF_YEARS: 47304000000,\n    ONE_YEAR: 31536000365,\n    ONE_DAY: 86400001,\n};\n\nexport const hoursHuman = [\n    '00h',\n    '01h',\n    '02h',\n    '03h',\n    '04h',\n    '05h',\n    '06h',\n    '07h',\n    '08h',\n    '09h',\n    '10h',\n    '11h',\n    '12h',\n    '13h',\n    '14h',\n    '15h',\n    '16h',\n    '17h',\n    '18h',\n    '19h',\n    '20h',\n    '21h',\n    '22h',\n    '23h',\n];\n\nexport const motion = {\n    duration: 1200,\n};\n\nexport const curveMap = {\n    linear: curveLinear,\n    basis: curveBasis,\n    cardinal: curveCardinal,\n    catmullRom: curveCatmullRom,\n    monotoneX: curveMonotoneX,\n    monotoneY: curveMonotoneY,\n    natural: curveNatural,\n    step: curveStep,\n    stepAfter: curveStepAfter,\n    stepBefore: curveStepBefore,\n};\n\nexport const emptyDonutData = [\n    {\n        quantity: 1,\n        percentage: 100,\n    },\n];\n\nexport const timeIntervals = {\n    timeMillisecond: timeMillisecond,\n    utcMillisecond: utcMillisecond,\n    timeSecond: timeSecond,\n    utcSecond: utcSecond,\n    timeMinute: timeMinute,\n    utcMinute: utcMinute,\n    timeHour: timeHour,\n    utcHour: utcHour,\n    timeDay: timeDay,\n    utcDay: utcDay,\n    timeWeek: timeWeek,\n    utcWeek: utcWeek,\n    timeSunday: timeSunday,\n    utcSunday: utcSunday,\n    timeMonday: timeMonday,\n    utcMonday: utcMonday,\n    timeTuesday: timeTuesday,\n    utcTuesday: utcTuesday,\n    timeWednesday: timeWednesday,\n    utcWednesday: utcWednesday,\n    timeThursday: timeThursday,\n    utcThursday: utcThursday,\n    timeFriday: timeFriday,\n    utcFriday: utcFriday,\n    timeSaturday: timeSaturday,\n    utcSaturday: utcSaturday,\n    timeMonth: timeMonth,\n    utcMonth: utcMonth,\n    timeYear: timeYear,\n    utcYear: utcYear,\n};\n\nexport default {\n    axisTimeCombinations,\n    curveMap,\n    emptyDonutData,\n    timeBenchmarks,\n    lineGradientId: 'lineGradientId',\n    timeIntervals,\n    hoursHuman,\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","// Color Gradients\nexport const colorGradients = {\n    greenBlue: ['#39C7EA', '#4CDCBA'],\n    orangePink: ['#FBC670', '#F766B8'],\n    bluePurple: ['#3DC3C9', '#824a9e'],\n};\nexport const colorGradientsHuman = {\n    greenBlue: 'Green to Blue',\n    orangePink: 'Orange to Pink',\n    bluePurple: 'Blue to Purple',\n};\n\n// Color Schemas\n// Standard Color Schema for Britecharts\nexport const britecharts = [\n    '#6aedc7', //green\n    '#39c2c9', //blue\n    '#ffce00', //yellow\n    '#ffa71a', //orange\n    '#f866b9', //pink\n    '#998ce3', //purple\n];\n// Grey Palette\nexport const grey = [\n    '#F8F8FA',\n    '#EFF2F5',\n    '#D2D6DF',\n    '#C3C6CF',\n    '#ADB0B6',\n    '#666A73',\n    '#45494E',\n    '#363A43',\n    '#282C35',\n];\n// Orange Palette\nexport const orange = [\n    '#fcc870',\n    '#ffa71a',\n    '#fb8825',\n    '#f6682f',\n    '#db5a2c',\n    '#bf4c28',\n    '#a43b1c',\n    '#892a10',\n    '#f9e9c5',\n];\n// Blue Palette\nexport const blueGreen = [\n    '#ccf7f6',\n    '#70e4e0',\n    '#00d8d2',\n    '#00acaf',\n    '#007f8c',\n    '#005e66',\n    '#003c3f',\n    '#002d2f',\n    '#0d2223',\n];\n// LightBlue Palette\nexport const teal = [\n    '#ccfffe',\n    '#94f7f4',\n    '#00fff8',\n    '#1de1e1',\n    '#39c2c9',\n    '#2e9a9d',\n    '#227270',\n    '#1a5957',\n    '#133f3e',\n];\n// Green Palette\nexport const green = [\n    '#edfff7',\n    '#d7ffef',\n    '#c0ffe7',\n    '#95f5d7',\n    '#6aedc7',\n    '#59c3a3',\n    '#479980',\n    '#34816a',\n    '#206953',\n];\n// Yellow Palette\nexport const yellow = [\n    '#f9f2b3',\n    '#fbe986',\n    '#fce05a',\n    '#fed72d',\n    '#ffce00',\n    '#fcc11c',\n    '#f9b438',\n    '#eda629',\n    '#e09819',\n];\n// Pink Palette\nexport const pink = [\n    '#fdd1ea',\n    '#fb9cd2',\n    '#f866b9',\n    '#fc40b6',\n    '#ff1ab3',\n    '#e3239d',\n    '#c62c86',\n    '#a62073',\n    '#85135f',\n];\n// Purple Palette\nexport const purple = [\n    '#ddd6fc',\n    '#bbb1f0',\n    '#998ce3',\n    '#8e6bc1',\n    '#824a9e',\n    '#77337f',\n    '#6b1c60',\n    '#591650',\n    '#470f3f',\n];\n// Red Palette\nexport const red = [\n    '#ffd8d4',\n    '#ffb5b0',\n    '#ff938c',\n    '#ff766c',\n    '#ff584c',\n    '#f04b42',\n    '#e03d38',\n    '#be2e29',\n    '#9c1e19',\n];\n\nexport const colorSchemas = {\n    britecharts,\n    grey,\n    orange,\n    blueGreen,\n    teal,\n    green,\n    yellow,\n    pink,\n    purple,\n    red,\n};\nexport const colorSchemasHuman = {\n    britecharts: 'Britecharts Default',\n    grey: 'Britecharts Grey',\n    orange: 'Orange',\n    blueGreen: 'Blue',\n    teal: 'Light Blue',\n    green: 'Green',\n    yellow: 'Yellow',\n    pink: 'Pink',\n    purple: 'Purple',\n    red: 'Red',\n};\n\n// Single Colors\nexport const aloeGreen = ['#7bdcc0']; // To Deprecate\nexport const greenColor = ['#6aedc7'];\nexport const blueColor = ['#39c2c9'];\nexport const yellowColor = ['#ffce00'];\nexport const orangeColor = ['#ffa71a'];\nconst pinkColor = ['#f866b9'];\nconst purpleColor = ['#998ce3'];\n\nconst singleColors = {\n    aloeGreen,\n    greenColor,\n    blueColor,\n    yellowColor,\n    orangeColor,\n    pinkColor,\n    purpleColor,\n};\nconst singleColorsHuman = {\n    aloeGreen: 'Aloe Green',\n    greenColor: 'Green',\n    blueColor: 'Blue',\n    yellowColor: 'Yellow',\n    orangeColor: 'Orange',\n    pinkColor: 'Pink',\n    purpleColor: 'Purple',\n};\n\nexport default {\n    colorSchemas,\n    colorSchemasHuman,\n    colorGradients,\n    colorGradientsHuman,\n    singleColors,\n    singleColorsHuman,\n};\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","module.exports = __WEBPACK_EXTERNAL_MODULE__14__;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","module.exports = __WEBPACK_EXTERNAL_MODULE__16__;","import base64 from 'base-64';\n\nimport { colorSchemas } from './color';\nimport serializeWithStyles from './style';\n\nconst isBrowser = typeof window !== 'undefined';\nconst isIE = navigator.msSaveOrOpenBlob;\nconst IE_ERROR_MSG =\n    'Sorry, this feature is not available for IE. If you require this to work, check this issue https://github.com/eventbrite/britecharts/pull/652';\nconst DEFAULT_FONT_STACK = '‘Helvetica Neue’, Helvetica, Arial, sans-serif';\n\nlet encoder = isBrowser && window.btoa;\n\nif (!encoder) {\n    encoder = base64.encode;\n}\n\n// Base64 doesn't work really well with Unicode strings, so we need to use this function\n// Ref: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\nconst b64EncodeUnicode = (str) => {\n    return encoder(\n        encodeURIComponent(str).replace(\n            /%([0-9A-F]{2})/g,\n            function (match, p1) {\n                return String.fromCharCode('0x' + p1);\n            }\n        )\n    );\n};\n\nconst config = {\n    styleClass: 'britechartStyle',\n    defaultFilename: 'britechart.png',\n    chartBackground: 'white',\n    imageSourceBase: 'data:image/svg+xml;base64,',\n    titleFontSize: '15px',\n    // eslint-disable-next-line quotes\n    titleFontFamily: DEFAULT_FONT_STACK,\n    titleTopOffset: 15,\n    get styleBackgroundString() {\n        return `<style>svg{background:${this.chartBackground};}</style>`;\n    },\n};\n\n/**\n * Main function to be used as a method by chart instances to export charts to png\n * @param  {array} svgs         (or an svg element) pass in both chart & legend as array or just chart as svg or in array\n * @param  {string} filename    [download to be called <filename>.png]\n * @param  {string} title       Title for the image\n * @private\n */\nexport function exportChart(d3svg, filename, title) {\n    if (isIE) {\n        // eslint-disable-next-line no-console\n        console.error(IE_ERROR_MSG);\n\n        return false;\n    }\n\n    return loadImage(convertSvgToHtml.call(this, d3svg, title))\n        .then((img) => {\n            return {\n                canvas: createCanvas(this.width(), this.height()),\n                img,\n            };\n        })\n        .then(({ canvas, img }) => handleImageLoad.call(img, canvas, filename));\n}\n\n/**\n * adds background styles to raw html\n * @param {string} html raw html\n * @private\n */\nfunction addBackground(html) {\n    return html.replace('>', `>${config.styleBackgroundString}`);\n}\n\n/**\n * Takes the D3 SVG element, adds proper SVG tags, adds inline styles\n * from stylesheets, adds white background and returns string\n * @param  {SVGElement} d3svg   TYPE d3 svg element\n * @return {String}             String of passed d3\n * @private\n */\nexport function convertSvgToHtml(d3svg, title) {\n    if (!d3svg) {\n        return;\n    }\n\n    d3svg.attr('version', 1.1).attr('xmlns', 'http://www.w3.org/2000/svg');\n    let serializer = serializeWithStyles.initializeSerializer();\n    let html = serializer(d3svg.node());\n\n    html = formatHtmlByBrowser(html);\n    html = prependTitle.call(\n        this,\n        html,\n        title,\n        parseInt(d3svg.attr('width'), 10)\n    );\n    html = addBackground(html);\n\n    return html;\n}\n\n/**\n * Create Canvas\n * @param  {number} width\n * @param  {number} height\n * @return {object} TYPE canvas element\n * @private\n */\nfunction createCanvas(width, height) {\n    let canvas = document.createElement('canvas');\n\n    canvas.height = height;\n    canvas.width = width;\n\n    return canvas;\n}\n\n/**\n * Create Image\n * @param  {string} svgHtml string representation of svg el\n * @param  {Function} callback function to prepare image for loading\n * @return {object}  TYPE element <img>, src points at svg\n * @private\n */\nfunction createImage(svgHtml, callback) {\n    let img = new Image();\n\n    if (callback) {\n        if (typeof callback !== 'function') {\n            throw new Error(\n                `The callback provided should be a function, we got a ${typeof callback} instead.`\n            );\n        }\n        callback(img);\n    }\n    img.src = `${config.imageSourceBase}${b64EncodeUnicode(svgHtml)}`;\n\n    return img;\n}\n\n/**\n * Draws image on canvas\n * @param  {object} image TYPE:el <img>, to be drawn\n * @param  {object} canvas TYPE: el <canvas>, to draw on\n * @private\n */\nexport function drawImageOnCanvas(image, canvas) {\n    canvas.getContext('2d').drawImage(image, 0, 0);\n\n    return canvas;\n}\n\n/**\n * Triggers browser to download image, convert canvas to url,\n * we need to append the link el to the dom before clicking it for Firefox to register\n * point <a> at it and trigger click\n * @param  {object} canvas TYPE: el <canvas>\n * @param  {string} filename\n * @param  {string} extensionType\n * @private\n */\nfunction downloadCanvas(\n    canvas,\n    filename = config.defaultFilename,\n    extensionType = 'image/png'\n) {\n    let url = canvas.toDataURL(extensionType);\n    let link = document.createElement('a');\n\n    link.href = url;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n}\n\n/**\n * Some browsers need special formatting, we handle that here\n * @param  {string} html string of svg html\n * @return {string} string of svg html\n * @private\n */\nfunction formatHtmlByBrowser(html) {\n    if (navigator.userAgent.search('FireFox') > -1) {\n        return html.replace(\n            /url.*&quot;\\)/,\n            'url(&quot;linearGradient[id*=\"-gradient-\"]&quot;);'\n        );\n    }\n\n    return html;\n}\n\n/**\n * Handles on load event fired by img.onload, this=img\n * @param  {object} canvas TYPE: el <canvas>\n * @param  {string} filename\n * @private\n */\nfunction handleImageLoad(canvas, filename) {\n    downloadCanvas(drawImageOnCanvas(this, canvas), filename);\n}\n\n/**\n * Create Image instance and attach event listeners for future promise\n * @param  {string} svgHtml string representation of svg el\n * @returns {Promise} promise that exposes loaded image instance\n * @private\n */\nfunction loadImage(svgHtml) {\n    return new Promise((res, rej) => {\n        createImage(svgHtml, (img) => {\n            img.addEventListener('load', () => res(img));\n            img.addEventListener('error', (err) => rej(err));\n        });\n    });\n}\n\n/**\n * if passed, append title to the raw html to appear on graph\n * @param  {string} html     raw html string\n * @param  {string} title    title of the graph\n * @param  {number} svgWidth width of graph container\n * @return {string}         raw html with title prepended\n * @private\n */\nfunction prependTitle(html, title, svgWidth) {\n    if (!title || !svgWidth) {\n        return html;\n    }\n    let { grey } = colorSchemas;\n\n    html = html.replace(\n        /<g/,\n        `<text x=\"${this.margin().left}\" y=\"${\n            config.titleTopOffset\n        }\" font-family=\"${config.titleFontFamily}\" font-size=\"${\n            config.titleFontSize\n        }\" fill=\"${grey[6]}\"> ${title} </text><g `\n    );\n\n    return html;\n}\n\nexport default {\n    exportChart,\n    convertSvgToHtml,\n    createImage,\n    drawImageOnCanvas,\n    loadImage,\n};\n","/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '0.1.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n","module.exports = (function () {\n    'use strict';\n\n    // Styles inherited from style sheets will not be rendered for elements with these tag names\n    const noStyleTags = {\n        BASE: true,\n        HEAD: true,\n        HTML: true,\n        META: true,\n        NOFRAME: true,\n        NOSCRIPT: true,\n        PARAM: true,\n        SCRIPT: true,\n        STYLE: true,\n        TITLE: true,\n    };\n\n    // This list determines which css default values lookup tables are precomputed at load time\n    // Lookup tables for other tag names will be automatically built at runtime if needed\n    const tagNames = [\n        'A',\n        'ABBR',\n        'ADDRESS',\n        'AREA',\n        'ARTICLE',\n        'ASIDE',\n        'AUDIO',\n        'B',\n        'BASE',\n        'BDI',\n        'BDO',\n        'BLOCKQUOTE',\n        'BODY',\n        'BR',\n        'BUTTON',\n        'CANVAS',\n        'CAPTION',\n        'CENTER',\n        'CITE',\n        'CODE',\n        'COL',\n        'COLGROUP',\n        'COMMAND',\n        'DATALIST',\n        'DD',\n        'DEL',\n        'DETAILS',\n        'DFN',\n        'DIV',\n        'DL',\n        'DT',\n        'EM',\n        'EMBED',\n        'FIELDSET',\n        'FIGCAPTION',\n        'FIGURE',\n        'FONT',\n        'FOOTER',\n        'FORM',\n        'H1',\n        'H2',\n        'H3',\n        'H4',\n        'H5',\n        'H6',\n        'HEAD',\n        'HEADER',\n        'HGROUP',\n        'HR',\n        'HTML',\n        'I',\n        'IFRAME',\n        'IMG',\n        'INPUT',\n        'INS',\n        'KBD',\n        'LABEL',\n        'LEGEND',\n        'LI',\n        'LINK',\n        'MAP',\n        'MARK',\n        'MATH',\n        'MENU',\n        'META',\n        'METER',\n        'NAV',\n        'NOBR',\n        'NOSCRIPT',\n        'OBJECT',\n        'OL',\n        'OPTION',\n        'OPTGROUP',\n        'OUTPUT',\n        'P',\n        'PARAM',\n        'PRE',\n        'PROGRESS',\n        'Q',\n        'RP',\n        'RT',\n        'RUBY',\n        'S',\n        'SAMP',\n        'SCRIPT',\n        'SECTION',\n        'SELECT',\n        'SMALL',\n        'SOURCE',\n        'SPAN',\n        'STRONG',\n        'STYLE',\n        'SUB',\n        'SUMMARY',\n        'SUP',\n        'SVG',\n        'TABLE',\n        'TBODY',\n        'TD',\n        'TEXTAREA',\n        'TFOOT',\n        'TH',\n        'THEAD',\n        'TIME',\n        'TITLE',\n        'TR',\n        'TRACK',\n        'U',\n        'UL',\n        'VAR',\n        'VIDEO',\n        'WBR',\n    ];\n\n    /**\n     * Extracts the styles of elements of the given tag name\n     * @param {String} tagName  Tag name that we will check for styles\n     * @return {Object}         Values of the styles applied to the given element\n     * @private\n     */\n    const computeDefaultStyleByTagName = (tagName) => {\n        let defaultStyle = {},\n            element = document.body.appendChild(\n                document.createElement(tagName)\n            ),\n            computedStyle = window.getComputedStyle(element);\n\n        [].forEach.call(computedStyle, (style) => {\n            defaultStyle[style] = computedStyle[style];\n        });\n        document.body.removeChild(element);\n\n        return defaultStyle;\n    };\n\n    /**\n     * Returns a serializer function, only run it when you know you want to serialize your chart\n     * @return {func} serializer to add styles in line to dom string\n     * @private\n     */\n    const initializeSerializer = () => {\n        // Mapping between tag names and css default values lookup tables. This allows to exclude default values in the result.\n        const defaultStylesByTagName = {};\n\n        // Precompute the lookup tables.\n        [].forEach.call(tagNames, (name) => {\n            if (!noStyleTags[name]) {\n                defaultStylesByTagName[name] =\n                    computeDefaultStyleByTagName(name);\n            }\n        });\n\n        function getDefaultStyleByTagName(tagName) {\n            tagName = tagName.toUpperCase();\n\n            if (!defaultStylesByTagName[tagName]) {\n                defaultStylesByTagName[tagName] =\n                    computeDefaultStyleByTagName(tagName);\n            }\n\n            return defaultStylesByTagName[tagName];\n        }\n\n        function serializeWithStyles(elem) {\n            let cssTexts = [],\n                elements,\n                computedStyle,\n                defaultStyle,\n                result;\n\n            if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n                // 'Error: Object passed in to serializeWithSyles not of nodeType Node.ELEMENT_NODE'\n\n                return;\n            }\n\n            cssTexts = [];\n            elements = elem.querySelectorAll('*');\n\n            [].forEach.call(elements, (el, i) => {\n                if (!noStyleTags[el.tagName]) {\n                    computedStyle = window.getComputedStyle(el);\n                    defaultStyle = getDefaultStyleByTagName(el.tagName);\n                    cssTexts[i] = el.style.cssText;\n                    [].forEach.call(computedStyle, (cssPropName) => {\n                        if (\n                            computedStyle[cssPropName] !==\n                            defaultStyle[cssPropName]\n                        ) {\n                            el.style[cssPropName] = computedStyle[cssPropName];\n                        }\n                    });\n                }\n            });\n\n            result = elem.outerHTML;\n            elements = [].map.call(elements, (el, i) => {\n                el.style.cssText = cssTexts[i];\n\n                return el;\n            });\n\n            return result;\n        }\n\n        return serializeWithStyles;\n    };\n\n    return {\n        initializeSerializer,\n    };\n})();\n","import { format } from 'd3-format';\nimport { max, min } from 'd3-array';\n\nlet idCounter = 0;\n\nconst integerValueFormats = {\n    small: {\n        limit: 10,\n        format: format(''),\n    },\n    medium: {\n        limit: 1000,\n        format: format(''),\n    },\n    large: {\n        limit: null,\n        format: format('.2s'),\n    },\n};\n\nconst decimalValueFormats = {\n    small: {\n        limit: 10,\n        format: format('.3f'),\n    },\n    medium: {\n        limit: 100,\n        format: format('.1f'),\n    },\n    large: {\n        limit: null,\n        format: format('.2s'),\n    },\n};\n\n/**\n * Return a relative size for the value given, based in our decimal or integer tables\n * @param {Number} value    Value to assess its relative size\n * @param {Object} limits   Object stablishing the limits and formats\n * to consider the value of a given size\n * @private\n */\nconst getValueSize = (value, limits) => {\n    let size = 'large';\n\n    if (value < limits.small.limit) {\n        size = 'small';\n    } else if (value < limits.medium.limit) {\n        size = 'medium';\n    }\n\n    return size;\n};\n\n/**\n * Returns an object that contains necessary coordinates for drawing the trendline. The\n * calculation of slope and y-intercept uses basic accumulative linear regression formula.\n * @param  {Object[]} dataPoints    Array of circle data points\n * @return {Object}\n * @private\n */\nexport const calcLinearRegression = (dataPoints) => {\n    let n = dataPoints.length,\n        x = 0,\n        y = 0,\n        xy = 0,\n        x2 = 0;\n\n    dataPoints.forEach((d) => {\n        x += d.x;\n        y += d.y;\n        xy += d.x * d.y;\n        x2 += d.x * d.x;\n    });\n\n    const denominator = n * x2 - x * x;\n    const intercept = (y * x2 - x * xy) / denominator;\n    const slope = (n * xy - x * y) / denominator;\n    const minX = min(dataPoints, ({ x }) => x);\n    const maxX = max(dataPoints, ({ x }) => x);\n\n    return {\n        x1: minX,\n        y1: slope * n + intercept,\n        x2: maxX,\n        y2: slope * maxX + intercept,\n    };\n};\n\n/**\n * Calculates percentage of value from total\n * @param  {Number}  value    Value to check\n * @param  {Number}  total    Sum of values\n * @param  {String}  decimals Specifies number of decimals https://github.com/d3/d3-format\n * @return {String}           Percentage\n * @private\n */\nexport const calculatePercent = (value, total, decimals) => {\n    const percent = total ? (value / total) * 100 : 0;\n\n    return format(decimals)(percent);\n};\n\n/**\n * Checks if a number is an integer or a decimal value\n * @param  {Number}  value Value to check\n * @return {Boolean}       If it is an iteger\n * @private\n */\nexport const isInteger = (value) => {\n    return value % 1 === 0;\n};\n\n/**\n * Formats a floating point value depending on its value range\n * @param  {Number} value Decimal point value to format\n * @return {Number}       Formatted value to show\n * @private\n */\nexport const formatDecimalValue = (value) => {\n    let size = getValueSize(value, decimalValueFormats);\n    let format = decimalValueFormats[size].format;\n\n    return format(value);\n};\n\n/**\n * Formats an integer value depending on its value range\n * @param  {Number} value Decimal point value to format\n * @return {Number}       Formatted value to show\n * @private\n */\nexport const formatIntegerValue = (value) => {\n    let size = getValueSize(value, integerValueFormats);\n    let format = integerValueFormats[size].format;\n\n    return format(value);\n};\n\n/**\n * Generates a unique id with a prefix\n * @param  {String} prefix   Prefix to add before the id\n * @return {String}          Unique id\n * @private\n */\nexport const uniqueId = (prefix) => {\n    const id = ++idCounter;\n\n    return `${prefix.toString()}-${id}`;\n};\n\nexport default {\n    calculatePercent,\n    isInteger,\n    formatDecimalValue,\n    formatIntegerValue,\n    uniqueId,\n    calcLinearRegression,\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__22__;","module.exports = __WEBPACK_EXTERNAL_MODULE__23__;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO: Document d3 objects rather than using *\n// TODO: Add bi-directional accessors for 2d grid, and determine naming (H/V vs. X/Y)\n\nconst { scaleLinear } = require('d3-scale');\nconst { classArray } = require('./classes');\n\n// Opacity for fade in/out\nconst EPSILON = 1e-6;\n\nconst COMPONENT_CLASSNAME = 'grid';\nconst DIRECTION_HORIZONTAL = 'horizontal';\nconst DIRECTION_VERTICAL = 'vertical';\nconst DIRECTION_FULL = 'full';\n\n// Direction orientations\nconst DIR = {\n    H: DIRECTION_HORIZONTAL,\n    V: DIRECTION_VERTICAL,\n};\n\n/**\n * Higher order function that returns the default positioning function for continuous scales\n * The +0.5 avoids anti-aliasing artifacts\n * @param {*} scale - Scale for positioning\n * @return {function}\n * @private\n */\nfunction positionNumber(scale) {\n    return (d) => +scale(d) + 0.5;\n}\n\n/**\n * Higher order function that returns the positioning function for bandwidth scales\n * Also adjusted for anti-aliasing\n * @param {*} scale - Scale for positioning\n * @return {function}\n * @private\n */\nfunction positionCenter(scale) {\n    let offset = Math.max(0, scale.bandwidth() - 1) / 2;\n\n    if (scale.round()) {\n        offset = Math.round(offset);\n    }\n\n    return (d) => +scale(d) + offset + 0.5;\n}\n\n/**\n * Constructor for a one-dimensional grid helper\n * @param {string} orient - orientation string to define the direction\n * @param {*} scale - d3 scale for the grid's ticks\n * @return {gridBaseGenerator}\n * @private\n */\nfunction gridBase(orient, scale) {\n    let range = [0, 1],\n        offsetStart = 0,\n        offsetEnd = 0,\n        hideEdges = false,\n        ticks = null,\n        tickValues = null,\n        // Create a class array helper for producing class lists\n        classArr = classArray(COMPONENT_CLASSNAME, orient),\n        // Manage horizontal and vertical directions by setting the a parameter\n        // to use in svg attributes\n        x = orient === DIR.H ? 'x' : 'y',\n        y = orient === DIR.H ? 'y' : 'x';\n\n    /**\n     * Generator function for one-dimensional grid\n     * @param {*} context - d3 selection or transition to use as the container\n     */\n    function gridBaseGenerator(context) {\n        let values = getValues(),\n            // Get the appropriate function to position the lines, based on scale type\n            // Pass a duplicate scale to ensure position values are fixed until grid updated\n            position = (scale.bandwidth ? positionCenter : positionNumber)(\n                scale.copy()\n            ),\n            // Set parameter to ensure correct line offset positions for inverted ranges\n            k = range[range.length - 1] >= range[0] ? 1 : -1,\n            // If passed a transition, convert to selection\n            selection = context.selection ? context.selection() : context,\n            // Set up container element\n            initContainer = selection\n                .selectAll(classArr.asSelector())\n                .data([null]),\n            container = initContainer.merge(\n                initContainer\n                    .enter()\n                    .append('g')\n                    .attr('class', classArr.asList())\n            ),\n            // Set up line selections\n            line = container.selectAll('line').data(values, scale).order(),\n            lineExit = line.exit(),\n            lineEnter = line.enter().append('line').attr('class', 'grid-line');\n\n        line = line.merge(lineEnter);\n\n        // Run animations only if grid was called on a transition\n        if (context !== selection) {\n            // Higher-order function that returns a function to position the exiting grid lines\n            // Requires a HOF to pass the attribute name to the inner function\n            const exitPosition = (attr) =>\n                function (d) {\n                    return isFinite((d = position(d)))\n                        ? d\n                        : this.getAttribute(attr);\n                };\n\n            // Function to initially position the entering grid lines\n            // Pulls the previously saved positioning function from the parent node if it exists\n            const enterPosition = function (d) {\n                let p = this.parentNode.__pos;\n\n                return p && isFinite((p = p(d))) ? p : position(d);\n            };\n\n            line = line.transition(context);\n\n            lineExit = lineExit\n                .transition(context)\n                .attr('opacity', EPSILON)\n                .attr(y + '1', exitPosition(y + '1'))\n                .attr(y + '2', exitPosition(y + '2'));\n\n            lineEnter = lineEnter\n                .attr('opacity', EPSILON)\n                .attr(y + '1', enterPosition)\n                .attr(y + '2', enterPosition);\n        }\n\n        lineExit.remove();\n\n        line.attr('opacity', 1)\n            .attr(x + '1', +range[0] - k * offsetStart)\n            .attr(x + '2', +range[range.length - 1] + k * offsetEnd)\n            .attr(y + '1', (d) => position(d))\n            .attr(y + '2', (d) => position(d));\n\n        // Attach the positioning function as a property of the container element\n        // This stores it for future use as the starting point for the lineEnter transition\n        // Cannot use arrow function as this must refer to the element\n        container.each(function () {\n            this.__pos = position;\n        });\n    }\n\n    // HELPERS\n\n    /**\n     * Extract the tick values and adjust for edge hiding\n     * @return {number[]}\n     * @private\n     */\n    function getValues() {\n        let hideFirst =\n                hideEdges === true ||\n                hideEdges === 'both' ||\n                hideEdges === 'first',\n            hideLast =\n                hideEdges === true ||\n                hideEdges === 'both' ||\n                hideEdges === 'last',\n            values = tickValues === null ? scaleTicks() : tickValues.slice();\n\n        if (hideFirst) values.shift();\n        if (hideLast) values.pop();\n\n        return values;\n    }\n\n    /**\n     * Get the tick values from the underlying scales\n     * @return {number[]}\n     * @private\n     */\n    function scaleTicks() {\n        let scaleTicks;\n\n        if (scale.ticks) {\n            scaleTicks = scale.ticks.apply(scale, ticks ? [ticks] : []);\n        } else {\n            scaleTicks = scale.domain();\n        }\n\n        return scaleTicks.slice();\n    }\n\n    // API\n\n    /**\n     * Gets or sets the scale\n     * Scale applies the ticks to the grid\n     * @param {*} [_] - d3 scale instance\n     * @return {*|gridBaseGenerator}\n     * @public\n     */\n    gridBaseGenerator.scale = function (_) {\n        if (!arguments.length) {\n            return scale;\n        }\n        scale = _;\n\n        return gridBaseGenerator;\n    };\n\n    /**\n     * Gets or sets the range\n     * Governs the underlying length and positioning of the grid lines relative to the container\n     * Should usually be set to the output range from the orthogonal scale in a 2D chart\n     * @param {number[]} [_] - Array representing the output range\n     * @return {*|gridBaseGenerator}\n     * @public\n     */\n    gridBaseGenerator.range = function (_) {\n        if (!arguments.length) {\n            return range;\n        }\n        range = _;\n\n        return gridBaseGenerator;\n    };\n\n    /**\n     * Gets or sets the start offset\n     * Start offset is the distance before the start position of the scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {*|gridBaseGenerator}\n     * @public\n     */\n    gridBaseGenerator.offsetStart = function (_) {\n        if (!arguments.length) {\n            return offsetStart;\n        }\n        offsetStart = _;\n\n        return gridBaseGenerator;\n    };\n\n    /**\n     * Gets or sets the end offset\n     * End offset is the distance after the end position of the scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {*|gridBaseGenerator}\n     * @public\n     */\n    gridBaseGenerator.offsetEnd = function (_) {\n        if (!arguments.length) {\n            return offsetEnd;\n        }\n        offsetEnd = _;\n\n        return gridBaseGenerator;\n    };\n\n    /**\n     * Gets or sets the hideEdges parameter\n     * Determines if the first and last grid line are suppressed\n     * True or 'both' suppress both edges, 'first' and 'last' suppress the grid line\n     * corresponding to the first and last tick value respectively\n     * @param {boolean|string} [_] - hideEdges parameter, accepts boolean and 'both', 'first', or 'last' strings\n     * @return {boolean|string|gridBaseGenerator}\n     * @public\n     */\n    gridBaseGenerator.hideEdges = function (_) {\n        if (!arguments.length) {\n            return hideEdges;\n        }\n        hideEdges = _;\n\n        return gridBaseGenerator;\n    };\n\n    /**\n     * Gets or sets the tick count\n     * Mirrors d3 axis' ticks API method\n     * @param {number} [_] - Approximate tick count\n     * @return {number|gridBaseGenerator}\n     * @public\n     */\n    gridBaseGenerator.ticks = function (_) {\n        if (!arguments.length) {\n            return ticks;\n        }\n        ticks = _;\n\n        return gridBaseGenerator;\n    };\n\n    /**\n     * Gets or sets the tick values\n     * Mirrors d3 axis' tickValues API method\n     * @param {number[]} [_] - Array of domain values to place ticks\n     * @return {number[]|gridBaseGenerator}\n     * @public\n     */\n    gridBaseGenerator.tickValues = function (_) {\n        if (!arguments.length) {\n            return tickValues && tickValues.slice();\n        }\n        tickValues = _ === null ? null : [..._].slice();\n\n        return gridBaseGenerator;\n    };\n\n    return gridBaseGenerator;\n}\n\n/**\n * Constructor for a two-dimensional grid helper\n * @param {*} scaleX - d3 scale for the grid's x direction\n * @param {*} scaleY - d3 scale for the grid's y direction\n * @return {gridGenerator}\n * @memberof Grid\n * @alias module:Grid.grid\n * @example\n * const grid = grid(xScale, yScale)\n        .offsetStart(5)\n        .hideEdges(true)\n        .ticks(4);\n\n    grid(svg.select('.grid-lines-group'));\n */\nexport function grid(scaleX, scaleY) {\n    let gridH = gridHorizontal(scaleY || scaleLinear()),\n        gridV = gridVertical(scaleX || scaleLinear()),\n        direction = DIRECTION_FULL,\n        tickValuesX = null,\n        tickValuesY = null;\n\n    /**\n     * Generator function for two-dimensional grid\n     * @param {*} context - d3 selection or transition to use as the container\n     */\n    function gridGenerator(context) {\n        direction === DIRECTION_FULL || direction === DIRECTION_HORIZONTAL\n            ? gridH.tickValues(tickValuesY).range(scaleX.range())\n            : gridH.tickValues([]);\n\n        direction === DIRECTION_FULL || direction === DIRECTION_VERTICAL\n            ? gridV.tickValues(tickValuesX).range(scaleY.range())\n            : gridV.tickValues([]);\n\n        context.call(gridH).call(gridV);\n    }\n\n    // API\n\n    /**\n     * Gets or sets the x-scale\n     * X-scale applies ticks to the vertical grid and range to the horizontal grid\n     * @param {*} [_] - d3 scale instance\n     * @return {*|gridGenerator}\n     * @public\n     */\n    gridGenerator.scaleX = function (_) {\n        if (!arguments.length) {\n            return scaleX;\n        }\n        scaleX = _;\n        gridV.scale(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the y-scale\n     * Y-scale applies ticks to the horizontal grid and range to the vertical grid\n     * @param {*} [_] - d3 scale instance\n     * @return {*|gridGenerator}\n     * @public\n     */\n    gridGenerator.scaleY = function (_) {\n        if (!arguments.length) {\n            return scaleY;\n        }\n        scaleY = _;\n        gridH.scale(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the direction of the grid\n     * Direction of 'full' will render both horizontal and vertical grid lines\n     * Either 'horizontal' or 'vertical' wil render the respective lines\n     * @param {string} [_] - Grid direction accepts 'full', 'vertical', or 'horizontal'\n     * @return {string|gridGenerator}\n     * @public\n     */\n    gridGenerator.direction = function (_) {\n        if (!arguments.length) {\n            return direction;\n        }\n        direction = _;\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets both the horizontal and vertical grid start offset\n     * Convenience method that sets the start offset for both horizontal and vertical grids\n     * Returns the start offset of the horizontal grid if no argument is supplied\n     * Start offset is the distance before the start position of the scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.offsetStart = function (_) {\n        if (!arguments.length) {\n            return gridH.offsetStart();\n        }\n        gridH.offsetStart(_);\n        gridV.offsetStart(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the horizontal grid start offset\n     * Returns the start offset of the horizontal grid if no argument is supplied\n     * Start offset is the distance before the start of the x-scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.offsetStartH = function (_) {\n        if (!arguments.length) {\n            return gridH.offsetStart();\n        }\n        gridH.offsetStart(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the vertical grid start offset\n     * Returns the start offset of the vertical grid if no argument is supplied\n     * Start offset is the distance before the start of the y-scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.offsetStartV = function (_) {\n        if (!arguments.length) {\n            return gridV.offsetStart();\n        }\n        gridV.offsetStart(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets both the horizontal and vertical grid end offset\n     * Convenience method that sets the end offset for both horizontal and vertical grids\n     * Returns the end offset of the horizontal grid if no argument is supplied\n     * End offset is the distance after the end position of the scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.offsetEnd = function (_) {\n        if (!arguments.length) {\n            return gridH.offsetEnd();\n        }\n        gridH.offsetEnd(_);\n        gridV.offsetEnd(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the horizontal grid end offset\n     * Returns the end offset of the horizontal grid if no argument is supplied\n     * End offset is the distance after the end of the x-scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.offsetEndH = function (_) {\n        if (!arguments.length) {\n            return gridH.offsetEnd();\n        }\n        gridH.offsetEnd(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the vertical grid end offset\n     * Returns the end offset of the vertical grid if no argument is supplied\n     * End offset is the distance after the end of the y-scale's range that the grid will render\n     * @param {number} [_] - Offset in px\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.offsetEndV = function (_) {\n        if (!arguments.length) {\n            return gridV.offsetEnd();\n        }\n        gridV.offsetEnd(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the hideEdges parameter for both horizontal and vertical grids\n     * Returns the horizontal value if no argument specified\n     * Determines if the first and last grid line are suppressed\n     * True or 'both' suppress both edges, 'first' and 'last' suppress the grid line\n     * corresponding to the first and last tick value respectively\n     * @param {boolean|string} [_] - hideEdges parameter, accepts boolean and 'both', 'first', or 'last' strings\n     * @return {boolean|string|gridGenerator}\n     * @public\n     */\n    gridGenerator.hideEdges = function (_) {\n        if (!arguments.length) {\n            return gridH.hideEdges();\n        }\n        gridH.hideEdges(_);\n        gridV.hideEdges(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the hideEdges parameter for the horizontal grid\n     * Determines if the first and last grid line are suppressed\n     * True or 'both' suppress both edges, 'first' and 'last' suppress the grid line\n     * corresponding to the first and last tick value respectively\n     * @param {boolean|string} [_] - hideEdges parameter, accepts boolean and 'both', 'first', or 'last' strings\n     * @return {boolean|string|gridGenerator}\n     * @public\n     */\n    gridGenerator.hideEdgesH = function (_) {\n        if (!arguments.length) {\n            return gridH.hideEdges();\n        }\n        gridH.hideEdges(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the hideEdges parameter for the vertical grid\n     * Determines if the first and last grid line are suppressed\n     * True or 'both' suppress both edges, 'first' and 'last' suppress the grid line\n     * corresponding to the first and last tick value respectively\n     * @param {boolean|string} [_] - hideEdges parameter, accepts boolean and 'both', 'first', or 'last' strings\n     * @return {boolean|string|gridGenerator}\n     * @public\n     */\n    gridGenerator.hideEdgesV = function (_) {\n        if (!arguments.length) {\n            return gridV.hideEdges();\n        }\n        gridV.hideEdges(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the tick count for both horizontal and vertical grids\n     * Returns the horizontal ticks if no argument specified\n     * Mirrors d3 axis' ticks API method\n     * @param {number} [_] - Approximate tick count\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.ticks = function (_) {\n        if (!arguments.length) {\n            return gridH.ticks();\n        }\n        gridH.ticks(_);\n        gridV.ticks(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the tick count for the horizontal grid\n     * Mirrors d3 axis' ticks API method\n     * @param {number} [_] - Approximate tick count\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.ticksH = function (_) {\n        if (!arguments.length) {\n            return gridH.ticks();\n        }\n        gridH.ticks(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the tick count for the vertical grid\n     * Mirrors d3 axis' ticks API method\n     * @param {number} [_] - Approximate tick count\n     * @return {number|gridGenerator}\n     * @public\n     */\n    gridGenerator.ticksV = function (_) {\n        if (!arguments.length) {\n            return gridV.ticks();\n        }\n        gridV.ticks(_);\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the tick values for both horizontal and vertical grids\n     * Returns the horizontal tick values if no argument specified\n     * Mirrors d3 axis' tickValues API method\n     * @param {number[]} [_] - Array of domain values to place ticks\n     * @return {number[]|gridGenerator}\n     * @public\n     */\n    gridGenerator.tickValues = function (_) {\n        if (!arguments.length) {\n            return tickValuesY;\n        }\n        tickValuesX = tickValuesY = _;\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the tick values for the horizontal grid\n     * Mirrors d3 axis' tickValues API method\n     * @param {number[]} [_] - Array of domain values to place ticks\n     * @return {number[]|gridGenerator}\n     * @public\n     */\n    gridGenerator.tickValuesH = function (_) {\n        if (!arguments.length) {\n            return tickValuesY;\n        }\n        tickValuesY = _;\n\n        return gridGenerator;\n    };\n\n    /**\n     * Gets or sets the tick values for the vertical grid\n     * Mirrors d3 axis' tickValues API method\n     * @param {number[]} [_] - Array of domain values to place ticks\n     * @return {number[]|gridGenerator}\n     * @public\n     */\n    gridGenerator.tickValuesV = function (_) {\n        if (!arguments.length) {\n            return tickValuesX;\n        }\n        tickValuesX = _;\n\n        return gridGenerator;\n    };\n\n    return gridGenerator;\n}\n\n/**\n * Constructor for a horizontal grid helper\n * @param {*} scale - d3 scale to initialize the grid\n * @return {gridBaseGenerator}\n * @public\n * @memberof Grid\n * @alias module:Grid.gridHorizontal\n * @example\n * const grid = gridHorizontal(yScale)\n        .range([0, chartWidth])\n        .hideEdges('first')\n        .ticks(yTicks);\n\n    grid(svg.select('.grid-lines-group'));\n */\nexport function gridHorizontal(scale) {\n    return gridBase(DIR.H, scale);\n}\n\n/**\n * Constructor for a vertical grid helper\n * @param {*} scale - d3 scale to initialize the grid\n * @return {gridBaseGenerator}\n * @public\n * @memberof Grid\n * @alias module:Grid.gridVertical\n * @example\n *  const grid = gridVertical(xScale)\n        .range([0, chartHeight])\n        .hideEdges('first')\n        .ticks(xTicks);\n\n    grid(svg.select('.grid-lines-group'));\n */\nexport function gridVertical(scale) {\n    return gridBase(DIR.V, scale);\n}\n\n/**\n * Reusable Grid component helper that renders either a vertical, horizontal or full grid, and that\n * will usually be used inside charts. It could also be used as a standalone component to use on custom charts.\n * @module Grid\n * @requires d3-scale\n * @exports gridHorizontal\n * @exports gridVertical\n * @exports grid\n */\nexport default {\n    gridHorizontal,\n    gridVertical,\n    grid,\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","const filterId = 'highlight-filter';\n\nexport const createFilterContainer = (metadataSelection) => {\n    let highlightFilter = metadataSelection\n        .append('defs')\n        .append('filter')\n        .attr('id', filterId);\n\n    return highlightFilter;\n};\n\nexport const createGausianBlur = (filterSelector) => {\n    filterSelector\n        .append('feGaussianBlur')\n        .attr('stdDeviation', 1)\n        .attr('result', 'coloredBlur');\n\n    return filterId;\n};\n\nexport const createGlow = (filterSelector) => {\n    filterSelector\n        .attr('x', '-30%')\n        .attr('y', '-30%')\n        .attr('width', '160%')\n        .attr('height', '160%');\n\n    filterSelector\n        .append('feGaussianBlur')\n        .attr('stdDeviation', '0.9 0.9')\n        .attr('result', 'glow');\n\n    let merge = filterSelector.append('feMerge');\n\n    merge.append('feMergeNode').attr('in', 'glow');\n\n    merge.append('feMergeNode').attr('in', 'glow');\n\n    merge.append('feMergeNode').attr('in', 'glow');\n\n    return filterId;\n};\n\nexport const createGlowWithMatrix = (filterSelector) => {\n    let colorMatrix = '0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0';\n\n    filterSelector\n        .attr('x', '-500%')\n        .attr('y', '-500%')\n        .attr('width', '1800%')\n        .attr('height', '1800%');\n\n    filterSelector\n        .append('feColorMatrix')\n        .attr('type', 'matrix')\n        .attr('values', colorMatrix);\n\n    filterSelector\n        .append('feGaussianBlur')\n        .attr('stdDeviation', '1')\n        .attr('result', 'coloredBlur')\n        .attr('in', 'SourceGraphic');\n\n    let merge = filterSelector.append('feMerge');\n\n    merge.append('feMergeNode').attr('in', 'coloredBlur');\n\n    merge.append('feMergeNode').attr('in', 'SourceGraphic');\n\n    return filterId;\n};\n\nexport const createWhiteGlow = (filterSelector) => {\n    filterSelector\n        .attr('x', '-5000%')\n        .attr('y', '-5000%')\n        .attr('width', '10000%')\n        .attr('height', '10000%');\n\n    filterSelector\n        .append('feFlood')\n        .attr('result', 'flood')\n        .attr('flood-color', '#ffffff')\n        .attr('flood-opacity', '1');\n\n    filterSelector\n        .append('feComposite')\n        .attr('result', 'mask')\n        .attr('in2', 'SourceGraphic')\n        .attr('operator', 'in')\n        .attr('in', 'flood');\n\n    filterSelector\n        .append('feMorphology')\n        .attr('result', 'dilated')\n        .attr('operator', 'dilate')\n        .attr('radius', '2')\n        .attr('in', 'mask');\n\n    filterSelector\n        .append('feGaussianBlur')\n        .attr('result', 'blurred')\n        .attr('stdDeviation', '5')\n        .attr('in', 'dilated');\n\n    let merge = filterSelector.append('feMerge');\n\n    merge.append('feMergeNode').attr('in', 'blurred');\n\n    merge.append('feMergeNode').attr('in', 'SourceGraphic');\n\n    return filterId;\n};\n\nexport const bounceCircleHighlight = (\n    el,\n    ease,\n    radius,\n    bounceRadius = radius * 2\n) => {\n    const duration = 100;\n    const delay = 50;\n\n    el.transition()\n        .ease(ease)\n        .duration(duration)\n        .attr('r', bounceRadius)\n        .transition()\n        .ease(ease)\n        .delay(delay)\n        .duration(duration)\n        .attr('r', radius);\n};\n\nexport default {\n    bounceCircleHighlight,\n    createFilterContainer,\n    createGausianBlur,\n    createWhiteGlow,\n    createGlow,\n    createGlowWithMatrix,\n};\n","/**\n * Helps process a class array or set of classes\n * @param {*} classArr      Class array or set of classes\n * @returns                 Methods to get the class array as a list of classes or CSS selectors\n * @private\n */\nexport function classArray(classArr) {\n    classArr = Array.isArray(classArr) ? classArr : [...arguments];\n\n    return {\n        asList: () => classArr.join(' '),\n        asSelector: () => '.' + classArr.join('.'),\n    };\n}\n\nexport default {\n    classArray,\n};\n","import * as d3Format from 'd3-format';\n\nconst REQUIRED_LOCALE_DEFINITION_KEYS = [\n    'decimal',\n    'thousands',\n    'grouping',\n    'currency',\n];\nconst WRONG_LOCALE_OBJECT_MESSAGE =\n    'Please pass in a valid locale object definition';\n\n/**\n * Sets the given locale as the new default locale through d3-format's formatDefaultLocale\n * When an object is used, it simply uses it to set the new locale.\n * @param  {LocaleObject} locale    The desired locale object\n * @return {Object}                 Object with a 'format' and 'formatPrefix' functions\n * @private\n */\nexport const setDefaultLocale = (locale) => {\n    if (isValidLocaleDefinition(locale)) {\n        return d3Format.formatDefaultLocale(locale);\n    } else {\n        throw new Error(WRONG_LOCALE_OBJECT_MESSAGE);\n    }\n};\n\n/**\n * Checks if a locale definition object contains the required keys\n * @param  {LocaleObject}  locale   Locale to check\n * @return {Boolean}                Is the locale definition has a correct format (https://cdn.jsdelivr.net/npm/d3-format/locale/en-US.json)\n * @private\n */\nconst isValidLocaleDefinition = (locale) => {\n    return (\n        typeof locale == 'object' &&\n        REQUIRED_LOCALE_DEFINITION_KEYS.every((localeKey) =>\n            locale.hasOwnProperty(localeKey)\n        )\n    );\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__44__;","module.exports = __WEBPACK_EXTERNAL_MODULE__47__;","import { min, max } from 'd3-array';\nimport { axisLeft, axisBottom } from 'd3-axis';\nimport { dispatch } from 'd3-dispatch';\nimport { easeCircleIn } from 'd3-ease';\nimport * as d3Format from 'd3-format';\nimport { timeFormat } from 'd3-time-format';\nimport { scaleSqrt, scaleOrdinal, scaleLinear } from 'd3-scale';\nimport { curveBasis, line } from 'd3-shape';\nimport { select, mouse } from 'd3-selection';\nimport { voronoi } from 'd3-voronoi';\nimport { zoom as d3Zoom, zoomTransform } from 'd3-zoom';\nimport 'd3-transition';\n\nimport { exportChart } from '../helpers/export';\nimport colorHelper from '../helpers/color';\nimport {\n    createFilterContainer,\n    createGlowWithMatrix,\n    bounceCircleHighlight,\n} from '../helpers/filter';\nimport { calcLinearRegression } from '../helpers/number';\nimport { setDefaultLocale } from '../helpers/locale';\nimport { motion } from '../helpers/constants';\nimport { gridHorizontal, gridVertical } from '../helpers/grid';\n\n/**\n * Reusable Scatter Plot API class that renders a\n * simple and configurable scatter chart.\n *\n * @module Scatter-plot\n * @tutorial scatter-plot\n * @requires d3-array, d3-axis, d3-dispatch, d3-format, d3-ease, d3-scale, d3-selection, d3-shape, d3-voronoi\n *\n * @example\n * let scatterPlot = scatterPlot();\n *\n * scatterPlot\n *     .grid('horizontal')\n *     .width(500);\n *\n * d3Selection.select('.css-selector')\n *     .datum(dataset)\n *     .call(scatterPlot);\n */\n\n/**\n * @typedef ScatterPlotData\n * @type {Object[]}\n * @property {String} name      Name of the category or topic for data point\n * @property {Number} x         Data point's position value relative to x-axis\n * @property {Number} y         Data point's position value relative to y-axis\n *\n * @example\n * [\n *     {\n *         name: 'topic',\n *         x: 123,\n *         y: 24,\n *     },\n *     {\n *         name: 'topic1',\n *         x: 53,\n *         y: 31,\n *     },\n *     {\n *         name: 'topic2',\n *         x: 631,\n *         y: 321,\n *     },\n *     {\n *         name: 'topic1',\n *         x: 231,\n *         y: 111,\n *     }\n * ]\n */\nexport default function module() {\n    let margin = {\n            top: 20,\n            right: 10,\n            bottom: 20,\n            left: 40,\n        },\n        width = 960,\n        height = 500,\n        nameToColorMap = null,\n        dataPoints,\n        xKey = 'x',\n        yKey = 'y',\n        nameKey = 'name',\n        xTicks = 6,\n        yTicks = null,\n        tickPadding = 5,\n        hollowColor = '#fff',\n        grid = null,\n        baseLine,\n        maskGridLines,\n        voronoiMesh,\n        xAxis,\n        xAxisFormatType = 'number',\n        xAxisFormat = '',\n        xScale,\n        xOriginalScale,\n        yAxis,\n        yAxisFormat = '',\n        yScale,\n        yOriginalScale,\n        areaScale,\n        colorScale,\n        yAxisLabel,\n        yAxisLabelEl,\n        yAxisLabelOffset = -50,\n        xAxisLabel,\n        xAxisLabelEl,\n        xAxisLabelOffset = -50,\n        minZoom = 0.5,\n        maxZoom = 20,\n        trendLinePath,\n        trendLineCurve = curveBasis,\n        trendLineStrokWidth = '2',\n        trendLineDelay = 1500,\n        trendLineDuration = 2000,\n        highlightPointData,\n        highlightFilter,\n        highlightFilterId,\n        highlightStrokeWidth = 10,\n        highlightCrossHairContainer,\n        highlightCrossHairLabelsContainer,\n        highlightTextLegendOffset = -45,\n        xAxisPadding = {\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0,\n        },\n        circleOpacity = 0.24,\n        circleStrokeOpacity = 1,\n        circleStrokeWidth = 1,\n        highlightCircle = null,\n        highlightCircleOpacity = circleOpacity,\n        maxCircleArea = 10,\n        maskingRectangle,\n        maskingRectangleId = 'scatter-clip-path',\n        colorSchema = colorHelper.colorSchemas.britecharts,\n        isAnimated = false,\n        hasCrossHairs = false,\n        hasTrendline = false,\n        enableZoom = false,\n        ease = easeCircleIn,\n        delay = 500,\n        duration = motion.duration,\n        hasHollowCircles = false,\n        locale = null,\n        localeFormatter = d3Format,\n        svg,\n        chartWidth,\n        chartHeight,\n        dispatcher = dispatch(\n            'customClick',\n            'customMouseMove',\n            'customMouseOver',\n            'customMouseOut'\n        ),\n        getName = ({ name }) => name,\n        getPointData = ({ data }) => data;\n\n    /**\n     * This function creates the graph using the selection as container\n     * @param  {D3Selection} _selection A d3 selection that represents\n     *                                  the container(s) where the chart(s) will be rendered\n     * @param {ScatterPlotData} _data The data to attach and generate the chart\n     */\n    function exports(_selection) {\n        if (locale) {\n            localeFormatter = setDefaultLocale(locale);\n        }\n\n        _selection.each(function (_data) {\n            dataPoints = cleanData(_data);\n\n            chartWidth = width - margin.left - margin.right;\n            chartHeight = height - margin.top - margin.bottom;\n\n            buildScales();\n            buildSVG(this);\n            buildAxis(localeFormatter);\n            buildVoronoi();\n            drawAxis();\n            drawGridLines();\n            initHighlightComponents();\n            drawDataPoints();\n            drawMaskingClip();\n            initZoom();\n\n            if (hasTrendline) {\n                drawTrendline(calcLinearRegression(dataPoints));\n            }\n\n            addMouseEvents();\n        });\n    }\n\n    /**\n     * Add mouse event handlers over svg\n     * @return {void}\n     * @private\n     */\n    function addMouseEvents() {\n        svg.on('mousemove', function (d) {\n            handleMouseMove(this, d);\n        })\n            .on('mouseover', function (d) {\n                handleMouseOver(this, d);\n            })\n            .on('mouseout', function (d) {\n                handleMouseOut(this, d);\n            })\n            .on('click', function () {\n                handleClick(this);\n            });\n    }\n\n    /**\n     * Creates the x-axis and y-axis with proper orientations\n     * @return {void}\n     * @private\n     */\n    function buildAxis(localeFormatter) {\n        xAxis = axisBottom(xScale)\n            .ticks(xTicks)\n            .tickPadding(tickPadding)\n            .tickFormat(getXAxisFormat());\n\n        yAxis = axisLeft(yScale)\n            .ticks(yTicks)\n            .tickPadding(tickPadding)\n            .tickFormat(localeFormatter.format(yAxisFormat));\n    }\n\n    /**\n     * Builds containers for the chart, including the chart axis,\n     * chart, and metadata groups.\n     * @return {void}\n     * @private\n     */\n    function buildContainerGroups() {\n        let container = svg\n            .append('g')\n            .classed('container-group', true)\n            .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n        container.append('g').classed('grid-lines-group', true);\n        container.append('g').classed('chart-group', true);\n        container\n            .append('g')\n            .classed('x-axis-group', true)\n            .append('g')\n            .classed('axis x', true);\n        container\n            .append('g')\n            .classed('y-axis-group', true)\n            .append('g')\n            .classed('axis y', true);\n        container.append('g').classed('axis-labels-group', true);\n        container.append('g').classed('metadata-group', true);\n    }\n\n    /**\n     * Draws the voronoi component in the chart.\n     * @return {void}\n     * @private\n     */\n    function buildVoronoi() {\n        voronoiMesh = voronoi()\n            .x((d) => xScale(d.x))\n            .y((d) => yScale(d.y))\n            .extent([\n                [0, 0],\n                [chartWidth, chartHeight],\n            ])(dataPoints);\n    }\n\n    /**\n     * Creates the x and y scales of the chart\n     * @return {void}\n     * @private\n     */\n    function buildScales() {\n        const [minX, minY] = [\n            min(dataPoints, ({ x }) => x),\n            min(dataPoints, ({ y }) => y),\n        ];\n        const [maxX, maxY] = [\n            max(dataPoints, ({ x }) => x),\n            max(dataPoints, ({ y }) => y),\n        ];\n        const yScaleBottomValue = Math.abs(minY) < 0 ? Math.abs(minY) : 0;\n\n        xOriginalScale = xScale = scaleLinear()\n            .domain([minX, maxX])\n            .rangeRound([0, chartWidth])\n            .nice();\n\n        yOriginalScale = yScale = scaleLinear()\n            .domain([yScaleBottomValue, maxY])\n            .rangeRound([chartHeight, 0])\n            .nice();\n\n        colorScale = scaleOrdinal()\n            .domain(dataPoints.map(getName))\n            .range(colorSchema);\n\n        areaScale = scaleSqrt()\n            .domain([yScaleBottomValue, maxY])\n            .range([0, maxCircleArea]);\n\n        const colorRange = colorScale.range();\n\n        /**\n         * Maps data point category name to\n         * each color of the given color scheme\n         * {\n         *     name1: 'color1',\n         *     name2: 'color2',\n         *     name3: 'color3',\n         *     ...\n         * }\n         */\n        nameToColorMap =\n            nameToColorMap ||\n            colorScale.domain().reduce((accum, item, i) => {\n                accum[item] = colorRange[i];\n\n                return accum;\n            }, {});\n    }\n\n    /**\n     * Builds the SVG element that will contain the chart\n     * @param {HTMLElement} container A DOM element that will work as\n     * the container of the chart\n     * @return {void}\n     * @private\n     */\n    function buildSVG(container) {\n        if (!svg) {\n            svg = select(container)\n                .append('svg')\n                .classed('britechart scatter-plot', true);\n\n            buildContainerGroups();\n        }\n\n        svg.attr('viewBox', [0, 0, width, height])\n            .attr('style', 'max-width: 100%; height: auto; height: intrinsic;')\n            .attr('width', width)\n            .attr('height', height);\n    }\n\n    /**\n     * Cleaning data casting the values and names to the proper type while keeping\n     * the rest of properties on the data\n     * @param  {ScatterPlotData} originalData  Raw data as passed to the container\n     * @return  {ScatterPlotData}              Clean data\n     * @private\n     */\n    function cleanData(originalData) {\n        return originalData.reduce((acc, d) => {\n            d.name = String(d[nameKey]);\n            d.x = d[xKey];\n            d.y = d[yKey];\n\n            return [...acc, d];\n        }, []);\n    }\n\n    /**\n     * Draws the x and y axis on the svg object within their\n     * respective groups along with their axis labels\n     * @return {void}\n     * @private\n     */\n    function drawAxis() {\n        svg.select('.x-axis-group .axis.x')\n            .attr('transform', `translate(0, ${chartHeight})`)\n            .call(xAxis);\n\n        svg.select('.y-axis-group .axis.y').call(yAxis);\n\n        drawAxisLabels();\n    }\n\n    /**\n     * Draws axis labels next to x and y axis to\n     * represent data value labels on the chart\n     * @return {void}\n     * @private\n     */\n    function drawAxisLabels() {\n        // If y-axis label is given, draw it\n        if (yAxisLabel) {\n            if (yAxisLabelEl) {\n                svg.selectAll('.y-axis-label-text').remove();\n            }\n\n            yAxisLabelEl = svg\n                .select('.axis-labels-group')\n                .append('g')\n                .attr('class', 'y-axis-label')\n                .append('text')\n                .classed('y-axis-label-text', true)\n                .attr('x', -chartHeight / 2)\n                .attr('y', yAxisLabelOffset - xAxisPadding.left)\n                .attr('text-anchor', 'middle')\n                .attr('transform', 'rotate(270 0 0)')\n                .text(yAxisLabel);\n        }\n\n        // If x-axis label is given, draw it\n        if (xAxisLabel) {\n            if (xAxisLabelEl) {\n                svg.selectAll('.x-axis-label-text').remove();\n            }\n\n            xAxisLabelEl = svg\n                .selectAll('.axis-labels-group')\n                .append('g')\n                .attr('class', 'x-axis-label')\n                .append('text')\n                .classed('x-axis-label-text', true)\n                .attr('x', chartWidth / 2)\n                .attr('y', chartHeight - xAxisLabelOffset)\n                .attr('text-anchor', 'middle')\n                .text(xAxisLabel);\n        }\n    }\n\n    /**\n     * Draws a masking clip for data points/circles\n     * to refer to. This will allow dots to have lower priority\n     * in the DOM.\n     * @return {void}\n     * @private\n     */\n    function drawMaskingClip() {\n        maskingRectangle = svg\n            .selectAll('.chart-group')\n            .append('clipPath')\n            .attr('id', maskingRectangleId)\n            .append('rect')\n            .attr('width', chartWidth)\n            .attr('height', chartHeight)\n            .attr('x', 0)\n            .attr('y', -1 * maxCircleArea);\n    }\n\n    /**\n     * Add Zoom control and event handling\n     * @return {void}\n     * @private\n     */\n    function initZoom() {\n        if (!enableZoom) {\n            return;\n        }\n\n        const zoom = d3Zoom();\n        zoom.scaleExtent([minZoom, maxZoom]) // This control how much you can unzoom (x0.5) and zoom (x20)\n            .extent([\n                [0, 0],\n                [width, height],\n            ])\n            .on('zoom', updateChartAfterZoom);\n\n        // This add an invisible rect on top of the chart area. This rect can recover pointer events: necessary to understand when the user zoom\n        svg.append('rect')\n            .attr('class', 'zoom')\n            .attr('width', chartWidth)\n            .attr('height', chartHeight)\n            .style('fill', 'none')\n            .style('pointer-events', 'all')\n            .attr('transform', `translate(${margin.left}, ${margin.top})`)\n            .call(zoom);\n    }\n\n    /**\n     * Update chart elements after zoom events\n     * @return {void}\n     * @private\n     */\n    function updateChartAfterZoom(data, index, elements) {\n        //update scale\n        const transform = zoomTransform(elements[0]);\n        xScale = transform.rescaleX(xOriginalScale);\n        yScale = transform.rescaleY(yOriginalScale);\n        //update axes\n        xAxis.scale(xScale);\n        yAxis.scale(yScale);\n        svg.select('.x-axis-group .axis.x').call(xAxis);\n        svg.select('.y-axis-group .axis.y').call(yAxis);\n\n        // update circle position\n        svg.select('.chart-group')\n            .selectAll('circle')\n            .attr('cx', (d) => xScale(d.x))\n            .attr('cy', (d) => yScale(d.y));\n\n        // update highlight location\n        highlightCircle\n            .attr('cx', () => xScale(highlightPointData.x))\n            .attr('cy', () => yScale(highlightPointData.y));\n    }\n\n    /**\n     * Draws a trend line given the data that contains\n     * and y params from calculated y-intercept and slope\n     * using linear regression formula.\n     * @param {Object} linearData\n     * @returns {void}\n     * @private\n     */\n    function drawTrendline(linearData) {\n        if (trendLinePath) {\n            trendLinePath.remove();\n        }\n\n        const params = [\n            {\n                x: linearData.x1,\n                y: linearData.y1,\n            },\n            {\n                x: linearData.x2,\n                y: linearData.y2,\n            },\n        ];\n\n        let trendLine = line()\n            .curve(trendLineCurve)\n            .x(({ x }) => xScale(x))\n            .y(({ y }) => yScale(y));\n\n        trendLinePath = svg\n            .selectAll('.chart-group')\n            .append('path')\n            .attr('class', 'scatter-trendline')\n            .attr('d', trendLine(params))\n            .attr('stroke', colorSchema[0])\n            .attr('stroke-width', trendLineStrokWidth)\n            .attr('fill', 'none');\n\n        const totalLength = trendLinePath.node().pathLength;\n\n        trendLinePath\n            .attr('stroke-dasharray', `${totalLength} ${totalLength}`)\n            .attr('stroke-dashoffset', totalLength)\n            .transition()\n            .delay(trendLineDelay)\n            .duration(trendLineDuration)\n            .ease(ease)\n            .attr('stroke-dashoffset', 0);\n    }\n\n    /**\n     * Draws vertical gridlines of the chart\n     * These gridlines are parallel to y-axis\n     * @return {void}\n     * @private\n     */\n    function drawVerticalGridLines() {\n        const grid = gridVertical(xScale)\n            .range([0, chartHeight])\n            .hideEdges('first')\n            .ticks(xTicks);\n\n        grid(svg.select('.grid-lines-group'));\n\n        drawVerticalExtendedLine();\n    }\n\n    /**\n     * Draws a vertical line to extend y-axis till the edges\n     * @return {void}\n     */\n    function drawVerticalExtendedLine() {\n        baseLine = svg\n            .select('.grid-lines-group')\n            .selectAll('line.extended-y-line')\n            .data([0])\n            .enter()\n            .append('line')\n            .attr('class', 'extended-y-line')\n            .attr('y1', xAxisPadding.bottom)\n            .attr('y2', chartHeight)\n            .attr('x1', 0)\n            .attr('x2', 0);\n    }\n\n    /**\n     * Draws the points for each data element on the chart group\n     * @return {void}\n     * @private\n     */\n    function drawDataPoints() {\n        let circles = svg\n            .select('.chart-group')\n            .attr('clip-path', `url(#${maskingRectangleId})`)\n            .selectAll('circle')\n            .data(dataPoints)\n            .enter();\n\n        if (isAnimated) {\n            circles\n                .append('circle')\n                .attr('class', 'data-point')\n                .transition()\n                .delay(delay)\n                .duration(duration)\n                .ease(ease)\n                .attr('stroke-opacity', circleStrokeOpacity)\n                .attr('stroke-width', circleStrokeWidth)\n                .style('stroke', (d) => nameToColorMap[d.name])\n                .attr('fill', (d) =>\n                    hasHollowCircles ? hollowColor : nameToColorMap[d.name]\n                )\n                .attr('fill-opacity', circleOpacity)\n                .attr('r', (d) => areaScale(d.y))\n                .attr('cx', (d) => xScale(d.x))\n                .attr('cy', (d) => yScale(d.y))\n                .style('cursor', 'pointer');\n        } else {\n            circles\n                .append('circle')\n                .attr('class', 'data-point')\n                .attr('stroke-opacity', circleStrokeOpacity)\n                .attr('stroke-width', circleStrokeWidth)\n                .style('stroke', (d) => nameToColorMap[d.name])\n                .attr('fill', (d) =>\n                    hasHollowCircles ? hollowColor : nameToColorMap[d.name]\n                )\n                .attr('fill-opacity', circleOpacity)\n                .attr('r', (d) => areaScale(d.y))\n                .attr('cx', (d) => xScale(d.x))\n                .attr('cy', (d) => yScale(d.y))\n                .style('cursor', 'pointer');\n        }\n\n        // Exit\n        circles.exit().remove();\n    }\n\n    /**\n     * Draws the crosshair lines and label components\n     * given the coordinates and name of the data point\n     * @param {Object} dataPoint\n     * @return {void}\n     * @private\n     */\n    function drawDataPointsValueHighlights(data) {\n        showCrossHairComponentsWithLabels(true);\n\n        // Draw line perpendicular to y-axis\n        highlightCrossHairContainer\n            .selectAll('line.highlight-y-line')\n            .attr('stroke', nameToColorMap[data.name])\n            .attr('class', 'highlight-y-line')\n            .attr('x1', xScale(data.x) - areaScale(data.y))\n            .attr('x2', 0)\n            .attr('y1', yScale(data.y))\n            .attr('y2', yScale(data.y));\n\n        // Draw line perpendicular to x-axis\n        highlightCrossHairContainer\n            .selectAll('line.highlight-x-line')\n            .attr('stroke', nameToColorMap[data.name])\n            .attr('class', 'highlight-x-line')\n            .attr('x1', xScale(data.x))\n            .attr('x2', xScale(data.x))\n            .attr('y1', yScale(data.y) + areaScale(data.y))\n            .attr('y2', chartHeight);\n\n        // Draw data label for y value\n        highlightCrossHairLabelsContainer\n            .selectAll('text.highlight-y-legend')\n            .attr('text-anchor', 'middle')\n            .attr('fill', nameToColorMap[data.name])\n            .attr('class', 'highlight-y-legend')\n            .attr('y', yScale(data.y) + areaScale(data.y) / 2)\n            .attr('x', highlightTextLegendOffset)\n            .text(`${localeFormatter.format(yAxisFormat)(data.y)}`);\n\n        // Draw data label for x value\n        highlightCrossHairLabelsContainer\n            .selectAll('text.highlight-x-legend')\n            .attr('text-anchor', 'middle')\n            .attr('fill', nameToColorMap[data.name])\n            .attr('class', 'highlight-x-legend')\n            .attr(\n                'transform',\n                `translate(0, ${chartHeight - highlightTextLegendOffset})`\n            )\n            .attr('x', xScale(data.x) - areaScale(data.y) / 2)\n            .text(`${getXAxisFormat()(data.x)}`);\n    }\n\n    /**\n     * Draws grid lines on the background of the chart\n     * @return {void}\n     * @private\n     */\n    function drawGridLines() {\n        svg.select('.grid-lines-group').selectAll('grid').remove();\n\n        if (grid === 'horizontal' || grid === 'full') {\n            drawHorizontalGridLines();\n        }\n\n        if (grid === 'vertical' || grid === 'full') {\n            drawVerticalGridLines();\n        }\n    }\n\n    /**\n     * Draws a vertical line to extend x-axis till the edges\n     * @return {void}\n     * @private\n     */\n    function drawHorizontalExtendedLine() {\n        baseLine = svg\n            .select('.grid-lines-group')\n            .selectAll('line.extended-x-line')\n            .data([0])\n            .enter()\n            .append('line')\n            .attr('class', 'extended-x-line')\n            .attr('x1', xAxisPadding.left)\n            .attr('x2', chartWidth)\n            .attr('y1', chartHeight)\n            .attr('y2', chartHeight);\n    }\n\n    /**\n     * Draw horizontal gridles of the chart\n     * These gridlines are parallel to x-axis\n     * @return {void}\n     * @private\n     */\n    function drawHorizontalGridLines() {\n        const grid = gridHorizontal(yScale)\n            .range([0, chartWidth])\n            .hideEdges('first')\n            .ticks(yTicks);\n\n        grid(svg.select('.grid-lines-group'));\n\n        drawHorizontalExtendedLine();\n    }\n\n    /**\n     * Finds the closest point to the current mouse position\n     * @param {SVGHtmlElement} svg\n     * @private\n     */\n    function getClosestPoint(svg) {\n        let mousePos = mouse(svg);\n\n        mousePos[0] -= margin.left;\n        mousePos[1] -= margin.top;\n\n        return voronoiMesh.find(mousePos[0], mousePos[1]);\n    }\n\n    /**\n     * Gets the formatter function for x-Axis based on `xAxisFormatType` setter\n     * Applies `timeFormat` formatter function if custom `xAxisFormatType`\n     * that is not equal to 'number' is provided\n     * @return {function(String): String}\n     * @private\n     */\n    function getXAxisFormat() {\n        if (xAxisFormatType === 'number') {\n            return d3Format.format(xAxisFormat);\n        } else {\n            return timeFormat(xAxisFormat);\n        }\n    }\n\n    /**\n     * Handler called on mousemove event\n     * @return {void}\n     * @private\n     */\n    function handleMouseMove(e) {\n        const closestPoint = getClosestPoint(e);\n        const pointData = getPointData(closestPoint);\n\n        if (hasCrossHairs) {\n            drawDataPointsValueHighlights(pointData);\n        }\n\n        highlightDataPoint(pointData);\n\n        dispatcher.call('customMouseMove', e, pointData, mouse(e), [\n            chartWidth,\n            chartHeight,\n        ]);\n    }\n\n    /**\n     * Handler called on mouseover event\n     * @return {void}\n     * @private\n     */\n    function handleMouseOver(e, d) {\n        dispatcher.call('customMouseOver', e, d, mouse(e));\n    }\n\n    /**\n     * Handler called on mouseout event\n     * @return {void}\n     * @private\n     */\n    function handleMouseOut(e, d) {\n        removePointHighlight();\n\n        if (hasCrossHairs) {\n            showCrossHairComponentsWithLabels(false);\n        }\n        dispatcher.call('customMouseOut', e, d, mouse(e));\n    }\n\n    /**\n     * Custom onClick event handler\n     * @return {void}\n     * @private\n     */\n    function handleClick(e) {\n        const closestPoint = getClosestPoint(e);\n        const d = getPointData(closestPoint);\n\n        handleClickAnimation(d);\n\n        dispatcher.call('customClick', e, d, mouse(e), [\n            chartWidth,\n            chartHeight,\n        ]);\n    }\n\n    /**\n     * Applies animation on data point click\n     * @param {Object} dataPoint\n     * @return {void}\n     * @private\n     */\n    function handleClickAnimation(dataPoint) {\n        bounceCircleHighlight(\n            highlightCircle,\n            ease,\n            areaScale(dataPoint.y),\n            areaScale(dataPoint.y * 2)\n        );\n    }\n\n    /**\n     * Applies glow to hovered data point\n     * @return {void}\n     * @private\n     */\n    function highlightDataPoint(data) {\n        highlightPointData = data;\n\n        removePointHighlight();\n\n        if (!highlightFilter) {\n            highlightFilter = createFilterContainer(\n                svg.select('.metadata-group')\n            );\n            highlightFilterId = createGlowWithMatrix(highlightFilter);\n        }\n\n        highlightCircle\n            .attr('opacity', 1)\n            .attr('stroke', () => nameToColorMap[data.name])\n            .attr('fill', () => nameToColorMap[data.name])\n            .attr('fill-opacity', circleOpacity)\n            .attr('cx', () => xScale(data.x))\n            .attr('cy', () => yScale(data.y))\n            .attr('r', () => areaScale(data.y))\n            .style('stroke-width', highlightStrokeWidth)\n            .style('stroke-opacity', highlightCircleOpacity);\n\n        // apply glow container overlay\n        highlightCircle.attr('filter', `url(#${highlightFilterId})`);\n    }\n\n    /**\n     * Places the highlighter point to the DOM\n     * to be used once one of the data points is\n     * highlighted\n     * @return {void}\n     * @private\n     */\n    function initHighlightComponents() {\n        highlightCircle = svg\n            .select('.metadata-group')\n            .selectAll('circle.highlight-circle')\n            .data([1])\n            .enter()\n            .append('circle')\n            .attr('class', 'highlight-circle')\n            .attr('cursor', 'pointer');\n\n        if (hasCrossHairs) {\n            // initialize cross hair lines container\n            highlightCrossHairContainer = svg\n                .select('.chart-group')\n                .append('g')\n                .attr('class', 'crosshair-lines-container');\n\n            // initialize corss hair labels container\n            highlightCrossHairLabelsContainer = svg\n                .select('.metadata-group')\n                .append('g')\n                .attr('class', 'crosshair-labels-container');\n\n            highlightCrossHairContainer\n                .selectAll('line.highlight-y-line')\n                .data([1])\n                .enter()\n                .append('line')\n                .attr('class', 'highlight-y-line');\n\n            highlightCrossHairContainer\n                .selectAll('line.highlight-x-line')\n                .data([1])\n                .enter()\n                .append('line')\n                .attr('class', 'highlight-x-line');\n\n            highlightCrossHairLabelsContainer\n                .selectAll('text.highlight-y-legend')\n                .data([1])\n                .enter()\n                .append('text')\n                .attr('class', 'highlight-y-legend');\n\n            highlightCrossHairLabelsContainer\n                .selectAll('text.highlight-x-legend')\n                .data([1])\n                .enter()\n                .append('text')\n                .attr('class', 'highlight-x-legend');\n\n            highlightCrossHairLabelsContainer\n                .selectAll('text.highlight-x-legend')\n                .data([1])\n                .enter()\n                .append('text')\n                .attr('class', 'highlight-x-legend');\n        }\n\n        highlightCircle.exit().remove();\n    }\n\n    /**\n     * Removes higlight data point from chart\n     * @return {void}\n     * @private\n     */\n    function removePointHighlight() {\n        svg.selectAll('circle.highlight-circle').attr('opacity', 0);\n    }\n\n    /**\n     * Sets the visibility of cross hair lines\n     * if 1, it sets lines to visible,\n     * if 0, it hides lines\n     * @param {boolean}\n     * @return {void}\n     * @private\n     */\n    function showCrossHairComponentsWithLabels(status = false) {\n        const opacityIndex = status ? 1 : 0;\n\n        highlightCrossHairContainer.attr('opacity', opacityIndex);\n        highlightCrossHairLabelsContainer.attr('opacity', opacityIndex);\n    }\n\n    // API\n    /**\n     * Gets or Sets the duration of the circle animation\n     * @param  {Number} _x=1200         Desired animation duration for the graph\n     * @return {duration | module}      Current animation duration or Chart module to chain calls\n     * @public\n     */\n    exports.animationDuration = function (_x) {\n        if (!arguments.length) {\n            return duration;\n        }\n        duration = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets each circle's border opacity value of the chart.\n     * It makes each circle border transparent if it's less than 1.\n     * @param  {Number} _x=1            Desired border opacity of circles of the chart\n     * @return {Number | module}           Current circleStrokeOpacity or Chart module to chain calls\n     * @public\n     * @example\n     * scatterPlot.circleStrokeOpacity(0.6)\n     */\n    exports.circleStrokeOpacity = function (_x) {\n        if (!arguments.length) {\n            return circleStrokeOpacity;\n        }\n        circleStrokeOpacity = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets each circle's border width value of the chart.\n     * It makes each circle border transparent if it's less than 1.\n     * @param  {Number} _x=1            Desired border width of circles of the chart\n     * @return {Number | module}           Current circleStrokeWidth or Chart module to chain calls\n     * @public\n     * @example\n     * scatterPlot.circleStrokeWidth(10)\n     */\n    exports.circleStrokeWidth = function (_x) {\n        if (!arguments.length) {\n            return circleStrokeWidth;\n        }\n        circleStrokeWidth = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the circles opacity value of the chart.\n     * Use this to set opacity of a circle for each data point of the chart.\n     * It makes the area of each data point more transparent if it's less than 1.\n     * @param  {Number} _x=0.24            Desired opacity of circles of the chart\n     * @return {Number | module}    Current circleOpacity or Chart module to chain calls\n     * @public\n     * @example\n     * scatterPlot.circleOpacity(0.6)\n     */\n    exports.circleOpacity = function (_x) {\n        if (!arguments.length) {\n            return circleOpacity;\n        }\n        circleOpacity = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the colorMap of the chart\n     * @param  {object} [_x=null]    Color map\n     * @return {object | module}     Current colorMap or Chart module to chain calls\n     * @example scatterPlot.colorMap({name: 'colorHex', name2: 'colorString'})\n     * @public\n     */\n    exports.colorMap = function (_x) {\n        if (!arguments.length) {\n            return nameToColorMap;\n        }\n        nameToColorMap = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the colorSchema of the chart\n     * @param  {String[]} _x         Desired colorSchema for the chart\n     * @return {String[] | module}   Current colorSchema or Chart module to chain calls\n     * @public\n     * @example\n     * scatterPlot.colorSchema(['#fff', '#bbb', '#ccc'])\n     */\n    exports.colorSchema = function (_x) {\n        if (!arguments.length) {\n            return colorSchema;\n        }\n        colorSchema = _x;\n\n        return this;\n    };\n\n    /**\n     * Chart exported to png and a download action is fired\n     * @param {String} filename     File title for the resulting picture\n     * @param {String} title        Title to add at the top of the exported picture\n     * @return {Promise}            Promise that resolves if the chart image was loaded and downloaded successfully\n     * @public\n     */\n    exports.exportChart = function (filename, title) {\n        return exportChart.call(exports, svg, filename, title);\n    };\n\n    /**\n     * Gets or Sets the grid mode.\n     * @param  {String} _x          Desired mode for the grid ('vertical'|'horizontal'|'full')\n     * @return {String | module}    Current mode of the grid or Chart module to chain calls\n     * @public\n     */\n    exports.grid = function (_x) {\n        if (!arguments.length) {\n            return grid;\n        }\n        grid = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the hasCrossHairs status. If true,\n     * the hovered data point will be highlighted with lines\n     * and legend from both x and y axis. The user will see\n     * values for x under x axis line and y under y axis. Lines\n     * will be drawn with respect to highlighted data point\n     * @param  {boolean} _x=false   Desired hasCrossHairs status for chart\n     * @return {boolean | module}   Current hasCrossHairs or Chart module to chain calls\n     * @public\n     */\n    exports.hasCrossHairs = function (_x) {\n        if (!arguments.length) {\n            return hasCrossHairs;\n        }\n        hasCrossHairs = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the hasHollowCircles value of the chart area\n     * @param  {boolean} _x=false    Choose whether chart's data points/circles should be hollow\n     * @return {boolean | module}    Current hasHollowCircles value or Chart module to chain calls\n     * @public\n     */\n    exports.hasHollowCircles = function (_x) {\n        if (!arguments.length) {\n            return hasHollowCircles;\n        }\n        hasHollowCircles = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the hasTrendline value of the chart area\n     * If true, the trendline calculated based off linear regression\n     * formula will be drawn\n     * @param  {boolean} _x=false       Choose whether chart's trendline should be drawn\n     * @return {boolean | module}       Current hasTrendline value or Chart module to chain calls\n     * @public\n     */\n    exports.hasTrendline = function (_x) {\n        if (!arguments.length) {\n            return hasTrendline;\n        }\n        hasTrendline = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets weather the chart support zoom controls\n     * If true, zoom event handling will be added to the chart.\n     * @param  {boolean} _x=false       Choose whether chart should support zoom controls\n     * @return {boolean | module}       Current enableZoom value or Chart module to chain calls\n     * @public\n     */\n    exports.enableZoom = function (_x) {\n        if (!arguments.length) {\n            return enableZoom;\n        }\n        enableZoom = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the height of the chart\n     * @param  {Number} _x          Desired height for the chart\n     * @return {Number | module}    Current height or Chart module to chain calls\n     * @public\n     */\n    exports.height = function (_x) {\n        if (!arguments.length) {\n            return height;\n        }\n        height = _x;\n\n        return this;\n    };\n\n    /**\n     * Sets a custom distance between legend\n     * values with respect to both axises. The legends\n     * show up when hasCrossHairs is true.\n     * @param  {Number} _x          Desired highlightTextLegendOffset for the chart\n     * @return {Number | module}    Current highlightTextLegendOffset or Chart module to chain calls\n     * @public\n     * @example\n     * scatterPlot.highlightTextLegendOffset(-55)\n     */\n    exports.highlightTextLegendOffset = function (_x) {\n        if (!arguments.length) {\n            return highlightTextLegendOffset;\n        }\n        highlightTextLegendOffset = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets isAnimated value. If set to true,\n     * the chart will be initialized or updated with animation.\n     * @param  {boolean} _x=false    Desired isAnimated properties for each side\n     * @return {boolean | module}    Current isAnimated or Chart module to chain calls\n     * @public\n     */\n    exports.isAnimated = function (_x) {\n        if (!arguments.length) {\n            return isAnimated;\n        }\n        isAnimated = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the margin object of the chart\n     * @param  {Object} _x          Desired margin object properties for each side\n     * @return {Object | module}    Current margin or Chart module to chain calls\n     * @public\n     */\n    exports.margin = function (_x) {\n        if (!arguments.length) {\n            return margin;\n        }\n        margin = {\n            ...margin,\n            ..._x,\n        };\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the maximum value of the chart area\n     * @param  {Number} _x=10       Desired margin object properties for each side\n     * @return {Number | module}    Current maxCircleArea or Chart module to chain calls\n     * @public\n     */\n    exports.maxCircleArea = function (_x) {\n        if (!arguments.length) {\n            return maxCircleArea;\n        }\n        maxCircleArea = _x;\n\n        return this;\n    };\n\n    /**\n     * Exposes an 'on' method that acts as a bridge with the event dispatcher\n     * We are going to expose this events:\n     * customClick, customMouseOut, customMouseOver, and customMouseMove\n     * @return {module} Scatter Plot\n     * @public\n     */\n    exports.on = function () {\n        let value = dispatcher.on.apply(dispatcher, arguments);\n\n        return value === dispatcher ? exports : value;\n    };\n\n    /**\n     * Gets or Sets the locale which our formatting functions use.\n     * Check [the d3-format docs]{@link https://github.com/d3/d3-format#formatLocale} for the required values.\n     * @example\n     * scatterPlot\n     *  .locale({thousands: '.', grouping: [3], currency: [\"$\", \"\"], decimal: \".\"})\n     * @param  {LocaleObject}  [_x=null]  _x        Desired locale object format.\n     * @return {LocaleObject | module}              Current locale object or Chart module to chain calls\n     * @public\n     */\n    exports.valueLocale = function (_x) {\n        if (!arguments.length) {\n            return locale;\n        }\n        locale = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the height of the chart\n     * @param  {Number} _x           Desired height for the chart\n     * @return {Number | module}     Current width or Chart module to chain calls\n     * @public\n     */\n    exports.width = function (_x) {\n        if (!arguments.length) {\n            return width;\n        }\n        width = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the xAxisLabel of the chart. Adds a\n     * label bellow x-axis for better clarify of data representation.\n     * @param  {String} _x              Desired string for x-axis label of the chart\n     * @return {String | module}        Current xAxisLabel or Chart module to chain calls\n     * @public\n     */\n    exports.xAxisLabel = function (_x) {\n        if (!arguments.length) {\n            return xAxisLabel;\n        }\n        xAxisLabel = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the offset of the xAxisLabel of the chart.\n     * The method accepts both positive and negative values.\n     * @param  {Number} _x=-40          Desired offset for the label\n     * @return {Number | module}        Current xAxisLabelOffset or Chart module to chain calls\n     * @public\n     * @example scatterPlot.xAxisLabelOffset(-55)\n     */\n    exports.xAxisLabelOffset = function (_x) {\n        if (!arguments.length) {\n            return xAxisLabelOffset;\n        }\n        xAxisLabelOffset = _x;\n\n        return this;\n    };\n\n    /**\n     * Exposes ability to set the format of x-axis values\n     * @param  {String} _x        Desired xAxisFormat for the chart\n     * @return {String | module}  Current xAxisFormat or Chart module to chain calls\n     * @public\n     */\n    exports.xAxisFormat = function (_x) {\n        if (!arguments.length) {\n            return xAxisFormat;\n        }\n        xAxisFormat = _x;\n\n        return this;\n    };\n\n    /**\n     * Exposes ability to set the formatter of x-axis values\n     * @param  {string} _x          type of x-axis formatter\n     * @value 'number'\n     * @value 'time'\n     * @return {string | module}    current xAxisFormatType or Chart module to chain calls\n     * @public\n     */\n    exports.xAxisFormatType = function (_x) {\n        if (!arguments.length) {\n            return xAxisFormatType;\n        }\n        xAxisFormatType = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the xTicks of the chart\n     * @param  {Number} _x         Desired xTicks for the chart\n     * @return {Number | module}   Current xTicks or Chart module to chain calls\n     * @public\n     */\n    exports.xTicks = function (_x) {\n        if (!arguments.length) {\n            return xTicks;\n        }\n        xTicks = _x;\n\n        return this;\n    };\n\n    /**\n     * Exposes ability to set the format of y-axis values\n     * @param  {String} _x          Desired yAxisForma for the chart\n     * @return {String | module}    Current yAxisFormat or Chart module to chain calls\n     * @public\n     */\n    exports.yAxisFormat = function (_x) {\n        if (!arguments.length) {\n            return yAxisFormat;\n        }\n        yAxisFormat = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the y-axis label of the chart\n     * @param  {String} _x          Desired label string\n     * @return {String | module}    Current yAxisLabel or Chart module to chain calls\n     * @public\n     * @example scatterPlot.yAxisLabel('Ice Cream Consmuption Growth')\n     */\n    exports.yAxisLabel = function (_x) {\n        if (!arguments.length) {\n            return yAxisLabel;\n        }\n        yAxisLabel = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the offset of the yAxisLabel of the chart.\n     * The method accepts both positive and negative values.\n     * @param  {Number} _x=-40      Desired offset for the label\n     * @return {Number | module}    Current yAxisLabelOffset or Chart module to chain calls\n     * @public\n     * @example scatterPlot.yAxisLabelOffset(-55)\n     */\n    exports.yAxisLabelOffset = function (_x) {\n        if (!arguments.length) {\n            return yAxisLabelOffset;\n        }\n        yAxisLabelOffset = _x;\n\n        return this;\n    };\n\n    /**\n     * Gets or Sets the xTicks of the chart\n     * @param  {Number} _x          Desired height for the chart\n     * @return {Number | module}    Current yTicks or Chart module to chain calls\n     * @public\n     */\n    exports.yTicks = function (_x) {\n        if (!arguments.length) {\n            return yTicks;\n        }\n        yTicks = _x;\n\n        return this;\n    };\n\n    return exports;\n}\n"],"sourceRoot":""}